20/11/28 18:17:16 INFO SparkContext: Running Spark version 2.1.0
20/11/28 18:17:17 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
20/11/28 18:17:17 INFO SecurityManager: Changing view acls to: macbook
20/11/28 18:17:17 INFO SecurityManager: Changing modify acls to: macbook
20/11/28 18:17:17 INFO SecurityManager: Changing view acls groups to: 
20/11/28 18:17:17 INFO SecurityManager: Changing modify acls groups to: 
20/11/28 18:17:17 INFO SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users  with view permissions: Set(macbook); groups with view permissions: Set(); users  with modify permissions: Set(macbook); groups with modify permissions: Set()
20/11/28 18:17:17 INFO Utils: Successfully started service 'sparkDriver' on port 49471.
20/11/28 18:17:17 INFO SparkEnv: Registering MapOutputTracker
20/11/28 18:17:17 INFO SparkEnv: Registering BlockManagerMaster
20/11/28 18:17:17 INFO BlockManagerMasterEndpoint: Using org.apache.spark.storage.DefaultTopologyMapper for getting topology information
20/11/28 18:17:17 INFO BlockManagerMasterEndpoint: BlockManagerMasterEndpoint up
20/11/28 18:17:17 INFO DiskBlockManager: Created local directory at /private/var/folders/kf/_5bjnbzx49n7xxn3jz9qp8f00000gn/T/blockmgr-64a92873-8cb9-49b6-b4e7-0fdc6b7303f6
20/11/28 18:17:17 INFO MemoryStore: MemoryStore started with capacity 912.3 MB
20/11/28 18:17:18 INFO SparkEnv: Registering OutputCommitCoordinator
20/11/28 18:17:18 INFO Utils: Successfully started service 'SparkUI' on port 4040.
20/11/28 18:17:18 INFO SparkUI: Bound SparkUI to 127.0.0.1, and started at http://127.0.0.1:4040
20/11/28 18:17:18 INFO SparkContext: Added JAR file:/Library/Frameworks/R.framework/Versions/4.0/Resources/library/sparklyr/java/sparklyr-2.0-2.11.jar at spark://127.0.0.1:49471/jars/sparklyr-2.0-2.11.jar with timestamp 1606605438478
20/11/28 18:17:18 INFO Executor: Starting executor ID driver on host localhost
20/11/28 18:17:18 INFO Utils: Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port 49472.
20/11/28 18:17:18 INFO NettyBlockTransferService: Server created on 127.0.0.1:49472
20/11/28 18:17:18 INFO BlockManager: Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy
20/11/28 18:17:18 INFO BlockManagerMaster: Registering BlockManager BlockManagerId(driver, 127.0.0.1, 49472, None)
20/11/28 18:17:18 INFO BlockManagerMasterEndpoint: Registering block manager 127.0.0.1:49472 with 912.3 MB RAM, BlockManagerId(driver, 127.0.0.1, 49472, None)
20/11/28 18:17:18 INFO BlockManagerMaster: Registered BlockManager BlockManagerId(driver, 127.0.0.1, 49472, None)
20/11/28 18:17:18 INFO BlockManager: Initialized BlockManager: BlockManagerId(driver, 127.0.0.1, 49472, None)
20/11/28 18:17:19 INFO SharedState: Warehouse path is 'file:/Volumes/BACKUP/Scripts/R/glb_tst/spark-warehouse'.
20/11/28 18:17:19 INFO HiveUtils: Initializing HiveMetastoreConnection version 1.2.1 using Spark classes.
20/11/28 18:17:20 INFO HiveMetaStore: 0: Opening raw store with implemenation class:org.apache.hadoop.hive.metastore.ObjectStore
20/11/28 18:17:25 INFO ObjectStore: ObjectStore, initialize called
20/11/28 18:17:25 INFO Persistence: Property hive.metastore.integral.jdo.pushdown unknown - will be ignored
20/11/28 18:17:25 INFO Persistence: Property datanucleus.cache.level2 unknown - will be ignored
20/11/28 18:17:27 INFO ObjectStore: Setting MetaStore object pin classes with hive.metastore.cache.pinobjtypes="Table,StorageDescriptor,SerDeInfo,Partition,Database,Type,FieldSchema,Order"
20/11/28 18:17:28 INFO Datastore: The class "org.apache.hadoop.hive.metastore.model.MFieldSchema" is tagged as "embedded-only" so does not have its own datastore table.
20/11/28 18:17:28 INFO Datastore: The class "org.apache.hadoop.hive.metastore.model.MOrder" is tagged as "embedded-only" so does not have its own datastore table.
20/11/28 18:17:29 INFO Datastore: The class "org.apache.hadoop.hive.metastore.model.MFieldSchema" is tagged as "embedded-only" so does not have its own datastore table.
20/11/28 18:17:29 INFO Datastore: The class "org.apache.hadoop.hive.metastore.model.MOrder" is tagged as "embedded-only" so does not have its own datastore table.
20/11/28 18:17:30 INFO MetaStoreDirectSql: Using direct SQL, underlying DB is DERBY
20/11/28 18:17:30 INFO ObjectStore: Initialized ObjectStore
20/11/28 18:17:30 WARN ObjectStore: Version information not found in metastore. hive.metastore.schema.verification is not enabled so recording the schema version 1.2.0
20/11/28 18:17:30 WARN ObjectStore: Failed to get database default, returning NoSuchObjectException
20/11/28 18:17:31 INFO HiveMetaStore: Added admin role in metastore
20/11/28 18:17:31 INFO HiveMetaStore: Added public role in metastore
20/11/28 18:17:31 INFO HiveMetaStore: No user is added in admin role, since config is empty
20/11/28 18:17:31 INFO HiveMetaStore: 0: get_all_databases
20/11/28 18:17:31 INFO audit: ugi=macbook	ip=unknown-ip-addr	cmd=get_all_databases	
20/11/28 18:17:31 INFO HiveMetaStore: 0: get_functions: db=default pat=*
20/11/28 18:17:31 INFO audit: ugi=macbook	ip=unknown-ip-addr	cmd=get_functions: db=default pat=*	
20/11/28 18:17:31 INFO Datastore: The class "org.apache.hadoop.hive.metastore.model.MResourceUri" is tagged as "embedded-only" so does not have its own datastore table.
20/11/28 18:17:31 INFO SessionState: Created HDFS directory: /tmp/hive/macbook
20/11/28 18:17:31 INFO SessionState: Created local directory: /var/folders/kf/_5bjnbzx49n7xxn3jz9qp8f00000gn/T/macbook
20/11/28 18:17:31 INFO SessionState: Created local directory: /var/folders/kf/_5bjnbzx49n7xxn3jz9qp8f00000gn/T/346b5768-9b0b-4d61-9dcd-990d432bdaf6_resources
20/11/28 18:17:31 INFO SessionState: Created HDFS directory: /tmp/hive/macbook/346b5768-9b0b-4d61-9dcd-990d432bdaf6
20/11/28 18:17:31 INFO SessionState: Created local directory: /var/folders/kf/_5bjnbzx49n7xxn3jz9qp8f00000gn/T/macbook/346b5768-9b0b-4d61-9dcd-990d432bdaf6
20/11/28 18:17:31 INFO SessionState: Created HDFS directory: /tmp/hive/macbook/346b5768-9b0b-4d61-9dcd-990d432bdaf6/_tmp_space.db
20/11/28 18:17:31 INFO HiveClientImpl: Warehouse location for Hive client (version 1.2.1) is file:/Volumes/BACKUP/Scripts/R/glb_tst/spark-warehouse
20/11/28 18:17:31 INFO HiveMetaStore: 0: get_database: default
20/11/28 18:17:31 INFO audit: ugi=macbook	ip=unknown-ip-addr	cmd=get_database: default	
20/11/28 18:17:31 INFO HiveMetaStore: 0: get_database: global_temp
20/11/28 18:17:31 INFO audit: ugi=macbook	ip=unknown-ip-addr	cmd=get_database: global_temp	
20/11/28 18:17:31 WARN ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
20/11/28 18:17:34 INFO SparkSqlParser: Parsing command: SHOW TABLES
20/11/28 18:17:35 INFO HiveMetaStore: 0: get_database: default
20/11/28 18:17:35 INFO audit: ugi=macbook	ip=unknown-ip-addr	cmd=get_database: default	
20/11/28 18:17:35 INFO HiveMetaStore: 0: get_database: default
20/11/28 18:17:35 INFO audit: ugi=macbook	ip=unknown-ip-addr	cmd=get_database: default	
20/11/28 18:17:35 INFO HiveMetaStore: 0: get_tables: db=default pat=*
20/11/28 18:17:35 INFO audit: ugi=macbook	ip=unknown-ip-addr	cmd=get_tables: db=default pat=*	
20/11/28 18:17:36 INFO CodeGenerator: Code generated in 502.388225 ms
20/11/28 18:17:36 INFO CodeGenerator: Code generated in 18.488502 ms
20/11/28 18:17:36 INFO SparkContext: Starting job: count at utils.scala:116
20/11/28 18:17:36 INFO DAGScheduler: Registering RDD 3 (count at utils.scala:116)
20/11/28 18:17:36 INFO DAGScheduler: Got job 0 (count at utils.scala:116) with 1 output partitions
20/11/28 18:17:36 INFO DAGScheduler: Final stage: ResultStage 1 (count at utils.scala:116)
20/11/28 18:17:36 INFO DAGScheduler: Parents of final stage: List(ShuffleMapStage 0)
20/11/28 18:17:36 INFO DAGScheduler: Missing parents: List(ShuffleMapStage 0)
20/11/28 18:17:36 INFO DAGScheduler: Submitting ShuffleMapStage 0 (MapPartitionsRDD[3] at count at utils.scala:116), which has no missing parents
20/11/28 18:17:37 INFO MemoryStore: Block broadcast_0 stored as values in memory (estimated size 8.9 KB, free 912.3 MB)
20/11/28 18:17:37 INFO MemoryStore: Block broadcast_0_piece0 stored as bytes in memory (estimated size 4.6 KB, free 912.3 MB)
20/11/28 18:17:37 INFO BlockManagerInfo: Added broadcast_0_piece0 in memory on 127.0.0.1:49472 (size: 4.6 KB, free: 912.3 MB)
20/11/28 18:17:37 INFO SparkContext: Created broadcast 0 from broadcast at DAGScheduler.scala:996
20/11/28 18:17:37 INFO ContextCleaner: Cleaned accumulator 0
20/11/28 18:17:37 INFO DAGScheduler: Submitting 1 missing tasks from ShuffleMapStage 0 (MapPartitionsRDD[3] at count at utils.scala:116)
20/11/28 18:17:37 INFO TaskSchedulerImpl: Adding task set 0.0 with 1 tasks
20/11/28 18:17:37 INFO TaskSetManager: Starting task 0.0 in stage 0.0 (TID 0, localhost, executor driver, partition 0, PROCESS_LOCAL, 6060 bytes)
20/11/28 18:17:37 INFO Executor: Running task 0.0 in stage 0.0 (TID 0)
20/11/28 18:17:37 INFO Executor: Fetching spark://127.0.0.1:49471/jars/sparklyr-2.0-2.11.jar with timestamp 1606605438478
20/11/28 18:17:37 INFO TransportClientFactory: Successfully created connection to /127.0.0.1:49471 after 21 ms (0 ms spent in bootstraps)
20/11/28 18:17:37 INFO Utils: Fetching spark://127.0.0.1:49471/jars/sparklyr-2.0-2.11.jar to /private/var/folders/kf/_5bjnbzx49n7xxn3jz9qp8f00000gn/T/spark-8afa09b3-f615-4b6f-9bff-22bfb5709832/userFiles-946a4eff-9d77-4869-b977-1dfc4823e009/fetchFileTemp6493851368734834628.tmp
20/11/28 18:17:37 INFO Executor: Adding file:/private/var/folders/kf/_5bjnbzx49n7xxn3jz9qp8f00000gn/T/spark-8afa09b3-f615-4b6f-9bff-22bfb5709832/userFiles-946a4eff-9d77-4869-b977-1dfc4823e009/sparklyr-2.0-2.11.jar to class loader
20/11/28 18:17:37 INFO CodeGenerator: Code generated in 30.787932 ms
20/11/28 18:17:37 INFO Executor: Finished task 0.0 in stage 0.0 (TID 0). 1893 bytes result sent to driver
20/11/28 18:17:37 INFO TaskSetManager: Finished task 0.0 in stage 0.0 (TID 0) in 428 ms on localhost (executor driver) (1/1)
20/11/28 18:17:37 INFO TaskSchedulerImpl: Removed TaskSet 0.0, whose tasks have all completed, from pool 
20/11/28 18:17:37 INFO DAGScheduler: ShuffleMapStage 0 (count at utils.scala:116) finished in 0.459 s
20/11/28 18:17:37 INFO DAGScheduler: looking for newly runnable stages
20/11/28 18:17:37 INFO DAGScheduler: running: Set()
20/11/28 18:17:37 INFO DAGScheduler: waiting: Set(ResultStage 1)
20/11/28 18:17:37 INFO DAGScheduler: failed: Set()
20/11/28 18:17:37 INFO DAGScheduler: Submitting ResultStage 1 (MapPartitionsRDD[6] at count at utils.scala:116), which has no missing parents
20/11/28 18:17:37 INFO MemoryStore: Block broadcast_1 stored as values in memory (estimated size 7.0 KB, free 912.3 MB)
20/11/28 18:17:37 INFO MemoryStore: Block broadcast_1_piece0 stored as bytes in memory (estimated size 3.7 KB, free 912.3 MB)
20/11/28 18:17:37 INFO BlockManagerInfo: Added broadcast_1_piece0 in memory on 127.0.0.1:49472 (size: 3.7 KB, free: 912.3 MB)
20/11/28 18:17:37 INFO SparkContext: Created broadcast 1 from broadcast at DAGScheduler.scala:996
20/11/28 18:17:37 INFO DAGScheduler: Submitting 1 missing tasks from ResultStage 1 (MapPartitionsRDD[6] at count at utils.scala:116)
20/11/28 18:17:37 INFO TaskSchedulerImpl: Adding task set 1.0 with 1 tasks
20/11/28 18:17:37 INFO TaskSetManager: Starting task 0.0 in stage 1.0 (TID 1, localhost, executor driver, partition 0, ANY, 5945 bytes)
20/11/28 18:17:37 INFO Executor: Running task 0.0 in stage 1.0 (TID 1)
20/11/28 18:17:37 INFO ShuffleBlockFetcherIterator: Getting 1 non-empty blocks out of 1 blocks
20/11/28 18:17:37 INFO ShuffleBlockFetcherIterator: Started 0 remote fetches in 11 ms
20/11/28 18:17:37 INFO Executor: Finished task 0.0 in stage 1.0 (TID 1). 2035 bytes result sent to driver
20/11/28 18:17:37 INFO TaskSetManager: Finished task 0.0 in stage 1.0 (TID 1) in 74 ms on localhost (executor driver) (1/1)
20/11/28 18:17:37 INFO TaskSchedulerImpl: Removed TaskSet 1.0, whose tasks have all completed, from pool 
20/11/28 18:17:37 INFO DAGScheduler: ResultStage 1 (count at utils.scala:116) finished in 0.075 s
20/11/28 18:17:37 INFO DAGScheduler: Job 0 finished: count at utils.scala:116, took 0.882870 s
20/11/28 18:17:37 INFO CodeGenerator: Code generated in 14.159527 ms
20/11/28 18:17:37 INFO SparkSqlParser: Parsing command: SHOW TABLES
20/11/28 18:17:37 INFO HiveMetaStore: 0: get_database: default
20/11/28 18:17:37 INFO audit: ugi=macbook	ip=unknown-ip-addr	cmd=get_database: default	
20/11/28 18:17:37 INFO HiveMetaStore: 0: get_database: default
20/11/28 18:17:37 INFO audit: ugi=macbook	ip=unknown-ip-addr	cmd=get_database: default	
20/11/28 18:17:37 INFO HiveMetaStore: 0: get_tables: db=default pat=*
20/11/28 18:17:37 INFO audit: ugi=macbook	ip=unknown-ip-addr	cmd=get_tables: db=default pat=*	
20/11/28 18:17:38 INFO SparkContext: Starting job: count at utils.scala:116
20/11/28 18:17:38 INFO DAGScheduler: Registering RDD 10 (count at utils.scala:116)
20/11/28 18:17:38 INFO DAGScheduler: Got job 1 (count at utils.scala:116) with 1 output partitions
20/11/28 18:17:38 INFO DAGScheduler: Final stage: ResultStage 3 (count at utils.scala:116)
20/11/28 18:17:38 INFO DAGScheduler: Parents of final stage: List(ShuffleMapStage 2)
20/11/28 18:17:38 INFO DAGScheduler: Missing parents: List(ShuffleMapStage 2)
20/11/28 18:17:38 INFO DAGScheduler: Submitting ShuffleMapStage 2 (MapPartitionsRDD[10] at count at utils.scala:116), which has no missing parents
20/11/28 18:17:38 INFO MemoryStore: Block broadcast_2 stored as values in memory (estimated size 8.9 KB, free 912.3 MB)
20/11/28 18:17:38 INFO MemoryStore: Block broadcast_2_piece0 stored as bytes in memory (estimated size 4.6 KB, free 912.3 MB)
20/11/28 18:17:38 INFO BlockManagerInfo: Added broadcast_2_piece0 in memory on 127.0.0.1:49472 (size: 4.6 KB, free: 912.3 MB)
20/11/28 18:17:38 INFO SparkContext: Created broadcast 2 from broadcast at DAGScheduler.scala:996
20/11/28 18:17:38 INFO DAGScheduler: Submitting 1 missing tasks from ShuffleMapStage 2 (MapPartitionsRDD[10] at count at utils.scala:116)
20/11/28 18:17:38 INFO TaskSchedulerImpl: Adding task set 2.0 with 1 tasks
20/11/28 18:17:38 INFO TaskSetManager: Starting task 0.0 in stage 2.0 (TID 2, localhost, executor driver, partition 0, PROCESS_LOCAL, 6060 bytes)
20/11/28 18:17:38 INFO Executor: Running task 0.0 in stage 2.0 (TID 2)
20/11/28 18:17:38 INFO Executor: Finished task 0.0 in stage 2.0 (TID 2). 1806 bytes result sent to driver
20/11/28 18:17:38 INFO TaskSetManager: Finished task 0.0 in stage 2.0 (TID 2) in 34 ms on localhost (executor driver) (1/1)
20/11/28 18:17:38 INFO TaskSchedulerImpl: Removed TaskSet 2.0, whose tasks have all completed, from pool 
20/11/28 18:17:38 INFO DAGScheduler: ShuffleMapStage 2 (count at utils.scala:116) finished in 0.036 s
20/11/28 18:17:38 INFO DAGScheduler: looking for newly runnable stages
20/11/28 18:17:38 INFO DAGScheduler: running: Set()
20/11/28 18:17:38 INFO DAGScheduler: waiting: Set(ResultStage 3)
20/11/28 18:17:38 INFO DAGScheduler: failed: Set()
20/11/28 18:17:38 INFO DAGScheduler: Submitting ResultStage 3 (MapPartitionsRDD[13] at count at utils.scala:116), which has no missing parents
20/11/28 18:17:38 INFO MemoryStore: Block broadcast_3 stored as values in memory (estimated size 7.0 KB, free 912.3 MB)
20/11/28 18:17:38 INFO MemoryStore: Block broadcast_3_piece0 stored as bytes in memory (estimated size 3.7 KB, free 912.3 MB)
20/11/28 18:17:38 INFO BlockManagerInfo: Added broadcast_3_piece0 in memory on 127.0.0.1:49472 (size: 3.7 KB, free: 912.3 MB)
20/11/28 18:17:38 INFO SparkContext: Created broadcast 3 from broadcast at DAGScheduler.scala:996
20/11/28 18:17:38 INFO DAGScheduler: Submitting 1 missing tasks from ResultStage 3 (MapPartitionsRDD[13] at count at utils.scala:116)
20/11/28 18:17:38 INFO TaskSchedulerImpl: Adding task set 3.0 with 1 tasks
20/11/28 18:17:38 INFO TaskSetManager: Starting task 0.0 in stage 3.0 (TID 3, localhost, executor driver, partition 0, ANY, 5945 bytes)
20/11/28 18:17:38 INFO Executor: Running task 0.0 in stage 3.0 (TID 3)
20/11/28 18:17:38 INFO ShuffleBlockFetcherIterator: Getting 1 non-empty blocks out of 1 blocks
20/11/28 18:17:38 INFO ShuffleBlockFetcherIterator: Started 0 remote fetches in 1 ms
20/11/28 18:17:38 INFO Executor: Finished task 0.0 in stage 3.0 (TID 3). 2122 bytes result sent to driver
20/11/28 18:17:38 INFO TaskSetManager: Finished task 0.0 in stage 3.0 (TID 3) in 15 ms on localhost (executor driver) (1/1)
20/11/28 18:17:38 INFO TaskSchedulerImpl: Removed TaskSet 3.0, whose tasks have all completed, from pool 
20/11/28 18:17:38 INFO DAGScheduler: ResultStage 3 (count at utils.scala:116) finished in 0.016 s
20/11/28 18:17:38 INFO DAGScheduler: Job 1 finished: count at utils.scala:116, took 0.080663 s
20/11/28 18:19:44 INFO SparkSqlParser: Parsing command: SHOW TABLES
20/11/28 18:19:44 INFO HiveMetaStore: 0: get_database: default
20/11/28 18:19:44 INFO audit: ugi=macbook	ip=unknown-ip-addr	cmd=get_database: default	
20/11/28 18:19:44 INFO HiveMetaStore: 0: get_database: default
20/11/28 18:19:44 INFO audit: ugi=macbook	ip=unknown-ip-addr	cmd=get_database: default	
20/11/28 18:19:44 INFO HiveMetaStore: 0: get_tables: db=default pat=*
20/11/28 18:19:44 INFO audit: ugi=macbook	ip=unknown-ip-addr	cmd=get_tables: db=default pat=*	
20/11/28 18:19:44 INFO CodeGenerator: Code generated in 10.459789 ms
20/11/28 18:19:44 INFO SparkContext: Starting job: collect at utils.scala:46
20/11/28 18:19:44 INFO DAGScheduler: Got job 2 (collect at utils.scala:46) with 1 output partitions
20/11/28 18:19:44 INFO DAGScheduler: Final stage: ResultStage 4 (collect at utils.scala:46)
20/11/28 18:19:44 INFO DAGScheduler: Parents of final stage: List()
20/11/28 18:19:44 INFO DAGScheduler: Missing parents: List()
20/11/28 18:19:44 INFO DAGScheduler: Submitting ResultStage 4 (MapPartitionsRDD[19] at map at utils.scala:43), which has no missing parents
20/11/28 18:19:44 INFO MemoryStore: Block broadcast_4 stored as values in memory (estimated size 8.7 KB, free 912.2 MB)
20/11/28 18:19:44 INFO MemoryStore: Block broadcast_4_piece0 stored as bytes in memory (estimated size 4.6 KB, free 912.2 MB)
20/11/28 18:19:44 INFO BlockManagerInfo: Added broadcast_4_piece0 in memory on 127.0.0.1:49472 (size: 4.6 KB, free: 912.3 MB)
20/11/28 18:19:44 INFO SparkContext: Created broadcast 4 from broadcast at DAGScheduler.scala:996
20/11/28 18:19:44 INFO DAGScheduler: Submitting 1 missing tasks from ResultStage 4 (MapPartitionsRDD[19] at map at utils.scala:43)
20/11/28 18:19:44 INFO TaskSchedulerImpl: Adding task set 4.0 with 1 tasks
20/11/28 18:19:44 INFO TaskSetManager: Starting task 0.0 in stage 4.0 (TID 4, localhost, executor driver, partition 0, PROCESS_LOCAL, 6042 bytes)
20/11/28 18:19:44 INFO Executor: Running task 0.0 in stage 4.0 (TID 4)
20/11/28 18:19:44 INFO CodeGenerator: Code generated in 11.741885 ms
20/11/28 18:19:44 INFO Executor: Finished task 0.0 in stage 4.0 (TID 4). 1318 bytes result sent to driver
20/11/28 18:19:44 INFO TaskSetManager: Finished task 0.0 in stage 4.0 (TID 4) in 34 ms on localhost (executor driver) (1/1)
20/11/28 18:19:44 INFO TaskSchedulerImpl: Removed TaskSet 4.0, whose tasks have all completed, from pool 
20/11/28 18:19:44 INFO DAGScheduler: ResultStage 4 (collect at utils.scala:46) finished in 0.035 s
20/11/28 18:19:44 INFO DAGScheduler: Job 2 finished: collect at utils.scala:46, took 0.045686 s
20/11/28 18:19:47 INFO BlockManagerInfo: Removed broadcast_4_piece0 on 127.0.0.1:49472 in memory (size: 4.6 KB, free: 912.3 MB)
20/11/28 18:19:47 INFO ContextCleaner: Cleaned accumulator 219
20/11/28 18:19:47 INFO ContextCleaner: Cleaned accumulator 218
20/11/28 18:19:47 INFO BlockManagerInfo: Removed broadcast_3_piece0 on 127.0.0.1:49472 in memory (size: 3.7 KB, free: 912.3 MB)
20/11/28 18:19:47 INFO BlockManagerInfo: Removed broadcast_2_piece0 on 127.0.0.1:49472 in memory (size: 4.6 KB, free: 912.3 MB)
20/11/28 18:19:47 INFO ContextCleaner: Cleaned shuffle 1
20/11/28 18:19:47 INFO ContextCleaner: Cleaned accumulator 121
20/11/28 18:19:47 INFO ContextCleaner: Cleaned accumulator 120
20/11/28 18:19:47 INFO ContextCleaner: Cleaned accumulator 119
20/11/28 18:19:47 INFO ContextCleaner: Cleaned accumulator 118
20/11/28 18:19:47 INFO ContextCleaner: Cleaned accumulator 117
20/11/28 18:19:47 INFO ContextCleaner: Cleaned accumulator 116
20/11/28 18:19:47 INFO ContextCleaner: Cleaned accumulator 115
20/11/28 18:19:47 INFO ContextCleaner: Cleaned accumulator 114
20/11/28 18:19:47 INFO ContextCleaner: Cleaned accumulator 113
20/11/28 18:19:47 INFO ContextCleaner: Cleaned accumulator 112
20/11/28 18:19:47 INFO ContextCleaner: Cleaned accumulator 111
20/11/28 18:19:47 INFO ContextCleaner: Cleaned accumulator 110
20/11/28 18:19:47 INFO ContextCleaner: Cleaned accumulator 109
20/11/28 18:19:47 INFO BlockManagerInfo: Removed broadcast_1_piece0 on 127.0.0.1:49472 in memory (size: 3.7 KB, free: 912.3 MB)
20/11/28 18:19:47 INFO BlockManagerInfo: Removed broadcast_0_piece0 on 127.0.0.1:49472 in memory (size: 4.6 KB, free: 912.3 MB)
20/11/28 18:19:47 INFO ContextCleaner: Cleaned shuffle 0
20/11/28 18:19:47 INFO ContextCleaner: Cleaned accumulator 12
20/11/28 18:19:47 INFO ContextCleaner: Cleaned accumulator 11
20/11/28 18:19:47 INFO ContextCleaner: Cleaned accumulator 10
20/11/28 18:19:47 INFO ContextCleaner: Cleaned accumulator 9
20/11/28 18:19:47 INFO ContextCleaner: Cleaned accumulator 8
20/11/28 18:19:47 INFO ContextCleaner: Cleaned accumulator 7
20/11/28 18:19:47 INFO ContextCleaner: Cleaned accumulator 6
20/11/28 18:19:47 INFO ContextCleaner: Cleaned accumulator 5
20/11/28 18:19:47 INFO ContextCleaner: Cleaned accumulator 4
20/11/28 18:19:47 INFO ContextCleaner: Cleaned accumulator 3
20/11/28 18:19:47 INFO ContextCleaner: Cleaned accumulator 2
20/11/28 18:19:47 INFO ContextCleaner: Cleaned accumulator 1
20/11/28 18:19:49 INFO SparkSqlParser: Parsing command: tbl
20/11/28 18:19:49 INFO SparkSqlParser: Parsing command: SELECT *
FROM `tbl` AS `q01`
WHERE (0 = 1)
20/11/28 18:19:49 INFO SparkSqlParser: Parsing command: SELECT *
FROM `tbl`
20/11/28 18:19:49 WARN Utils: Truncated the string representation of a plan since it was too large. This behavior can be adjusted by setting 'spark.debug.maxToStringFields' in SparkEnv.conf.
20/11/28 18:19:49 INFO SparkSqlParser: Parsing command: SELECT *
FROM `tbl` AS `q01`
WHERE (0 = 1)
20/11/28 18:19:50 INFO SparkSqlParser: Parsing command: SHOW TABLES
20/11/28 18:19:50 INFO HiveMetaStore: 0: get_database: default
20/11/28 18:19:50 INFO audit: ugi=macbook	ip=unknown-ip-addr	cmd=get_database: default	
20/11/28 18:19:50 INFO HiveMetaStore: 0: get_database: default
20/11/28 18:19:50 INFO audit: ugi=macbook	ip=unknown-ip-addr	cmd=get_database: default	
20/11/28 18:19:50 INFO HiveMetaStore: 0: get_tables: db=default pat=*
20/11/28 18:19:50 INFO audit: ugi=macbook	ip=unknown-ip-addr	cmd=get_tables: db=default pat=*	
20/11/28 18:19:50 INFO CodeGenerator: Code generated in 17.27784 ms
20/11/28 18:19:50 INFO SparkContext: Starting job: count at utils.scala:116
20/11/28 18:19:50 INFO DAGScheduler: Registering RDD 27 (count at utils.scala:116)
20/11/28 18:19:50 INFO DAGScheduler: Got job 3 (count at utils.scala:116) with 1 output partitions
20/11/28 18:19:50 INFO DAGScheduler: Final stage: ResultStage 6 (count at utils.scala:116)
20/11/28 18:19:50 INFO DAGScheduler: Parents of final stage: List(ShuffleMapStage 5)
20/11/28 18:19:50 INFO DAGScheduler: Missing parents: List(ShuffleMapStage 5)
20/11/28 18:19:50 INFO DAGScheduler: Submitting ShuffleMapStage 5 (MapPartitionsRDD[27] at count at utils.scala:116), which has no missing parents
20/11/28 18:19:50 INFO MemoryStore: Block broadcast_5 stored as values in memory (estimated size 8.9 KB, free 912.3 MB)
20/11/28 18:19:50 INFO MemoryStore: Block broadcast_5_piece0 stored as bytes in memory (estimated size 4.7 KB, free 912.3 MB)
20/11/28 18:19:50 INFO BlockManagerInfo: Added broadcast_5_piece0 in memory on 127.0.0.1:49472 (size: 4.7 KB, free: 912.3 MB)
20/11/28 18:19:50 INFO SparkContext: Created broadcast 5 from broadcast at DAGScheduler.scala:996
20/11/28 18:19:50 INFO DAGScheduler: Submitting 1 missing tasks from ShuffleMapStage 5 (MapPartitionsRDD[27] at count at utils.scala:116)
20/11/28 18:19:50 INFO TaskSchedulerImpl: Adding task set 5.0 with 1 tasks
20/11/28 18:19:50 INFO TaskSetManager: Starting task 0.0 in stage 5.0 (TID 5, localhost, executor driver, partition 0, PROCESS_LOCAL, 6370 bytes)
20/11/28 18:19:50 INFO Executor: Running task 0.0 in stage 5.0 (TID 5)
20/11/28 18:19:50 INFO Executor: Finished task 0.0 in stage 5.0 (TID 5). 1806 bytes result sent to driver
20/11/28 18:19:50 INFO TaskSetManager: Finished task 0.0 in stage 5.0 (TID 5) in 17 ms on localhost (executor driver) (1/1)
20/11/28 18:19:50 INFO TaskSchedulerImpl: Removed TaskSet 5.0, whose tasks have all completed, from pool 
20/11/28 18:19:50 INFO DAGScheduler: ShuffleMapStage 5 (count at utils.scala:116) finished in 0.019 s
20/11/28 18:19:50 INFO DAGScheduler: looking for newly runnable stages
20/11/28 18:19:50 INFO DAGScheduler: running: Set()
20/11/28 18:19:50 INFO DAGScheduler: waiting: Set(ResultStage 6)
20/11/28 18:19:50 INFO DAGScheduler: failed: Set()
20/11/28 18:19:50 INFO DAGScheduler: Submitting ResultStage 6 (MapPartitionsRDD[30] at count at utils.scala:116), which has no missing parents
20/11/28 18:19:50 INFO MemoryStore: Block broadcast_6 stored as values in memory (estimated size 7.0 KB, free 912.3 MB)
20/11/28 18:19:50 INFO MemoryStore: Block broadcast_6_piece0 stored as bytes in memory (estimated size 3.7 KB, free 912.3 MB)
20/11/28 18:19:50 INFO BlockManagerInfo: Added broadcast_6_piece0 in memory on 127.0.0.1:49472 (size: 3.7 KB, free: 912.3 MB)
20/11/28 18:19:50 INFO SparkContext: Created broadcast 6 from broadcast at DAGScheduler.scala:996
20/11/28 18:19:50 INFO DAGScheduler: Submitting 1 missing tasks from ResultStage 6 (MapPartitionsRDD[30] at count at utils.scala:116)
20/11/28 18:19:50 INFO TaskSchedulerImpl: Adding task set 6.0 with 1 tasks
20/11/28 18:19:50 INFO TaskSetManager: Starting task 0.0 in stage 6.0 (TID 6, localhost, executor driver, partition 0, ANY, 5945 bytes)
20/11/28 18:19:50 INFO Executor: Running task 0.0 in stage 6.0 (TID 6)
20/11/28 18:19:50 INFO ShuffleBlockFetcherIterator: Getting 1 non-empty blocks out of 1 blocks
20/11/28 18:19:50 INFO ShuffleBlockFetcherIterator: Started 0 remote fetches in 1 ms
20/11/28 18:19:50 INFO Executor: Finished task 0.0 in stage 6.0 (TID 6). 2042 bytes result sent to driver
20/11/28 18:19:50 INFO TaskSetManager: Finished task 0.0 in stage 6.0 (TID 6) in 10 ms on localhost (executor driver) (1/1)
20/11/28 18:19:50 INFO TaskSchedulerImpl: Removed TaskSet 6.0, whose tasks have all completed, from pool 
20/11/28 18:19:50 INFO DAGScheduler: ResultStage 6 (count at utils.scala:116) finished in 0.011 s
20/11/28 18:19:50 INFO DAGScheduler: Job 3 finished: count at utils.scala:116, took 0.049685 s
20/11/28 18:20:48 INFO SparkSqlParser: Parsing command: SELECT *
FROM `tbl`
20/11/28 18:20:48 INFO SparkSqlParser: Parsing command: sparklyr_tmp_8543c0c4_df42_42b8_add5_1fe1e44333b1
20/11/28 18:20:48 INFO SparkSqlParser: Parsing command: SELECT *
FROM `sparklyr_tmp_8543c0c4_df42_42b8_add5_1fe1e44333b1` AS `q01`
WHERE (0 = 1)
20/11/28 18:20:48 INFO SparkSqlParser: Parsing command: sparklyr_tmp_a07bab87_6c71_4fa0_87f3_f8d589c72bba
20/11/28 18:20:48 INFO SparkSqlParser: Parsing command: SELECT *
FROM `sparklyr_tmp_a07bab87_6c71_4fa0_87f3_f8d589c72bba` AS `q02`
WHERE (0 = 1)
20/11/28 18:23:39 INFO SparkContext: Invoking stop() from shutdown hook
20/11/28 18:23:39 INFO SparkUI: Stopped Spark web UI at http://127.0.0.1:4040
20/11/28 18:23:39 INFO MapOutputTrackerMasterEndpoint: MapOutputTrackerMasterEndpoint stopped!
20/11/28 18:23:39 INFO MemoryStore: MemoryStore cleared
20/11/28 18:23:39 INFO BlockManager: BlockManager stopped
20/11/28 18:23:39 INFO BlockManagerMaster: BlockManagerMaster stopped
20/11/28 18:23:39 INFO OutputCommitCoordinator$OutputCommitCoordinatorEndpoint: OutputCommitCoordinator stopped!
20/11/28 18:23:39 INFO SparkContext: Successfully stopped SparkContext
20/11/28 18:23:39 INFO ShutdownHookManager: Shutdown hook called
20/11/28 18:23:39 INFO ShutdownHookManager: Deleting directory /private/var/folders/kf/_5bjnbzx49n7xxn3jz9qp8f00000gn/T/spark-8afa09b3-f615-4b6f-9bff-22bfb5709832
20/11/28 21:09:44 INFO SparkContext: Running Spark version 2.1.0
20/11/28 21:09:45 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
20/11/28 21:09:45 INFO SecurityManager: Changing view acls to: macbook
20/11/28 21:09:45 INFO SecurityManager: Changing modify acls to: macbook
20/11/28 21:09:45 INFO SecurityManager: Changing view acls groups to: 
20/11/28 21:09:45 INFO SecurityManager: Changing modify acls groups to: 
20/11/28 21:09:45 INFO SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users  with view permissions: Set(macbook); groups with view permissions: Set(); users  with modify permissions: Set(macbook); groups with modify permissions: Set()
20/11/28 21:09:45 INFO Utils: Successfully started service 'sparkDriver' on port 49602.
20/11/28 21:09:45 INFO SparkEnv: Registering MapOutputTracker
20/11/28 21:09:45 INFO SparkEnv: Registering BlockManagerMaster
20/11/28 21:09:45 INFO BlockManagerMasterEndpoint: Using org.apache.spark.storage.DefaultTopologyMapper for getting topology information
20/11/28 21:09:45 INFO BlockManagerMasterEndpoint: BlockManagerMasterEndpoint up
20/11/28 21:09:45 INFO DiskBlockManager: Created local directory at /private/var/folders/kf/_5bjnbzx49n7xxn3jz9qp8f00000gn/T/blockmgr-97a49197-027c-4bad-968b-212b7dc76fe1
20/11/28 21:09:45 INFO MemoryStore: MemoryStore started with capacity 912.3 MB
20/11/28 21:09:45 INFO SparkEnv: Registering OutputCommitCoordinator
20/11/28 21:09:46 INFO Utils: Successfully started service 'SparkUI' on port 4040.
20/11/28 21:09:46 INFO SparkUI: Bound SparkUI to 127.0.0.1, and started at http://127.0.0.1:4040
20/11/28 21:09:46 INFO SparkContext: Added JAR file:/Library/Frameworks/R.framework/Versions/4.0/Resources/library/sparklyr/java/sparklyr-2.0-2.11.jar at spark://127.0.0.1:49602/jars/sparklyr-2.0-2.11.jar with timestamp 1606615786379
20/11/28 21:09:46 INFO Executor: Starting executor ID driver on host localhost
20/11/28 21:09:46 INFO Utils: Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port 49604.
20/11/28 21:09:46 INFO NettyBlockTransferService: Server created on 127.0.0.1:49604
20/11/28 21:09:46 INFO BlockManager: Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy
20/11/28 21:09:46 INFO BlockManagerMaster: Registering BlockManager BlockManagerId(driver, 127.0.0.1, 49604, None)
20/11/28 21:09:46 INFO BlockManagerMasterEndpoint: Registering block manager 127.0.0.1:49604 with 912.3 MB RAM, BlockManagerId(driver, 127.0.0.1, 49604, None)
20/11/28 21:09:46 INFO BlockManagerMaster: Registered BlockManager BlockManagerId(driver, 127.0.0.1, 49604, None)
20/11/28 21:09:46 INFO BlockManager: Initialized BlockManager: BlockManagerId(driver, 127.0.0.1, 49604, None)
20/11/28 21:09:46 INFO SharedState: Warehouse path is 'file:/Volumes/BACKUP/Scripts/R/glb_tst/spark-warehouse'.
20/11/28 21:09:47 INFO HiveUtils: Initializing HiveMetastoreConnection version 1.2.1 using Spark classes.
20/11/28 21:09:48 INFO HiveMetaStore: 0: Opening raw store with implemenation class:org.apache.hadoop.hive.metastore.ObjectStore
20/11/28 21:09:53 INFO ObjectStore: ObjectStore, initialize called
20/11/28 21:09:53 INFO Persistence: Property hive.metastore.integral.jdo.pushdown unknown - will be ignored
20/11/28 21:09:53 INFO Persistence: Property datanucleus.cache.level2 unknown - will be ignored
20/11/28 21:09:55 INFO ObjectStore: Setting MetaStore object pin classes with hive.metastore.cache.pinobjtypes="Table,StorageDescriptor,SerDeInfo,Partition,Database,Type,FieldSchema,Order"
20/11/28 21:09:57 INFO Datastore: The class "org.apache.hadoop.hive.metastore.model.MFieldSchema" is tagged as "embedded-only" so does not have its own datastore table.
20/11/28 21:09:57 INFO Datastore: The class "org.apache.hadoop.hive.metastore.model.MOrder" is tagged as "embedded-only" so does not have its own datastore table.
20/11/28 21:09:58 INFO Datastore: The class "org.apache.hadoop.hive.metastore.model.MFieldSchema" is tagged as "embedded-only" so does not have its own datastore table.
20/11/28 21:09:58 INFO Datastore: The class "org.apache.hadoop.hive.metastore.model.MOrder" is tagged as "embedded-only" so does not have its own datastore table.
20/11/28 21:09:58 INFO MetaStoreDirectSql: Using direct SQL, underlying DB is DERBY
20/11/28 21:09:58 INFO ObjectStore: Initialized ObjectStore
20/11/28 21:09:58 WARN ObjectStore: Version information not found in metastore. hive.metastore.schema.verification is not enabled so recording the schema version 1.2.0
20/11/28 21:09:58 WARN ObjectStore: Failed to get database default, returning NoSuchObjectException
20/11/28 21:09:59 INFO HiveMetaStore: Added admin role in metastore
20/11/28 21:09:59 INFO HiveMetaStore: Added public role in metastore
20/11/28 21:09:59 INFO HiveMetaStore: No user is added in admin role, since config is empty
20/11/28 21:09:59 INFO HiveMetaStore: 0: get_all_databases
20/11/28 21:09:59 INFO audit: ugi=macbook	ip=unknown-ip-addr	cmd=get_all_databases	
20/11/28 21:09:59 INFO HiveMetaStore: 0: get_functions: db=default pat=*
20/11/28 21:09:59 INFO audit: ugi=macbook	ip=unknown-ip-addr	cmd=get_functions: db=default pat=*	
20/11/28 21:09:59 INFO Datastore: The class "org.apache.hadoop.hive.metastore.model.MResourceUri" is tagged as "embedded-only" so does not have its own datastore table.
20/11/28 21:09:59 INFO SessionState: Created HDFS directory: /tmp/hive/macbook
20/11/28 21:09:59 INFO SessionState: Created local directory: /var/folders/kf/_5bjnbzx49n7xxn3jz9qp8f00000gn/T/macbook
20/11/28 21:09:59 INFO SessionState: Created local directory: /var/folders/kf/_5bjnbzx49n7xxn3jz9qp8f00000gn/T/35858d0f-8aa2-473f-80ce-c56b26193890_resources
20/11/28 21:09:59 INFO SessionState: Created HDFS directory: /tmp/hive/macbook/35858d0f-8aa2-473f-80ce-c56b26193890
20/11/28 21:09:59 INFO SessionState: Created local directory: /var/folders/kf/_5bjnbzx49n7xxn3jz9qp8f00000gn/T/macbook/35858d0f-8aa2-473f-80ce-c56b26193890
20/11/28 21:09:59 INFO SessionState: Created HDFS directory: /tmp/hive/macbook/35858d0f-8aa2-473f-80ce-c56b26193890/_tmp_space.db
20/11/28 21:09:59 INFO HiveClientImpl: Warehouse location for Hive client (version 1.2.1) is file:/Volumes/BACKUP/Scripts/R/glb_tst/spark-warehouse
20/11/28 21:09:59 INFO HiveMetaStore: 0: get_database: default
20/11/28 21:09:59 INFO audit: ugi=macbook	ip=unknown-ip-addr	cmd=get_database: default	
20/11/28 21:10:00 INFO HiveMetaStore: 0: get_database: global_temp
20/11/28 21:10:00 INFO audit: ugi=macbook	ip=unknown-ip-addr	cmd=get_database: global_temp	
20/11/28 21:10:00 WARN ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
20/11/28 21:10:02 INFO SparkSqlParser: Parsing command: SHOW TABLES
20/11/28 21:10:03 INFO HiveMetaStore: 0: get_database: default
20/11/28 21:10:03 INFO audit: ugi=macbook	ip=unknown-ip-addr	cmd=get_database: default	
20/11/28 21:10:03 INFO HiveMetaStore: 0: get_database: default
20/11/28 21:10:03 INFO audit: ugi=macbook	ip=unknown-ip-addr	cmd=get_database: default	
20/11/28 21:10:03 INFO HiveMetaStore: 0: get_tables: db=default pat=*
20/11/28 21:10:03 INFO audit: ugi=macbook	ip=unknown-ip-addr	cmd=get_tables: db=default pat=*	
20/11/28 21:10:04 INFO CodeGenerator: Code generated in 477.923876 ms
20/11/28 21:10:04 INFO CodeGenerator: Code generated in 21.137665 ms
20/11/28 21:10:05 INFO SparkContext: Starting job: count at utils.scala:116
20/11/28 21:10:05 INFO DAGScheduler: Registering RDD 3 (count at utils.scala:116)
20/11/28 21:10:05 INFO DAGScheduler: Got job 0 (count at utils.scala:116) with 1 output partitions
20/11/28 21:10:05 INFO DAGScheduler: Final stage: ResultStage 1 (count at utils.scala:116)
20/11/28 21:10:05 INFO DAGScheduler: Parents of final stage: List(ShuffleMapStage 0)
20/11/28 21:10:05 INFO DAGScheduler: Missing parents: List(ShuffleMapStage 0)
20/11/28 21:10:05 INFO DAGScheduler: Submitting ShuffleMapStage 0 (MapPartitionsRDD[3] at count at utils.scala:116), which has no missing parents
20/11/28 21:10:05 INFO ContextCleaner: Cleaned accumulator 0
20/11/28 21:10:05 INFO MemoryStore: Block broadcast_0 stored as values in memory (estimated size 8.9 KB, free 912.3 MB)
20/11/28 21:10:05 INFO MemoryStore: Block broadcast_0_piece0 stored as bytes in memory (estimated size 4.6 KB, free 912.3 MB)
20/11/28 21:10:05 INFO BlockManagerInfo: Added broadcast_0_piece0 in memory on 127.0.0.1:49604 (size: 4.6 KB, free: 912.3 MB)
20/11/28 21:10:05 INFO SparkContext: Created broadcast 0 from broadcast at DAGScheduler.scala:996
20/11/28 21:10:05 INFO DAGScheduler: Submitting 1 missing tasks from ShuffleMapStage 0 (MapPartitionsRDD[3] at count at utils.scala:116)
20/11/28 21:10:05 INFO TaskSchedulerImpl: Adding task set 0.0 with 1 tasks
20/11/28 21:10:05 INFO TaskSetManager: Starting task 0.0 in stage 0.0 (TID 0, localhost, executor driver, partition 0, PROCESS_LOCAL, 6060 bytes)
20/11/28 21:10:05 INFO Executor: Running task 0.0 in stage 0.0 (TID 0)
20/11/28 21:10:05 INFO Executor: Fetching spark://127.0.0.1:49602/jars/sparklyr-2.0-2.11.jar with timestamp 1606615786379
20/11/28 21:10:05 INFO TransportClientFactory: Successfully created connection to /127.0.0.1:49602 after 20 ms (0 ms spent in bootstraps)
20/11/28 21:10:05 INFO Utils: Fetching spark://127.0.0.1:49602/jars/sparklyr-2.0-2.11.jar to /private/var/folders/kf/_5bjnbzx49n7xxn3jz9qp8f00000gn/T/spark-305bcce2-d420-46fa-b5f8-5330f4bb7098/userFiles-4a4c55da-de13-485c-833f-97d31bbe4fcc/fetchFileTemp1096654728848936848.tmp
20/11/28 21:10:05 INFO Executor: Adding file:/private/var/folders/kf/_5bjnbzx49n7xxn3jz9qp8f00000gn/T/spark-305bcce2-d420-46fa-b5f8-5330f4bb7098/userFiles-4a4c55da-de13-485c-833f-97d31bbe4fcc/sparklyr-2.0-2.11.jar to class loader
20/11/28 21:10:05 INFO CodeGenerator: Code generated in 22.305027 ms
20/11/28 21:10:05 INFO Executor: Finished task 0.0 in stage 0.0 (TID 0). 1893 bytes result sent to driver
20/11/28 21:10:05 INFO TaskSetManager: Finished task 0.0 in stage 0.0 (TID 0) in 364 ms on localhost (executor driver) (1/1)
20/11/28 21:10:05 INFO TaskSchedulerImpl: Removed TaskSet 0.0, whose tasks have all completed, from pool 
20/11/28 21:10:05 INFO DAGScheduler: ShuffleMapStage 0 (count at utils.scala:116) finished in 0.391 s
20/11/28 21:10:05 INFO DAGScheduler: looking for newly runnable stages
20/11/28 21:10:05 INFO DAGScheduler: running: Set()
20/11/28 21:10:05 INFO DAGScheduler: waiting: Set(ResultStage 1)
20/11/28 21:10:05 INFO DAGScheduler: failed: Set()
20/11/28 21:10:05 INFO DAGScheduler: Submitting ResultStage 1 (MapPartitionsRDD[6] at count at utils.scala:116), which has no missing parents
20/11/28 21:10:05 INFO MemoryStore: Block broadcast_1 stored as values in memory (estimated size 7.0 KB, free 912.3 MB)
20/11/28 21:10:05 INFO MemoryStore: Block broadcast_1_piece0 stored as bytes in memory (estimated size 3.7 KB, free 912.3 MB)
20/11/28 21:10:05 INFO BlockManagerInfo: Added broadcast_1_piece0 in memory on 127.0.0.1:49604 (size: 3.7 KB, free: 912.3 MB)
20/11/28 21:10:05 INFO SparkContext: Created broadcast 1 from broadcast at DAGScheduler.scala:996
20/11/28 21:10:05 INFO DAGScheduler: Submitting 1 missing tasks from ResultStage 1 (MapPartitionsRDD[6] at count at utils.scala:116)
20/11/28 21:10:05 INFO TaskSchedulerImpl: Adding task set 1.0 with 1 tasks
20/11/28 21:10:05 INFO TaskSetManager: Starting task 0.0 in stage 1.0 (TID 1, localhost, executor driver, partition 0, ANY, 5945 bytes)
20/11/28 21:10:05 INFO Executor: Running task 0.0 in stage 1.0 (TID 1)
20/11/28 21:10:05 INFO ShuffleBlockFetcherIterator: Getting 1 non-empty blocks out of 1 blocks
20/11/28 21:10:05 INFO ShuffleBlockFetcherIterator: Started 0 remote fetches in 9 ms
20/11/28 21:10:05 INFO Executor: Finished task 0.0 in stage 1.0 (TID 1). 2035 bytes result sent to driver
20/11/28 21:10:05 INFO TaskSetManager: Finished task 0.0 in stage 1.0 (TID 1) in 61 ms on localhost (executor driver) (1/1)
20/11/28 21:10:05 INFO TaskSchedulerImpl: Removed TaskSet 1.0, whose tasks have all completed, from pool 
20/11/28 21:10:05 INFO DAGScheduler: ResultStage 1 (count at utils.scala:116) finished in 0.062 s
20/11/28 21:10:05 INFO DAGScheduler: Job 0 finished: count at utils.scala:116, took 0.763551 s
20/11/28 21:10:05 INFO CodeGenerator: Code generated in 10.312638 ms
20/11/28 21:10:08 INFO SparkSqlParser: Parsing command: SHOW TABLES
20/11/28 21:10:08 INFO HiveMetaStore: 0: get_database: default
20/11/28 21:10:08 INFO audit: ugi=macbook	ip=unknown-ip-addr	cmd=get_database: default	
20/11/28 21:10:08 INFO HiveMetaStore: 0: get_database: default
20/11/28 21:10:08 INFO audit: ugi=macbook	ip=unknown-ip-addr	cmd=get_database: default	
20/11/28 21:10:08 INFO HiveMetaStore: 0: get_tables: db=default pat=*
20/11/28 21:10:08 INFO audit: ugi=macbook	ip=unknown-ip-addr	cmd=get_tables: db=default pat=*	
20/11/28 21:10:09 INFO CodeGenerator: Code generated in 9.105232 ms
20/11/28 21:10:09 INFO SparkContext: Starting job: collect at utils.scala:46
20/11/28 21:10:09 INFO DAGScheduler: Got job 1 (collect at utils.scala:46) with 1 output partitions
20/11/28 21:10:09 INFO DAGScheduler: Final stage: ResultStage 2 (collect at utils.scala:46)
20/11/28 21:10:09 INFO DAGScheduler: Parents of final stage: List()
20/11/28 21:10:09 INFO DAGScheduler: Missing parents: List()
20/11/28 21:10:09 INFO DAGScheduler: Submitting ResultStage 2 (MapPartitionsRDD[12] at map at utils.scala:43), which has no missing parents
20/11/28 21:10:09 INFO MemoryStore: Block broadcast_2 stored as values in memory (estimated size 8.7 KB, free 912.3 MB)
20/11/28 21:10:09 INFO MemoryStore: Block broadcast_2_piece0 stored as bytes in memory (estimated size 4.6 KB, free 912.3 MB)
20/11/28 21:10:09 INFO BlockManagerInfo: Added broadcast_2_piece0 in memory on 127.0.0.1:49604 (size: 4.6 KB, free: 912.3 MB)
20/11/28 21:10:09 INFO SparkContext: Created broadcast 2 from broadcast at DAGScheduler.scala:996
20/11/28 21:10:09 INFO DAGScheduler: Submitting 1 missing tasks from ResultStage 2 (MapPartitionsRDD[12] at map at utils.scala:43)
20/11/28 21:10:09 INFO TaskSchedulerImpl: Adding task set 2.0 with 1 tasks
20/11/28 21:10:09 INFO TaskSetManager: Starting task 0.0 in stage 2.0 (TID 2, localhost, executor driver, partition 0, PROCESS_LOCAL, 6042 bytes)
20/11/28 21:10:09 INFO Executor: Running task 0.0 in stage 2.0 (TID 2)
20/11/28 21:10:09 INFO CodeGenerator: Code generated in 13.337566 ms
20/11/28 21:10:09 INFO Executor: Finished task 0.0 in stage 2.0 (TID 2). 1318 bytes result sent to driver
20/11/28 21:10:09 INFO TaskSetManager: Finished task 0.0 in stage 2.0 (TID 2) in 36 ms on localhost (executor driver) (1/1)
20/11/28 21:10:09 INFO TaskSchedulerImpl: Removed TaskSet 2.0, whose tasks have all completed, from pool 
20/11/28 21:10:09 INFO DAGScheduler: ResultStage 2 (collect at utils.scala:46) finished in 0.038 s
20/11/28 21:10:09 INFO DAGScheduler: Job 1 finished: collect at utils.scala:46, took 0.047940 s
20/11/28 21:10:11 INFO ContextCleaner: Cleaned accumulator 110
20/11/28 21:10:11 INFO ContextCleaner: Cleaned shuffle 0
20/11/28 21:10:11 INFO BlockManagerInfo: Removed broadcast_0_piece0 on 127.0.0.1:49604 in memory (size: 4.6 KB, free: 912.3 MB)
20/11/28 21:10:11 INFO BlockManagerInfo: Removed broadcast_1_piece0 on 127.0.0.1:49604 in memory (size: 3.7 KB, free: 912.3 MB)
20/11/28 21:10:11 INFO BlockManagerInfo: Removed broadcast_2_piece0 on 127.0.0.1:49604 in memory (size: 4.6 KB, free: 912.3 MB)
20/11/28 21:10:11 INFO ContextCleaner: Cleaned accumulator 109
20/11/28 21:10:11 INFO ContextCleaner: Cleaned accumulator 12
20/11/28 21:10:11 INFO ContextCleaner: Cleaned accumulator 11
20/11/28 21:10:11 INFO ContextCleaner: Cleaned accumulator 10
20/11/28 21:10:11 INFO ContextCleaner: Cleaned accumulator 9
20/11/28 21:10:11 INFO ContextCleaner: Cleaned accumulator 8
20/11/28 21:10:11 INFO ContextCleaner: Cleaned accumulator 7
20/11/28 21:10:11 INFO ContextCleaner: Cleaned accumulator 6
20/11/28 21:10:11 INFO ContextCleaner: Cleaned accumulator 5
20/11/28 21:10:11 INFO ContextCleaner: Cleaned accumulator 4
20/11/28 21:10:11 INFO ContextCleaner: Cleaned accumulator 3
20/11/28 21:10:11 INFO ContextCleaner: Cleaned accumulator 2
20/11/28 21:10:11 INFO ContextCleaner: Cleaned accumulator 1
20/11/28 21:10:13 INFO SparkSqlParser: Parsing command: tbl_cmp
20/11/28 21:10:13 INFO SparkSqlParser: Parsing command: SELECT *
FROM `tbl_cmp` AS `q01`
WHERE (0 = 1)
20/11/28 21:10:13 INFO SparkSqlParser: Parsing command: SELECT *
FROM `tbl_cmp`
20/11/28 21:10:13 WARN Utils: Truncated the string representation of a plan since it was too large. This behavior can be adjusted by setting 'spark.debug.maxToStringFields' in SparkEnv.conf.
20/11/28 21:10:13 INFO SparkSqlParser: Parsing command: SELECT *
FROM `tbl_cmp` AS `q01`
WHERE (0 = 1)
20/11/28 21:10:13 INFO SparkSqlParser: Parsing command: SHOW TABLES
20/11/28 21:10:13 INFO HiveMetaStore: 0: get_database: default
20/11/28 21:10:13 INFO audit: ugi=macbook	ip=unknown-ip-addr	cmd=get_database: default	
20/11/28 21:10:13 INFO HiveMetaStore: 0: get_database: default
20/11/28 21:10:13 INFO audit: ugi=macbook	ip=unknown-ip-addr	cmd=get_database: default	
20/11/28 21:10:13 INFO HiveMetaStore: 0: get_tables: db=default pat=*
20/11/28 21:10:13 INFO audit: ugi=macbook	ip=unknown-ip-addr	cmd=get_tables: db=default pat=*	
20/11/28 21:10:13 INFO CodeGenerator: Code generated in 13.742228 ms
20/11/28 21:10:13 INFO SparkContext: Starting job: count at utils.scala:116
20/11/28 21:10:13 INFO DAGScheduler: Registering RDD 20 (count at utils.scala:116)
20/11/28 21:10:13 INFO DAGScheduler: Got job 2 (count at utils.scala:116) with 1 output partitions
20/11/28 21:10:13 INFO DAGScheduler: Final stage: ResultStage 4 (count at utils.scala:116)
20/11/28 21:10:13 INFO DAGScheduler: Parents of final stage: List(ShuffleMapStage 3)
20/11/28 21:10:13 INFO DAGScheduler: Missing parents: List(ShuffleMapStage 3)
20/11/28 21:10:13 INFO DAGScheduler: Submitting ShuffleMapStage 3 (MapPartitionsRDD[20] at count at utils.scala:116), which has no missing parents
20/11/28 21:10:13 INFO MemoryStore: Block broadcast_3 stored as values in memory (estimated size 8.9 KB, free 912.3 MB)
20/11/28 21:10:13 INFO MemoryStore: Block broadcast_3_piece0 stored as bytes in memory (estimated size 4.7 KB, free 912.3 MB)
20/11/28 21:10:13 INFO BlockManagerInfo: Added broadcast_3_piece0 in memory on 127.0.0.1:49604 (size: 4.7 KB, free: 912.3 MB)
20/11/28 21:10:13 INFO SparkContext: Created broadcast 3 from broadcast at DAGScheduler.scala:996
20/11/28 21:10:13 INFO DAGScheduler: Submitting 1 missing tasks from ShuffleMapStage 3 (MapPartitionsRDD[20] at count at utils.scala:116)
20/11/28 21:10:13 INFO TaskSchedulerImpl: Adding task set 3.0 with 1 tasks
20/11/28 21:10:13 INFO TaskSetManager: Starting task 0.0 in stage 3.0 (TID 3, localhost, executor driver, partition 0, PROCESS_LOCAL, 6374 bytes)
20/11/28 21:10:13 INFO Executor: Running task 0.0 in stage 3.0 (TID 3)
20/11/28 21:10:13 INFO Executor: Finished task 0.0 in stage 3.0 (TID 3). 1806 bytes result sent to driver
20/11/28 21:10:13 INFO TaskSetManager: Finished task 0.0 in stage 3.0 (TID 3) in 17 ms on localhost (executor driver) (1/1)
20/11/28 21:10:13 INFO TaskSchedulerImpl: Removed TaskSet 3.0, whose tasks have all completed, from pool 
20/11/28 21:10:13 INFO DAGScheduler: ShuffleMapStage 3 (count at utils.scala:116) finished in 0.018 s
20/11/28 21:10:13 INFO DAGScheduler: looking for newly runnable stages
20/11/28 21:10:13 INFO DAGScheduler: running: Set()
20/11/28 21:10:13 INFO DAGScheduler: waiting: Set(ResultStage 4)
20/11/28 21:10:13 INFO DAGScheduler: failed: Set()
20/11/28 21:10:13 INFO DAGScheduler: Submitting ResultStage 4 (MapPartitionsRDD[23] at count at utils.scala:116), which has no missing parents
20/11/28 21:10:13 INFO MemoryStore: Block broadcast_4 stored as values in memory (estimated size 7.0 KB, free 912.3 MB)
20/11/28 21:10:13 INFO MemoryStore: Block broadcast_4_piece0 stored as bytes in memory (estimated size 3.7 KB, free 912.3 MB)
20/11/28 21:10:13 INFO BlockManagerInfo: Added broadcast_4_piece0 in memory on 127.0.0.1:49604 (size: 3.7 KB, free: 912.3 MB)
20/11/28 21:10:13 INFO SparkContext: Created broadcast 4 from broadcast at DAGScheduler.scala:996
20/11/28 21:10:13 INFO DAGScheduler: Submitting 1 missing tasks from ResultStage 4 (MapPartitionsRDD[23] at count at utils.scala:116)
20/11/28 21:10:13 INFO TaskSchedulerImpl: Adding task set 4.0 with 1 tasks
20/11/28 21:10:13 INFO TaskSetManager: Starting task 0.0 in stage 4.0 (TID 4, localhost, executor driver, partition 0, ANY, 5945 bytes)
20/11/28 21:10:13 INFO Executor: Running task 0.0 in stage 4.0 (TID 4)
20/11/28 21:10:13 INFO ShuffleBlockFetcherIterator: Getting 1 non-empty blocks out of 1 blocks
20/11/28 21:10:13 INFO ShuffleBlockFetcherIterator: Started 0 remote fetches in 1 ms
20/11/28 21:10:13 INFO Executor: Finished task 0.0 in stage 4.0 (TID 4). 2042 bytes result sent to driver
20/11/28 21:10:13 INFO TaskSetManager: Finished task 0.0 in stage 4.0 (TID 4) in 10 ms on localhost (executor driver) (1/1)
20/11/28 21:10:13 INFO TaskSchedulerImpl: Removed TaskSet 4.0, whose tasks have all completed, from pool 
20/11/28 21:10:13 INFO DAGScheduler: ResultStage 4 (count at utils.scala:116) finished in 0.011 s
20/11/28 21:10:13 INFO DAGScheduler: Job 2 finished: count at utils.scala:116, took 0.049017 s
20/11/28 21:10:24 INFO SparkSqlParser: Parsing command: SELECT *
FROM `tbl_cmp`
20/11/28 21:10:24 INFO SparkSqlParser: Parsing command: sparklyr_tmp_e6e3ebbe_1426_4179_abb3_7c015418717c
20/11/28 21:10:24 INFO SparkSqlParser: Parsing command: SELECT *
FROM `sparklyr_tmp_e6e3ebbe_1426_4179_abb3_7c015418717c` AS `q01`
WHERE (0 = 1)
20/11/28 21:10:24 INFO SparkSqlParser: Parsing command: sparklyr_tmp_f7be9dc1_f3ae_435b_a334_6e4ab6612c38
20/11/28 21:10:24 INFO SparkSqlParser: Parsing command: SELECT *
FROM `sparklyr_tmp_f7be9dc1_f3ae_435b_a334_6e4ab6612c38` AS `q02`
WHERE (0 = 1)
20/11/28 21:10:27 INFO SparkSqlParser: Parsing command: SELECT *
FROM `sparklyr_tmp_e6e3ebbe_1426_4179_abb3_7c015418717c`
20/11/28 21:10:27 INFO SparkSqlParser: Parsing command: SELECT *
FROM `sparklyr_tmp_e6e3ebbe_1426_4179_abb3_7c015418717c`
20/11/28 21:10:27 INFO SparkSqlParser: Parsing command: SELECT *
FROM `sparklyr_tmp_e6e3ebbe_1426_4179_abb3_7c015418717c`
LIMIT 11
20/11/28 21:10:27 INFO SparkSqlParser: Parsing command: SELECT *
FROM `sparklyr_tmp_e6e3ebbe_1426_4179_abb3_7c015418717c`
LIMIT 11
20/11/28 21:10:28 INFO CodeGenerator: Code generated in 59.570153 ms
20/11/28 21:10:28 INFO SparkContext: Starting job: collect at utils.scala:116
20/11/28 21:10:28 INFO DAGScheduler: Got job 3 (collect at utils.scala:116) with 1 output partitions
20/11/28 21:10:28 INFO DAGScheduler: Final stage: ResultStage 5 (collect at utils.scala:116)
20/11/28 21:10:28 INFO DAGScheduler: Parents of final stage: List()
20/11/28 21:10:28 INFO DAGScheduler: Missing parents: List()
20/11/28 21:10:28 INFO DAGScheduler: Submitting ResultStage 5 (MapPartitionsRDD[28] at collect at utils.scala:116), which has no missing parents
20/11/28 21:10:28 INFO MemoryStore: Block broadcast_5 stored as values in memory (estimated size 34.5 KB, free 912.2 MB)
20/11/28 21:10:28 INFO MemoryStore: Block broadcast_5_piece0 stored as bytes in memory (estimated size 12.1 KB, free 912.2 MB)
20/11/28 21:10:28 INFO BlockManagerInfo: Added broadcast_5_piece0 in memory on 127.0.0.1:49604 (size: 12.1 KB, free: 912.3 MB)
20/11/28 21:10:28 INFO SparkContext: Created broadcast 5 from broadcast at DAGScheduler.scala:996
20/11/28 21:10:28 INFO DAGScheduler: Submitting 1 missing tasks from ResultStage 5 (MapPartitionsRDD[28] at collect at utils.scala:116)
20/11/28 21:10:28 INFO TaskSchedulerImpl: Adding task set 5.0 with 1 tasks
20/11/28 21:10:28 INFO ContextCleaner: Cleaned accumulator 161
20/11/28 21:10:28 INFO ContextCleaner: Cleaned accumulator 162
20/11/28 21:10:28 INFO ContextCleaner: Cleaned accumulator 163
20/11/28 21:10:28 INFO ContextCleaner: Cleaned accumulator 164
20/11/28 21:10:28 INFO ContextCleaner: Cleaned accumulator 165
20/11/28 21:10:28 INFO ContextCleaner: Cleaned accumulator 166
20/11/28 21:10:28 INFO ContextCleaner: Cleaned accumulator 167
20/11/28 21:10:28 INFO ContextCleaner: Cleaned accumulator 168
20/11/28 21:10:28 INFO ContextCleaner: Cleaned accumulator 169
20/11/28 21:10:28 INFO ContextCleaner: Cleaned accumulator 170
20/11/28 21:10:28 INFO ContextCleaner: Cleaned accumulator 171
20/11/28 21:10:28 INFO ContextCleaner: Cleaned accumulator 172
20/11/28 21:10:28 INFO ContextCleaner: Cleaned accumulator 173
20/11/28 21:10:28 INFO ContextCleaner: Cleaned shuffle 1
20/11/28 21:10:28 INFO BlockManagerInfo: Removed broadcast_3_piece0 on 127.0.0.1:49604 in memory (size: 4.7 KB, free: 912.3 MB)
20/11/28 21:10:28 INFO BlockManagerInfo: Removed broadcast_4_piece0 on 127.0.0.1:49604 in memory (size: 3.7 KB, free: 912.3 MB)
20/11/28 21:10:31 WARN TaskSetManager: Stage 5 contains a task of very large size (40834 KB). The maximum recommended task size is 100 KB.
20/11/28 21:10:31 INFO TaskSetManager: Starting task 0.0 in stage 5.0 (TID 5, localhost, executor driver, partition 0, PROCESS_LOCAL, 41814877 bytes)
20/11/28 21:10:31 INFO Executor: Running task 0.0 in stage 5.0 (TID 5)
20/11/28 21:10:32 INFO CodeGenerator: Code generated in 44.166131 ms
20/11/28 21:10:35 INFO MemoryStore: Block rdd_16_0 stored as values in memory (estimated size 8.8 MB, free 903.4 MB)
20/11/28 21:10:35 INFO BlockManagerInfo: Added rdd_16_0 in memory on 127.0.0.1:49604 (size: 8.8 MB, free: 903.5 MB)
20/11/28 21:10:36 INFO CodeGenerator: Code generated in 9.410763 ms
20/11/28 21:10:36 INFO CodeGenerator: Code generated in 69.111112 ms
20/11/28 21:10:36 INFO CodeGenerator: Code generated in 122.760714 ms
20/11/28 21:10:36 INFO CodeGenerator: Code generated in 16.434923 ms
20/11/28 21:10:37 INFO Executor: Finished task 0.0 in stage 5.0 (TID 5). 3635 bytes result sent to driver
20/11/28 21:10:37 INFO TaskSetManager: Finished task 0.0 in stage 5.0 (TID 5) in 8817 ms on localhost (executor driver) (1/1)
20/11/28 21:10:37 INFO TaskSchedulerImpl: Removed TaskSet 5.0, whose tasks have all completed, from pool 
20/11/28 21:10:37 INFO DAGScheduler: ResultStage 5 (collect at utils.scala:116) finished in 8.819 s
20/11/28 21:10:37 INFO DAGScheduler: Job 3 finished: collect at utils.scala:116, took 8.849250 s
20/11/28 21:10:37 INFO CodeGenerator: Code generated in 44.977454 ms
20/11/28 21:10:37 INFO CodeGenerator: Code generated in 26.614989 ms
20/11/28 21:10:37 INFO CodeGenerator: Code generated in 19.930712 ms
20/11/28 21:10:37 INFO SparkContext: Starting job: count at utils.scala:116
20/11/28 21:10:37 INFO DAGScheduler: Registering RDD 31 (count at utils.scala:116)
20/11/28 21:10:37 INFO DAGScheduler: Got job 4 (count at utils.scala:116) with 1 output partitions
20/11/28 21:10:37 INFO DAGScheduler: Final stage: ResultStage 7 (count at utils.scala:116)
20/11/28 21:10:37 INFO DAGScheduler: Parents of final stage: List(ShuffleMapStage 6)
20/11/28 21:10:37 INFO DAGScheduler: Missing parents: List(ShuffleMapStage 6)
20/11/28 21:10:37 INFO DAGScheduler: Submitting ShuffleMapStage 6 (MapPartitionsRDD[31] at count at utils.scala:116), which has no missing parents
20/11/28 21:10:37 INFO MemoryStore: Block broadcast_6 stored as values in memory (estimated size 29.0 KB, free 903.4 MB)
20/11/28 21:10:37 INFO MemoryStore: Block broadcast_6_piece0 stored as bytes in memory (estimated size 11.0 KB, free 903.4 MB)
20/11/28 21:10:37 INFO BlockManagerInfo: Added broadcast_6_piece0 in memory on 127.0.0.1:49604 (size: 11.0 KB, free: 903.4 MB)
20/11/28 21:10:37 INFO SparkContext: Created broadcast 6 from broadcast at DAGScheduler.scala:996
20/11/28 21:10:37 INFO DAGScheduler: Submitting 1 missing tasks from ShuffleMapStage 6 (MapPartitionsRDD[31] at count at utils.scala:116)
20/11/28 21:10:37 INFO TaskSchedulerImpl: Adding task set 6.0 with 1 tasks
20/11/28 21:10:38 INFO ContextCleaner: Cleaned accumulator 324
20/11/28 21:10:39 WARN TaskSetManager: Stage 6 contains a task of very large size (40834 KB). The maximum recommended task size is 100 KB.
20/11/28 21:10:39 INFO TaskSetManager: Starting task 0.0 in stage 6.0 (TID 6, localhost, executor driver, partition 0, PROCESS_LOCAL, 41814951 bytes)
20/11/28 21:10:39 INFO Executor: Running task 0.0 in stage 6.0 (TID 6)
20/11/28 21:10:39 INFO BlockManager: Found block rdd_16_0 locally
20/11/28 21:10:40 INFO Executor: Finished task 0.0 in stage 6.0 (TID 6). 2434 bytes result sent to driver
20/11/28 21:10:40 INFO TaskSetManager: Finished task 0.0 in stage 6.0 (TID 6) in 3120 ms on localhost (executor driver) (1/1)
20/11/28 21:10:40 INFO TaskSchedulerImpl: Removed TaskSet 6.0, whose tasks have all completed, from pool 
20/11/28 21:10:40 INFO DAGScheduler: ShuffleMapStage 6 (count at utils.scala:116) finished in 3.121 s
20/11/28 21:10:40 INFO DAGScheduler: looking for newly runnable stages
20/11/28 21:10:40 INFO DAGScheduler: running: Set()
20/11/28 21:10:40 INFO DAGScheduler: waiting: Set(ResultStage 7)
20/11/28 21:10:40 INFO DAGScheduler: failed: Set()
20/11/28 21:10:40 INFO DAGScheduler: Submitting ResultStage 7 (MapPartitionsRDD[34] at count at utils.scala:116), which has no missing parents
20/11/28 21:10:40 INFO MemoryStore: Block broadcast_7 stored as values in memory (estimated size 8.9 KB, free 903.4 MB)
20/11/28 21:10:40 INFO MemoryStore: Block broadcast_7_piece0 stored as bytes in memory (estimated size 4.2 KB, free 903.4 MB)
20/11/28 21:10:40 INFO BlockManagerInfo: Added broadcast_7_piece0 in memory on 127.0.0.1:49604 (size: 4.2 KB, free: 903.4 MB)
20/11/28 21:10:40 INFO SparkContext: Created broadcast 7 from broadcast at DAGScheduler.scala:996
20/11/28 21:10:40 INFO DAGScheduler: Submitting 1 missing tasks from ResultStage 7 (MapPartitionsRDD[34] at count at utils.scala:116)
20/11/28 21:10:40 INFO TaskSchedulerImpl: Adding task set 7.0 with 1 tasks
20/11/28 21:10:40 INFO TaskSetManager: Starting task 0.0 in stage 7.0 (TID 7, localhost, executor driver, partition 0, ANY, 5945 bytes)
20/11/28 21:10:40 INFO Executor: Running task 0.0 in stage 7.0 (TID 7)
20/11/28 21:10:40 INFO ShuffleBlockFetcherIterator: Getting 1 non-empty blocks out of 1 blocks
20/11/28 21:10:40 INFO ShuffleBlockFetcherIterator: Started 0 remote fetches in 0 ms
20/11/28 21:10:40 INFO Executor: Finished task 0.0 in stage 7.0 (TID 7). 2200 bytes result sent to driver
20/11/28 21:10:40 INFO TaskSetManager: Finished task 0.0 in stage 7.0 (TID 7) in 10 ms on localhost (executor driver) (1/1)
20/11/28 21:10:40 INFO TaskSchedulerImpl: Removed TaskSet 7.0, whose tasks have all completed, from pool 
20/11/28 21:10:40 INFO DAGScheduler: ResultStage 7 (count at utils.scala:116) finished in 0.011 s
20/11/28 21:10:40 INFO DAGScheduler: Job 4 finished: count at utils.scala:116, took 3.155025 s
20/11/28 21:10:41 INFO SparkSqlParser: Parsing command: SELECT *
FROM `sparklyr_tmp_e6e3ebbe_1426_4179_abb3_7c015418717c`
20/11/28 21:10:41 INFO SparkSqlParser: Parsing command: SELECT *
FROM `sparklyr_tmp_f7be9dc1_f3ae_435b_a334_6e4ab6612c38`
20/11/28 21:10:41 INFO SparkSqlParser: Parsing command: SELECT *
FROM `sparklyr_tmp_f7be9dc1_f3ae_435b_a334_6e4ab6612c38`
20/11/28 21:10:41 INFO SparkSqlParser: Parsing command: SELECT *
FROM `sparklyr_tmp_f7be9dc1_f3ae_435b_a334_6e4ab6612c38`
LIMIT 11
20/11/28 21:10:41 INFO SparkSqlParser: Parsing command: SELECT *
FROM `sparklyr_tmp_f7be9dc1_f3ae_435b_a334_6e4ab6612c38`
LIMIT 11
20/11/28 21:10:41 INFO CodeGenerator: Code generated in 28.636888 ms
20/11/28 21:10:41 INFO SparkContext: Starting job: collect at utils.scala:116
20/11/28 21:10:41 INFO DAGScheduler: Got job 5 (collect at utils.scala:116) with 1 output partitions
20/11/28 21:10:41 INFO DAGScheduler: Final stage: ResultStage 8 (collect at utils.scala:116)
20/11/28 21:10:41 INFO DAGScheduler: Parents of final stage: List()
20/11/28 21:10:41 INFO DAGScheduler: Missing parents: List()
20/11/28 21:10:41 INFO DAGScheduler: Submitting ResultStage 8 (MapPartitionsRDD[37] at collect at utils.scala:116), which has no missing parents
20/11/28 21:10:41 INFO MemoryStore: Block broadcast_8 stored as values in memory (estimated size 34.5 KB, free 903.3 MB)
20/11/28 21:10:41 INFO MemoryStore: Block broadcast_8_piece0 stored as bytes in memory (estimated size 12.1 KB, free 903.3 MB)
20/11/28 21:10:41 INFO BlockManagerInfo: Added broadcast_8_piece0 in memory on 127.0.0.1:49604 (size: 12.1 KB, free: 903.4 MB)
20/11/28 21:10:41 INFO SparkContext: Created broadcast 8 from broadcast at DAGScheduler.scala:996
20/11/28 21:10:41 INFO DAGScheduler: Submitting 1 missing tasks from ResultStage 8 (MapPartitionsRDD[37] at collect at utils.scala:116)
20/11/28 21:10:41 INFO TaskSchedulerImpl: Adding task set 8.0 with 1 tasks
20/11/28 21:10:42 INFO BlockManagerInfo: Removed broadcast_7_piece0 on 127.0.0.1:49604 in memory (size: 4.2 KB, free: 903.4 MB)
20/11/28 21:10:43 WARN TaskSetManager: Stage 8 contains a task of very large size (40834 KB). The maximum recommended task size is 100 KB.
20/11/28 21:10:43 INFO TaskSetManager: Starting task 0.0 in stage 8.0 (TID 8, localhost, executor driver, partition 0, PROCESS_LOCAL, 41814877 bytes)
20/11/28 21:10:43 INFO Executor: Running task 0.0 in stage 8.0 (TID 8)
20/11/28 21:10:44 INFO BlockManager: Found block rdd_16_0 locally
20/11/28 21:10:44 INFO Executor: Finished task 0.0 in stage 8.0 (TID 8). 2965 bytes result sent to driver
20/11/28 21:10:44 INFO TaskSetManager: Finished task 0.0 in stage 8.0 (TID 8) in 3234 ms on localhost (executor driver) (1/1)
20/11/28 21:10:44 INFO TaskSchedulerImpl: Removed TaskSet 8.0, whose tasks have all completed, from pool 
20/11/28 21:10:44 INFO DAGScheduler: ResultStage 8 (collect at utils.scala:116) finished in 3.235 s
20/11/28 21:10:44 INFO DAGScheduler: Job 5 finished: collect at utils.scala:116, took 3.245149 s
20/11/28 21:10:44 INFO CodeGenerator: Code generated in 22.62693 ms
20/11/28 21:10:44 INFO SparkContext: Starting job: count at utils.scala:116
20/11/28 21:10:44 INFO DAGScheduler: Registering RDD 40 (count at utils.scala:116)
20/11/28 21:10:44 INFO DAGScheduler: Got job 6 (count at utils.scala:116) with 1 output partitions
20/11/28 21:10:44 INFO DAGScheduler: Final stage: ResultStage 10 (count at utils.scala:116)
20/11/28 21:10:44 INFO DAGScheduler: Parents of final stage: List(ShuffleMapStage 9)
20/11/28 21:10:44 INFO DAGScheduler: Missing parents: List(ShuffleMapStage 9)
20/11/28 21:10:44 INFO DAGScheduler: Submitting ShuffleMapStage 9 (MapPartitionsRDD[40] at count at utils.scala:116), which has no missing parents
20/11/28 21:10:44 INFO MemoryStore: Block broadcast_9 stored as values in memory (estimated size 29.0 KB, free 903.3 MB)
20/11/28 21:10:44 INFO MemoryStore: Block broadcast_9_piece0 stored as bytes in memory (estimated size 11.0 KB, free 903.3 MB)
20/11/28 21:10:44 INFO BlockManagerInfo: Added broadcast_9_piece0 in memory on 127.0.0.1:49604 (size: 11.0 KB, free: 903.4 MB)
20/11/28 21:10:44 INFO SparkContext: Created broadcast 9 from broadcast at DAGScheduler.scala:996
20/11/28 21:10:44 INFO DAGScheduler: Submitting 1 missing tasks from ShuffleMapStage 9 (MapPartitionsRDD[40] at count at utils.scala:116)
20/11/28 21:10:44 INFO TaskSchedulerImpl: Adding task set 9.0 with 1 tasks
20/11/28 21:10:46 INFO ContextCleaner: Cleaned accumulator 491
20/11/28 21:10:46 WARN TaskSetManager: Stage 9 contains a task of very large size (40834 KB). The maximum recommended task size is 100 KB.
20/11/28 21:10:46 INFO TaskSetManager: Starting task 0.0 in stage 9.0 (TID 9, localhost, executor driver, partition 0, PROCESS_LOCAL, 41814952 bytes)
20/11/28 21:10:46 INFO Executor: Running task 0.0 in stage 9.0 (TID 9)
20/11/28 21:10:47 INFO BlockManager: Found block rdd_16_0 locally
20/11/28 21:10:48 INFO Executor: Finished task 0.0 in stage 9.0 (TID 9). 2434 bytes result sent to driver
20/11/28 21:10:48 INFO TaskSetManager: Finished task 0.0 in stage 9.0 (TID 9) in 3058 ms on localhost (executor driver) (1/1)
20/11/28 21:10:48 INFO TaskSchedulerImpl: Removed TaskSet 9.0, whose tasks have all completed, from pool 
20/11/28 21:10:48 INFO DAGScheduler: ShuffleMapStage 9 (count at utils.scala:116) finished in 3.059 s
20/11/28 21:10:48 INFO DAGScheduler: looking for newly runnable stages
20/11/28 21:10:48 INFO DAGScheduler: running: Set()
20/11/28 21:10:48 INFO DAGScheduler: waiting: Set(ResultStage 10)
20/11/28 21:10:48 INFO DAGScheduler: failed: Set()
20/11/28 21:10:48 INFO DAGScheduler: Submitting ResultStage 10 (MapPartitionsRDD[43] at count at utils.scala:116), which has no missing parents
20/11/28 21:10:48 INFO MemoryStore: Block broadcast_10 stored as values in memory (estimated size 8.9 KB, free 903.3 MB)
20/11/28 21:10:48 INFO MemoryStore: Block broadcast_10_piece0 stored as bytes in memory (estimated size 4.2 KB, free 903.3 MB)
20/11/28 21:10:48 INFO BlockManagerInfo: Added broadcast_10_piece0 in memory on 127.0.0.1:49604 (size: 4.2 KB, free: 903.4 MB)
20/11/28 21:10:48 INFO SparkContext: Created broadcast 10 from broadcast at DAGScheduler.scala:996
20/11/28 21:10:48 INFO DAGScheduler: Submitting 1 missing tasks from ResultStage 10 (MapPartitionsRDD[43] at count at utils.scala:116)
20/11/28 21:10:48 INFO TaskSchedulerImpl: Adding task set 10.0 with 1 tasks
20/11/28 21:10:48 INFO TaskSetManager: Starting task 0.0 in stage 10.0 (TID 10, localhost, executor driver, partition 0, ANY, 5946 bytes)
20/11/28 21:10:48 INFO Executor: Running task 0.0 in stage 10.0 (TID 10)
20/11/28 21:10:48 INFO ShuffleBlockFetcherIterator: Getting 1 non-empty blocks out of 1 blocks
20/11/28 21:10:48 INFO ShuffleBlockFetcherIterator: Started 0 remote fetches in 0 ms
20/11/28 21:10:48 INFO Executor: Finished task 0.0 in stage 10.0 (TID 10). 2200 bytes result sent to driver
20/11/28 21:10:48 INFO TaskSetManager: Finished task 0.0 in stage 10.0 (TID 10) in 7 ms on localhost (executor driver) (1/1)
20/11/28 21:10:48 INFO TaskSchedulerImpl: Removed TaskSet 10.0, whose tasks have all completed, from pool 
20/11/28 21:10:48 INFO DAGScheduler: ResultStage 10 (count at utils.scala:116) finished in 0.009 s
20/11/28 21:10:48 INFO DAGScheduler: Job 6 finished: count at utils.scala:116, took 3.088478 s
20/11/28 21:10:48 INFO SparkSqlParser: Parsing command: SELECT *
FROM `sparklyr_tmp_f7be9dc1_f3ae_435b_a334_6e4ab6612c38`
20/11/28 21:13:58 INFO SparkSqlParser: Parsing command: SELECT *
FROM `sparklyr_tmp_e6e3ebbe_1426_4179_abb3_7c015418717c`
20/11/28 21:13:59 INFO BlockManagerInfo: Removed broadcast_10_piece0 on 127.0.0.1:49604 in memory (size: 4.2 KB, free: 903.4 MB)
20/11/28 21:13:59 INFO SparkSqlParser: Parsing command: SELECT *
FROM `sparklyr_tmp_e6e3ebbe_1426_4179_abb3_7c015418717c`
20/11/28 21:13:59 INFO CodeGenerator: Code generated in 18.328145 ms
20/11/28 21:13:59 INFO SparkContext: Starting job: countByValue at StringIndexer.scala:92
20/11/28 21:14:00 INFO DAGScheduler: Registering RDD 50 (countByValue at StringIndexer.scala:92)
20/11/28 21:14:00 INFO DAGScheduler: Got job 7 (countByValue at StringIndexer.scala:92) with 1 output partitions
20/11/28 21:14:00 INFO DAGScheduler: Final stage: ResultStage 12 (countByValue at StringIndexer.scala:92)
20/11/28 21:14:00 INFO DAGScheduler: Parents of final stage: List(ShuffleMapStage 11)
20/11/28 21:14:00 INFO DAGScheduler: Missing parents: List(ShuffleMapStage 11)
20/11/28 21:14:00 INFO DAGScheduler: Submitting ShuffleMapStage 11 (MapPartitionsRDD[50] at countByValue at StringIndexer.scala:92), which has no missing parents
20/11/28 21:14:00 INFO MemoryStore: Block broadcast_11 stored as values in memory (estimated size 32.2 KB, free 903.3 MB)
20/11/28 21:14:00 INFO MemoryStore: Block broadcast_11_piece0 stored as bytes in memory (estimated size 12.2 KB, free 903.2 MB)
20/11/28 21:14:00 INFO BlockManagerInfo: Added broadcast_11_piece0 in memory on 127.0.0.1:49604 (size: 12.2 KB, free: 903.4 MB)
20/11/28 21:14:00 INFO SparkContext: Created broadcast 11 from broadcast at DAGScheduler.scala:996
20/11/28 21:14:00 INFO DAGScheduler: Submitting 1 missing tasks from ShuffleMapStage 11 (MapPartitionsRDD[50] at countByValue at StringIndexer.scala:92)
20/11/28 21:14:00 INFO TaskSchedulerImpl: Adding task set 11.0 with 1 tasks
20/11/28 21:14:01 WARN TaskSetManager: Stage 11 contains a task of very large size (40834 KB). The maximum recommended task size is 100 KB.
20/11/28 21:14:01 INFO TaskSetManager: Starting task 0.0 in stage 11.0 (TID 11, localhost, executor driver, partition 0, PROCESS_LOCAL, 41814928 bytes)
20/11/28 21:14:01 INFO Executor: Running task 0.0 in stage 11.0 (TID 11)
20/11/28 21:14:02 INFO BlockManager: Found block rdd_16_0 locally
20/11/28 21:14:02 INFO CodeGenerator: Code generated in 10.284108 ms
20/11/28 21:14:04 INFO ContextCleaner: Cleaned accumulator 338
20/11/28 21:14:04 INFO BlockManagerInfo: Removed broadcast_9_piece0 on 127.0.0.1:49604 in memory (size: 11.0 KB, free: 903.4 MB)
20/11/28 21:14:04 INFO ContextCleaner: Cleaned shuffle 3
20/11/28 21:14:04 INFO ContextCleaner: Cleaned accumulator 507
20/11/28 21:14:04 INFO ContextCleaner: Cleaned accumulator 506
20/11/28 21:14:04 INFO ContextCleaner: Cleaned accumulator 505
20/11/28 21:14:04 INFO ContextCleaner: Cleaned accumulator 504
20/11/28 21:14:04 INFO ContextCleaner: Cleaned accumulator 503
20/11/28 21:14:04 INFO ContextCleaner: Cleaned accumulator 502
20/11/28 21:14:04 INFO ContextCleaner: Cleaned accumulator 501
20/11/28 21:14:04 INFO ContextCleaner: Cleaned accumulator 500
20/11/28 21:14:04 INFO ContextCleaner: Cleaned accumulator 499
20/11/28 21:14:04 INFO ContextCleaner: Cleaned accumulator 498
20/11/28 21:14:04 INFO ContextCleaner: Cleaned accumulator 497
20/11/28 21:14:04 INFO ContextCleaner: Cleaned accumulator 496
20/11/28 21:14:04 INFO ContextCleaner: Cleaned accumulator 495
20/11/28 21:14:04 INFO ContextCleaner: Cleaned accumulator 494
20/11/28 21:14:04 INFO ContextCleaner: Cleaned accumulator 493
20/11/28 21:14:04 INFO ContextCleaner: Cleaned accumulator 492
20/11/28 21:14:04 INFO BlockManagerInfo: Removed broadcast_8_piece0 on 127.0.0.1:49604 in memory (size: 12.1 KB, free: 903.4 MB)
20/11/28 21:14:04 INFO BlockManagerInfo: Removed broadcast_6_piece0 on 127.0.0.1:49604 in memory (size: 11.0 KB, free: 903.4 MB)
20/11/28 21:14:04 INFO ContextCleaner: Cleaned shuffle 2
20/11/28 21:14:04 INFO ContextCleaner: Cleaned accumulator 340
20/11/28 21:14:04 INFO ContextCleaner: Cleaned accumulator 339
20/11/28 21:14:04 INFO ContextCleaner: Cleaned accumulator 337
20/11/28 21:14:04 INFO ContextCleaner: Cleaned accumulator 336
20/11/28 21:14:04 INFO ContextCleaner: Cleaned accumulator 335
20/11/28 21:14:04 INFO ContextCleaner: Cleaned accumulator 334
20/11/28 21:14:04 INFO ContextCleaner: Cleaned accumulator 333
20/11/28 21:14:04 INFO ContextCleaner: Cleaned accumulator 332
20/11/28 21:14:04 INFO ContextCleaner: Cleaned accumulator 331
20/11/28 21:14:04 INFO ContextCleaner: Cleaned accumulator 330
20/11/28 21:14:04 INFO ContextCleaner: Cleaned accumulator 329
20/11/28 21:14:04 INFO ContextCleaner: Cleaned accumulator 328
20/11/28 21:14:04 INFO ContextCleaner: Cleaned accumulator 327
20/11/28 21:14:04 INFO ContextCleaner: Cleaned accumulator 326
20/11/28 21:14:04 INFO ContextCleaner: Cleaned accumulator 325
20/11/28 21:14:04 INFO BlockManagerInfo: Removed broadcast_5_piece0 on 127.0.0.1:49604 in memory (size: 12.1 KB, free: 903.5 MB)
20/11/28 21:14:04 INFO ContextCleaner: Cleaned accumulator 275
20/11/28 21:14:04 INFO ContextCleaner: Cleaned accumulator 274
20/11/28 21:14:04 INFO ContextCleaner: Cleaned accumulator 273
20/11/28 21:14:04 INFO ContextCleaner: Cleaned accumulator 272
20/11/28 21:14:04 INFO ContextCleaner: Cleaned accumulator 271
20/11/28 21:14:04 INFO ContextCleaner: Cleaned accumulator 270
20/11/28 21:14:04 INFO Executor: Finished task 0.0 in stage 11.0 (TID 11). 2505 bytes result sent to driver
20/11/28 21:14:04 INFO TaskSetManager: Finished task 0.0 in stage 11.0 (TID 11) in 4083 ms on localhost (executor driver) (1/1)
20/11/28 21:14:04 INFO TaskSchedulerImpl: Removed TaskSet 11.0, whose tasks have all completed, from pool 
20/11/28 21:14:04 INFO DAGScheduler: ShuffleMapStage 11 (countByValue at StringIndexer.scala:92) finished in 4.084 s
20/11/28 21:14:04 INFO DAGScheduler: looking for newly runnable stages
20/11/28 21:14:04 INFO DAGScheduler: running: Set()
20/11/28 21:14:04 INFO DAGScheduler: waiting: Set(ResultStage 12)
20/11/28 21:14:04 INFO DAGScheduler: failed: Set()
20/11/28 21:14:04 INFO DAGScheduler: Submitting ResultStage 12 (ShuffledRDD[51] at countByValue at StringIndexer.scala:92), which has no missing parents
20/11/28 21:14:04 INFO MemoryStore: Block broadcast_12 stored as values in memory (estimated size 3.2 KB, free 903.4 MB)
20/11/28 21:14:04 INFO MemoryStore: Block broadcast_12_piece0 stored as bytes in memory (estimated size 1969.0 B, free 903.4 MB)
20/11/28 21:14:04 INFO BlockManagerInfo: Added broadcast_12_piece0 in memory on 127.0.0.1:49604 (size: 1969.0 B, free: 903.4 MB)
20/11/28 21:14:04 INFO SparkContext: Created broadcast 12 from broadcast at DAGScheduler.scala:996
20/11/28 21:14:04 INFO DAGScheduler: Submitting 1 missing tasks from ResultStage 12 (ShuffledRDD[51] at countByValue at StringIndexer.scala:92)
20/11/28 21:14:04 INFO TaskSchedulerImpl: Adding task set 12.0 with 1 tasks
20/11/28 21:14:04 INFO TaskSetManager: Starting task 0.0 in stage 12.0 (TID 12, localhost, executor driver, partition 0, ANY, 5817 bytes)
20/11/28 21:14:04 INFO Executor: Running task 0.0 in stage 12.0 (TID 12)
20/11/28 21:14:04 INFO ShuffleBlockFetcherIterator: Getting 1 non-empty blocks out of 1 blocks
20/11/28 21:14:04 INFO ShuffleBlockFetcherIterator: Started 0 remote fetches in 1 ms
20/11/28 21:14:04 INFO Executor: Finished task 0.0 in stage 12.0 (TID 12). 2088 bytes result sent to driver
20/11/28 21:14:04 INFO TaskSetManager: Finished task 0.0 in stage 12.0 (TID 12) in 39 ms on localhost (executor driver) (1/1)
20/11/28 21:14:04 INFO TaskSchedulerImpl: Removed TaskSet 12.0, whose tasks have all completed, from pool 
20/11/28 21:14:04 INFO DAGScheduler: ResultStage 12 (countByValue at StringIndexer.scala:92) finished in 0.040 s
20/11/28 21:14:04 INFO DAGScheduler: Job 7 finished: countByValue at StringIndexer.scala:92, took 4.339832 s
20/11/28 21:14:04 INFO CodeGenerator: Code generated in 21.336853 ms
20/11/28 21:14:04 INFO SparkContext: Starting job: countByValue at StringIndexer.scala:92
20/11/28 21:14:04 INFO DAGScheduler: Registering RDD 58 (countByValue at StringIndexer.scala:92)
20/11/28 21:14:04 INFO DAGScheduler: Got job 8 (countByValue at StringIndexer.scala:92) with 1 output partitions
20/11/28 21:14:04 INFO DAGScheduler: Final stage: ResultStage 14 (countByValue at StringIndexer.scala:92)
20/11/28 21:14:04 INFO DAGScheduler: Parents of final stage: List(ShuffleMapStage 13)
20/11/28 21:14:04 INFO DAGScheduler: Missing parents: List(ShuffleMapStage 13)
20/11/28 21:14:04 INFO DAGScheduler: Submitting ShuffleMapStage 13 (MapPartitionsRDD[58] at countByValue at StringIndexer.scala:92), which has no missing parents
20/11/28 21:14:04 INFO MemoryStore: Block broadcast_13 stored as values in memory (estimated size 32.3 KB, free 903.4 MB)
20/11/28 21:14:04 INFO MemoryStore: Block broadcast_13_piece0 stored as bytes in memory (estimated size 12.3 KB, free 903.4 MB)
20/11/28 21:14:04 INFO BlockManagerInfo: Added broadcast_13_piece0 in memory on 127.0.0.1:49604 (size: 12.3 KB, free: 903.4 MB)
20/11/28 21:14:04 INFO SparkContext: Created broadcast 13 from broadcast at DAGScheduler.scala:996
20/11/28 21:14:04 INFO DAGScheduler: Submitting 1 missing tasks from ShuffleMapStage 13 (MapPartitionsRDD[58] at countByValue at StringIndexer.scala:92)
20/11/28 21:14:04 INFO TaskSchedulerImpl: Adding task set 13.0 with 1 tasks
20/11/28 21:14:05 INFO BlockManagerInfo: Removed broadcast_12_piece0 on 127.0.0.1:49604 in memory (size: 1969.0 B, free: 903.4 MB)
20/11/28 21:14:06 WARN TaskSetManager: Stage 13 contains a task of very large size (40834 KB). The maximum recommended task size is 100 KB.
20/11/28 21:14:06 INFO TaskSetManager: Starting task 0.0 in stage 13.0 (TID 13, localhost, executor driver, partition 0, PROCESS_LOCAL, 41814928 bytes)
20/11/28 21:14:06 INFO Executor: Running task 0.0 in stage 13.0 (TID 13)
20/11/28 21:14:06 INFO BlockManager: Found block rdd_16_0 locally
20/11/28 21:14:07 INFO Executor: Finished task 0.0 in stage 13.0 (TID 13). 2505 bytes result sent to driver
20/11/28 21:14:07 INFO TaskSetManager: Finished task 0.0 in stage 13.0 (TID 13) in 2930 ms on localhost (executor driver) (1/1)
20/11/28 21:14:07 INFO TaskSchedulerImpl: Removed TaskSet 13.0, whose tasks have all completed, from pool 
20/11/28 21:14:07 INFO DAGScheduler: ShuffleMapStage 13 (countByValue at StringIndexer.scala:92) finished in 2.932 s
20/11/28 21:14:07 INFO DAGScheduler: looking for newly runnable stages
20/11/28 21:14:07 INFO DAGScheduler: running: Set()
20/11/28 21:14:07 INFO DAGScheduler: waiting: Set(ResultStage 14)
20/11/28 21:14:07 INFO DAGScheduler: failed: Set()
20/11/28 21:14:07 INFO DAGScheduler: Submitting ResultStage 14 (ShuffledRDD[59] at countByValue at StringIndexer.scala:92), which has no missing parents
20/11/28 21:14:07 INFO MemoryStore: Block broadcast_14 stored as values in memory (estimated size 3.2 KB, free 903.4 MB)
20/11/28 21:14:07 INFO MemoryStore: Block broadcast_14_piece0 stored as bytes in memory (estimated size 1968.0 B, free 903.4 MB)
20/11/28 21:14:07 INFO BlockManagerInfo: Added broadcast_14_piece0 in memory on 127.0.0.1:49604 (size: 1968.0 B, free: 903.4 MB)
20/11/28 21:14:07 INFO SparkContext: Created broadcast 14 from broadcast at DAGScheduler.scala:996
20/11/28 21:14:07 INFO DAGScheduler: Submitting 1 missing tasks from ResultStage 14 (ShuffledRDD[59] at countByValue at StringIndexer.scala:92)
20/11/28 21:14:07 INFO TaskSchedulerImpl: Adding task set 14.0 with 1 tasks
20/11/28 21:14:07 INFO TaskSetManager: Starting task 0.0 in stage 14.0 (TID 14, localhost, executor driver, partition 0, ANY, 5817 bytes)
20/11/28 21:14:07 INFO Executor: Running task 0.0 in stage 14.0 (TID 14)
20/11/28 21:14:07 INFO ShuffleBlockFetcherIterator: Getting 1 non-empty blocks out of 1 blocks
20/11/28 21:14:07 INFO ShuffleBlockFetcherIterator: Started 0 remote fetches in 0 ms
20/11/28 21:14:07 INFO Executor: Finished task 0.0 in stage 14.0 (TID 14). 1897 bytes result sent to driver
20/11/28 21:14:07 INFO TaskSetManager: Finished task 0.0 in stage 14.0 (TID 14) in 15 ms on localhost (executor driver) (1/1)
20/11/28 21:14:07 INFO TaskSchedulerImpl: Removed TaskSet 14.0, whose tasks have all completed, from pool 
20/11/28 21:14:07 INFO DAGScheduler: ResultStage 14 (countByValue at StringIndexer.scala:92) finished in 0.016 s
20/11/28 21:14:07 INFO DAGScheduler: Job 8 finished: countByValue at StringIndexer.scala:92, took 2.964795 s
20/11/28 21:14:07 INFO CodeGenerator: Code generated in 14.19888 ms
20/11/28 21:14:07 INFO SparkContext: Starting job: countByValue at StringIndexer.scala:92
20/11/28 21:14:07 INFO DAGScheduler: Registering RDD 66 (countByValue at StringIndexer.scala:92)
20/11/28 21:14:07 INFO DAGScheduler: Got job 9 (countByValue at StringIndexer.scala:92) with 1 output partitions
20/11/28 21:14:07 INFO DAGScheduler: Final stage: ResultStage 16 (countByValue at StringIndexer.scala:92)
20/11/28 21:14:07 INFO DAGScheduler: Parents of final stage: List(ShuffleMapStage 15)
20/11/28 21:14:07 INFO DAGScheduler: Missing parents: List(ShuffleMapStage 15)
20/11/28 21:14:07 INFO DAGScheduler: Submitting ShuffleMapStage 15 (MapPartitionsRDD[66] at countByValue at StringIndexer.scala:92), which has no missing parents
20/11/28 21:14:07 INFO MemoryStore: Block broadcast_15 stored as values in memory (estimated size 32.3 KB, free 903.3 MB)
20/11/28 21:14:07 INFO MemoryStore: Block broadcast_15_piece0 stored as bytes in memory (estimated size 12.3 KB, free 903.3 MB)
20/11/28 21:14:07 INFO BlockManagerInfo: Added broadcast_15_piece0 in memory on 127.0.0.1:49604 (size: 12.3 KB, free: 903.4 MB)
20/11/28 21:14:07 INFO SparkContext: Created broadcast 15 from broadcast at DAGScheduler.scala:996
20/11/28 21:14:07 INFO DAGScheduler: Submitting 1 missing tasks from ShuffleMapStage 15 (MapPartitionsRDD[66] at countByValue at StringIndexer.scala:92)
20/11/28 21:14:07 INFO TaskSchedulerImpl: Adding task set 15.0 with 1 tasks
20/11/28 21:14:08 INFO BlockManagerInfo: Removed broadcast_14_piece0 on 127.0.0.1:49604 in memory (size: 1968.0 B, free: 903.4 MB)
20/11/28 21:14:09 WARN TaskSetManager: Stage 15 contains a task of very large size (40834 KB). The maximum recommended task size is 100 KB.
20/11/28 21:14:09 INFO TaskSetManager: Starting task 0.0 in stage 15.0 (TID 15, localhost, executor driver, partition 0, PROCESS_LOCAL, 41814928 bytes)
20/11/28 21:14:09 INFO Executor: Running task 0.0 in stage 15.0 (TID 15)
20/11/28 21:14:10 INFO BlockManager: Found block rdd_16_0 locally
20/11/28 21:14:10 INFO Executor: Finished task 0.0 in stage 15.0 (TID 15). 2505 bytes result sent to driver
20/11/28 21:14:10 INFO TaskSetManager: Finished task 0.0 in stage 15.0 (TID 15) in 3042 ms on localhost (executor driver) (1/1)
20/11/28 21:14:10 INFO TaskSchedulerImpl: Removed TaskSet 15.0, whose tasks have all completed, from pool 
20/11/28 21:14:10 INFO DAGScheduler: ShuffleMapStage 15 (countByValue at StringIndexer.scala:92) finished in 3.044 s
20/11/28 21:14:10 INFO DAGScheduler: looking for newly runnable stages
20/11/28 21:14:10 INFO DAGScheduler: running: Set()
20/11/28 21:14:10 INFO DAGScheduler: waiting: Set(ResultStage 16)
20/11/28 21:14:10 INFO DAGScheduler: failed: Set()
20/11/28 21:14:10 INFO DAGScheduler: Submitting ResultStage 16 (ShuffledRDD[67] at countByValue at StringIndexer.scala:92), which has no missing parents
20/11/28 21:14:10 INFO MemoryStore: Block broadcast_16 stored as values in memory (estimated size 3.2 KB, free 903.3 MB)
20/11/28 21:14:10 INFO MemoryStore: Block broadcast_16_piece0 stored as bytes in memory (estimated size 1970.0 B, free 903.3 MB)
20/11/28 21:14:10 INFO BlockManagerInfo: Added broadcast_16_piece0 in memory on 127.0.0.1:49604 (size: 1970.0 B, free: 903.4 MB)
20/11/28 21:14:10 INFO SparkContext: Created broadcast 16 from broadcast at DAGScheduler.scala:996
20/11/28 21:14:10 INFO DAGScheduler: Submitting 1 missing tasks from ResultStage 16 (ShuffledRDD[67] at countByValue at StringIndexer.scala:92)
20/11/28 21:14:10 INFO TaskSchedulerImpl: Adding task set 16.0 with 1 tasks
20/11/28 21:14:10 INFO TaskSetManager: Starting task 0.0 in stage 16.0 (TID 16, localhost, executor driver, partition 0, ANY, 5817 bytes)
20/11/28 21:14:10 INFO Executor: Running task 0.0 in stage 16.0 (TID 16)
20/11/28 21:14:10 INFO ShuffleBlockFetcherIterator: Getting 1 non-empty blocks out of 1 blocks
20/11/28 21:14:10 INFO ShuffleBlockFetcherIterator: Started 0 remote fetches in 0 ms
20/11/28 21:14:10 INFO Executor: Finished task 0.0 in stage 16.0 (TID 16). 2144 bytes result sent to driver
20/11/28 21:14:10 INFO TaskSetManager: Finished task 0.0 in stage 16.0 (TID 16) in 18 ms on localhost (executor driver) (1/1)
20/11/28 21:14:10 INFO TaskSchedulerImpl: Removed TaskSet 16.0, whose tasks have all completed, from pool 
20/11/28 21:14:10 INFO DAGScheduler: ResultStage 16 (countByValue at StringIndexer.scala:92) finished in 0.019 s
20/11/28 21:14:10 INFO DAGScheduler: Job 9 finished: countByValue at StringIndexer.scala:92, took 3.079860 s
20/11/28 21:14:10 INFO CodeGenerator: Code generated in 13.955231 ms
20/11/28 21:14:10 INFO SparkContext: Starting job: countByValue at StringIndexer.scala:92
20/11/28 21:14:10 INFO DAGScheduler: Registering RDD 74 (countByValue at StringIndexer.scala:92)
20/11/28 21:14:10 INFO DAGScheduler: Got job 10 (countByValue at StringIndexer.scala:92) with 1 output partitions
20/11/28 21:14:10 INFO DAGScheduler: Final stage: ResultStage 18 (countByValue at StringIndexer.scala:92)
20/11/28 21:14:10 INFO DAGScheduler: Parents of final stage: List(ShuffleMapStage 17)
20/11/28 21:14:10 INFO DAGScheduler: Missing parents: List(ShuffleMapStage 17)
20/11/28 21:14:10 INFO DAGScheduler: Submitting ShuffleMapStage 17 (MapPartitionsRDD[74] at countByValue at StringIndexer.scala:92), which has no missing parents
20/11/28 21:14:10 INFO MemoryStore: Block broadcast_17 stored as values in memory (estimated size 32.3 KB, free 903.3 MB)
20/11/28 21:14:10 INFO MemoryStore: Block broadcast_17_piece0 stored as bytes in memory (estimated size 12.2 KB, free 903.3 MB)
20/11/28 21:14:10 INFO BlockManagerInfo: Added broadcast_17_piece0 in memory on 127.0.0.1:49604 (size: 12.2 KB, free: 903.4 MB)
20/11/28 21:14:10 INFO SparkContext: Created broadcast 17 from broadcast at DAGScheduler.scala:996
20/11/28 21:14:10 INFO DAGScheduler: Submitting 1 missing tasks from ShuffleMapStage 17 (MapPartitionsRDD[74] at countByValue at StringIndexer.scala:92)
20/11/28 21:14:10 INFO TaskSchedulerImpl: Adding task set 17.0 with 1 tasks
20/11/28 21:14:10 INFO BlockManagerInfo: Removed broadcast_16_piece0 on 127.0.0.1:49604 in memory (size: 1970.0 B, free: 903.4 MB)
20/11/28 21:14:12 WARN TaskSetManager: Stage 17 contains a task of very large size (40834 KB). The maximum recommended task size is 100 KB.
20/11/28 21:14:12 INFO TaskSetManager: Starting task 0.0 in stage 17.0 (TID 17, localhost, executor driver, partition 0, PROCESS_LOCAL, 41814928 bytes)
20/11/28 21:14:12 INFO Executor: Running task 0.0 in stage 17.0 (TID 17)
20/11/28 21:14:13 INFO BlockManager: Found block rdd_16_0 locally
20/11/28 21:14:13 INFO Executor: Finished task 0.0 in stage 17.0 (TID 17). 2505 bytes result sent to driver
20/11/28 21:14:13 INFO TaskSetManager: Finished task 0.0 in stage 17.0 (TID 17) in 2874 ms on localhost (executor driver) (1/1)
20/11/28 21:14:13 INFO TaskSchedulerImpl: Removed TaskSet 17.0, whose tasks have all completed, from pool 
20/11/28 21:14:13 INFO DAGScheduler: ShuffleMapStage 17 (countByValue at StringIndexer.scala:92) finished in 2.874 s
20/11/28 21:14:13 INFO DAGScheduler: looking for newly runnable stages
20/11/28 21:14:13 INFO DAGScheduler: running: Set()
20/11/28 21:14:13 INFO DAGScheduler: waiting: Set(ResultStage 18)
20/11/28 21:14:13 INFO DAGScheduler: failed: Set()
20/11/28 21:14:13 INFO DAGScheduler: Submitting ResultStage 18 (ShuffledRDD[75] at countByValue at StringIndexer.scala:92), which has no missing parents
20/11/28 21:14:13 INFO MemoryStore: Block broadcast_18 stored as values in memory (estimated size 3.2 KB, free 903.3 MB)
20/11/28 21:14:13 INFO MemoryStore: Block broadcast_18_piece0 stored as bytes in memory (estimated size 1970.0 B, free 903.3 MB)
20/11/28 21:14:13 INFO BlockManagerInfo: Added broadcast_18_piece0 in memory on 127.0.0.1:49604 (size: 1970.0 B, free: 903.4 MB)
20/11/28 21:14:13 INFO SparkContext: Created broadcast 18 from broadcast at DAGScheduler.scala:996
20/11/28 21:14:13 INFO DAGScheduler: Submitting 1 missing tasks from ResultStage 18 (ShuffledRDD[75] at countByValue at StringIndexer.scala:92)
20/11/28 21:14:13 INFO TaskSchedulerImpl: Adding task set 18.0 with 1 tasks
20/11/28 21:14:13 INFO TaskSetManager: Starting task 0.0 in stage 18.0 (TID 18, localhost, executor driver, partition 0, ANY, 5817 bytes)
20/11/28 21:14:13 INFO Executor: Running task 0.0 in stage 18.0 (TID 18)
20/11/28 21:14:13 INFO ShuffleBlockFetcherIterator: Getting 1 non-empty blocks out of 1 blocks
20/11/28 21:14:13 INFO ShuffleBlockFetcherIterator: Started 0 remote fetches in 0 ms
20/11/28 21:14:13 INFO Executor: Finished task 0.0 in stage 18.0 (TID 18). 2035 bytes result sent to driver
20/11/28 21:14:13 INFO TaskSetManager: Finished task 0.0 in stage 18.0 (TID 18) in 10 ms on localhost (executor driver) (1/1)
20/11/28 21:14:13 INFO TaskSchedulerImpl: Removed TaskSet 18.0, whose tasks have all completed, from pool 
20/11/28 21:14:13 INFO DAGScheduler: ResultStage 18 (countByValue at StringIndexer.scala:92) finished in 0.011 s
20/11/28 21:14:13 INFO DAGScheduler: Job 10 finished: countByValue at StringIndexer.scala:92, took 2.900932 s
20/11/28 21:14:13 INFO CodeGenerator: Code generated in 16.553872 ms
20/11/28 21:14:13 INFO SparkContext: Starting job: countByValue at StringIndexer.scala:92
20/11/28 21:14:13 INFO DAGScheduler: Registering RDD 82 (countByValue at StringIndexer.scala:92)
20/11/28 21:14:13 INFO DAGScheduler: Got job 11 (countByValue at StringIndexer.scala:92) with 1 output partitions
20/11/28 21:14:13 INFO DAGScheduler: Final stage: ResultStage 20 (countByValue at StringIndexer.scala:92)
20/11/28 21:14:13 INFO DAGScheduler: Parents of final stage: List(ShuffleMapStage 19)
20/11/28 21:14:13 INFO DAGScheduler: Missing parents: List(ShuffleMapStage 19)
20/11/28 21:14:13 INFO DAGScheduler: Submitting ShuffleMapStage 19 (MapPartitionsRDD[82] at countByValue at StringIndexer.scala:92), which has no missing parents
20/11/28 21:14:13 INFO MemoryStore: Block broadcast_19 stored as values in memory (estimated size 32.3 KB, free 903.3 MB)
20/11/28 21:14:13 INFO MemoryStore: Block broadcast_19_piece0 stored as bytes in memory (estimated size 12.3 KB, free 903.2 MB)
20/11/28 21:14:13 INFO BlockManagerInfo: Added broadcast_19_piece0 in memory on 127.0.0.1:49604 (size: 12.3 KB, free: 903.4 MB)
20/11/28 21:14:13 INFO SparkContext: Created broadcast 19 from broadcast at DAGScheduler.scala:996
20/11/28 21:14:13 INFO DAGScheduler: Submitting 1 missing tasks from ShuffleMapStage 19 (MapPartitionsRDD[82] at countByValue at StringIndexer.scala:92)
20/11/28 21:14:13 INFO TaskSchedulerImpl: Adding task set 19.0 with 1 tasks
20/11/28 21:14:14 INFO BlockManagerInfo: Removed broadcast_17_piece0 on 127.0.0.1:49604 in memory (size: 12.2 KB, free: 903.4 MB)
20/11/28 21:14:14 INFO BlockManagerInfo: Removed broadcast_18_piece0 on 127.0.0.1:49604 in memory (size: 1970.0 B, free: 903.4 MB)
20/11/28 21:14:14 INFO ContextCleaner: Cleaned shuffle 7
20/11/28 21:14:14 INFO ContextCleaner: Cleaned accumulator 915
20/11/28 21:14:14 INFO ContextCleaner: Cleaned accumulator 914
20/11/28 21:14:14 INFO ContextCleaner: Cleaned accumulator 913
20/11/28 21:14:14 INFO ContextCleaner: Cleaned accumulator 912
20/11/28 21:14:14 INFO ContextCleaner: Cleaned accumulator 911
20/11/28 21:14:14 INFO ContextCleaner: Cleaned accumulator 910
20/11/28 21:14:14 INFO BlockManagerInfo: Removed broadcast_15_piece0 on 127.0.0.1:49604 in memory (size: 12.3 KB, free: 903.4 MB)
20/11/28 21:14:14 INFO ContextCleaner: Cleaned shuffle 6
20/11/28 21:14:14 INFO ContextCleaner: Cleaned accumulator 813
20/11/28 21:14:14 INFO ContextCleaner: Cleaned accumulator 812
20/11/28 21:14:14 INFO ContextCleaner: Cleaned accumulator 811
20/11/28 21:14:14 INFO ContextCleaner: Cleaned accumulator 810
20/11/28 21:14:14 INFO ContextCleaner: Cleaned accumulator 809
20/11/28 21:14:14 INFO ContextCleaner: Cleaned accumulator 808
20/11/28 21:14:14 INFO BlockManagerInfo: Removed broadcast_13_piece0 on 127.0.0.1:49604 in memory (size: 12.3 KB, free: 903.4 MB)
20/11/28 21:14:14 INFO ContextCleaner: Cleaned shuffle 5
20/11/28 21:14:14 INFO ContextCleaner: Cleaned accumulator 711
20/11/28 21:14:14 INFO ContextCleaner: Cleaned accumulator 710
20/11/28 21:14:14 INFO ContextCleaner: Cleaned accumulator 709
20/11/28 21:14:14 INFO ContextCleaner: Cleaned accumulator 708
20/11/28 21:14:14 INFO ContextCleaner: Cleaned accumulator 707
20/11/28 21:14:14 INFO ContextCleaner: Cleaned accumulator 706
20/11/28 21:14:14 INFO BlockManagerInfo: Removed broadcast_11_piece0 on 127.0.0.1:49604 in memory (size: 12.2 KB, free: 903.5 MB)
20/11/28 21:14:14 INFO ContextCleaner: Cleaned shuffle 4
20/11/28 21:14:14 INFO ContextCleaner: Cleaned accumulator 609
20/11/28 21:14:14 INFO ContextCleaner: Cleaned accumulator 608
20/11/28 21:14:14 INFO ContextCleaner: Cleaned accumulator 607
20/11/28 21:14:14 INFO ContextCleaner: Cleaned accumulator 606
20/11/28 21:14:14 INFO ContextCleaner: Cleaned accumulator 605
20/11/28 21:14:14 INFO ContextCleaner: Cleaned accumulator 604
20/11/28 21:14:16 WARN TaskSetManager: Stage 19 contains a task of very large size (40834 KB). The maximum recommended task size is 100 KB.
20/11/28 21:14:16 INFO TaskSetManager: Starting task 0.0 in stage 19.0 (TID 19, localhost, executor driver, partition 0, PROCESS_LOCAL, 41814928 bytes)
20/11/28 21:14:16 INFO Executor: Running task 0.0 in stage 19.0 (TID 19)
20/11/28 21:14:16 INFO BlockManager: Found block rdd_16_0 locally
20/11/28 21:14:17 INFO Executor: Finished task 0.0 in stage 19.0 (TID 19). 2505 bytes result sent to driver
20/11/28 21:14:17 INFO TaskSetManager: Finished task 0.0 in stage 19.0 (TID 19) in 3519 ms on localhost (executor driver) (1/1)
20/11/28 21:14:17 INFO TaskSchedulerImpl: Removed TaskSet 19.0, whose tasks have all completed, from pool 
20/11/28 21:14:17 INFO DAGScheduler: ShuffleMapStage 19 (countByValue at StringIndexer.scala:92) finished in 3.520 s
20/11/28 21:14:17 INFO DAGScheduler: looking for newly runnable stages
20/11/28 21:14:17 INFO DAGScheduler: running: Set()
20/11/28 21:14:17 INFO DAGScheduler: waiting: Set(ResultStage 20)
20/11/28 21:14:17 INFO DAGScheduler: failed: Set()
20/11/28 21:14:17 INFO DAGScheduler: Submitting ResultStage 20 (ShuffledRDD[83] at countByValue at StringIndexer.scala:92), which has no missing parents
20/11/28 21:14:17 INFO MemoryStore: Block broadcast_20 stored as values in memory (estimated size 3.2 KB, free 903.4 MB)
20/11/28 21:14:17 INFO MemoryStore: Block broadcast_20_piece0 stored as bytes in memory (estimated size 1970.0 B, free 903.4 MB)
20/11/28 21:14:17 INFO BlockManagerInfo: Added broadcast_20_piece0 in memory on 127.0.0.1:49604 (size: 1970.0 B, free: 903.4 MB)
20/11/28 21:14:17 INFO SparkContext: Created broadcast 20 from broadcast at DAGScheduler.scala:996
20/11/28 21:14:17 INFO DAGScheduler: Submitting 1 missing tasks from ResultStage 20 (ShuffledRDD[83] at countByValue at StringIndexer.scala:92)
20/11/28 21:14:17 INFO TaskSchedulerImpl: Adding task set 20.0 with 1 tasks
20/11/28 21:14:17 INFO TaskSetManager: Starting task 0.0 in stage 20.0 (TID 20, localhost, executor driver, partition 0, ANY, 5817 bytes)
20/11/28 21:14:17 INFO Executor: Running task 0.0 in stage 20.0 (TID 20)
20/11/28 21:14:17 INFO ShuffleBlockFetcherIterator: Getting 1 non-empty blocks out of 1 blocks
20/11/28 21:14:17 INFO ShuffleBlockFetcherIterator: Started 0 remote fetches in 0 ms
20/11/28 21:14:17 INFO Executor: Finished task 0.0 in stage 20.0 (TID 20). 3325 bytes result sent to driver
20/11/28 21:14:17 INFO TaskSetManager: Finished task 0.0 in stage 20.0 (TID 20) in 10 ms on localhost (executor driver) (1/1)
20/11/28 21:14:17 INFO TaskSchedulerImpl: Removed TaskSet 20.0, whose tasks have all completed, from pool 
20/11/28 21:14:17 INFO DAGScheduler: ResultStage 20 (countByValue at StringIndexer.scala:92) finished in 0.011 s
20/11/28 21:14:17 INFO DAGScheduler: Job 11 finished: countByValue at StringIndexer.scala:92, took 3.549236 s
20/11/28 21:14:17 INFO CodeGenerator: Code generated in 17.154543 ms
20/11/28 21:14:17 INFO SparkContext: Starting job: countByValue at StringIndexer.scala:92
20/11/28 21:14:17 INFO DAGScheduler: Registering RDD 90 (countByValue at StringIndexer.scala:92)
20/11/28 21:14:17 INFO DAGScheduler: Got job 12 (countByValue at StringIndexer.scala:92) with 1 output partitions
20/11/28 21:14:17 INFO DAGScheduler: Final stage: ResultStage 22 (countByValue at StringIndexer.scala:92)
20/11/28 21:14:17 INFO DAGScheduler: Parents of final stage: List(ShuffleMapStage 21)
20/11/28 21:14:17 INFO DAGScheduler: Missing parents: List(ShuffleMapStage 21)
20/11/28 21:14:17 INFO DAGScheduler: Submitting ShuffleMapStage 21 (MapPartitionsRDD[90] at countByValue at StringIndexer.scala:92), which has no missing parents
20/11/28 21:14:17 INFO MemoryStore: Block broadcast_21 stored as values in memory (estimated size 32.3 KB, free 903.4 MB)
20/11/28 21:14:17 INFO MemoryStore: Block broadcast_21_piece0 stored as bytes in memory (estimated size 12.3 KB, free 903.4 MB)
20/11/28 21:14:17 INFO BlockManagerInfo: Added broadcast_21_piece0 in memory on 127.0.0.1:49604 (size: 12.3 KB, free: 903.4 MB)
20/11/28 21:14:17 INFO SparkContext: Created broadcast 21 from broadcast at DAGScheduler.scala:996
20/11/28 21:14:17 INFO DAGScheduler: Submitting 1 missing tasks from ShuffleMapStage 21 (MapPartitionsRDD[90] at countByValue at StringIndexer.scala:92)
20/11/28 21:14:17 INFO TaskSchedulerImpl: Adding task set 21.0 with 1 tasks
20/11/28 21:14:18 INFO BlockManagerInfo: Removed broadcast_19_piece0 on 127.0.0.1:49604 in memory (size: 12.3 KB, free: 903.4 MB)
20/11/28 21:14:18 INFO BlockManagerInfo: Removed broadcast_20_piece0 on 127.0.0.1:49604 in memory (size: 1970.0 B, free: 903.5 MB)
20/11/28 21:14:18 INFO ContextCleaner: Cleaned shuffle 8
20/11/28 21:14:18 INFO ContextCleaner: Cleaned accumulator 1017
20/11/28 21:14:18 INFO ContextCleaner: Cleaned accumulator 1016
20/11/28 21:14:18 INFO ContextCleaner: Cleaned accumulator 1015
20/11/28 21:14:18 INFO ContextCleaner: Cleaned accumulator 1014
20/11/28 21:14:18 INFO ContextCleaner: Cleaned accumulator 1013
20/11/28 21:14:18 INFO ContextCleaner: Cleaned accumulator 1012
20/11/28 21:14:19 WARN TaskSetManager: Stage 21 contains a task of very large size (40834 KB). The maximum recommended task size is 100 KB.
20/11/28 21:14:19 INFO TaskSetManager: Starting task 0.0 in stage 21.0 (TID 21, localhost, executor driver, partition 0, PROCESS_LOCAL, 41814928 bytes)
20/11/28 21:14:19 INFO Executor: Running task 0.0 in stage 21.0 (TID 21)
20/11/28 21:14:20 INFO BlockManager: Found block rdd_16_0 locally
20/11/28 21:14:20 INFO Executor: Finished task 0.0 in stage 21.0 (TID 21). 2505 bytes result sent to driver
20/11/28 21:14:20 INFO TaskSetManager: Finished task 0.0 in stage 21.0 (TID 21) in 3294 ms on localhost (executor driver) (1/1)
20/11/28 21:14:20 INFO TaskSchedulerImpl: Removed TaskSet 21.0, whose tasks have all completed, from pool 
20/11/28 21:14:20 INFO DAGScheduler: ShuffleMapStage 21 (countByValue at StringIndexer.scala:92) finished in 3.295 s
20/11/28 21:14:20 INFO DAGScheduler: looking for newly runnable stages
20/11/28 21:14:20 INFO DAGScheduler: running: Set()
20/11/28 21:14:20 INFO DAGScheduler: waiting: Set(ResultStage 22)
20/11/28 21:14:20 INFO DAGScheduler: failed: Set()
20/11/28 21:14:20 INFO DAGScheduler: Submitting ResultStage 22 (ShuffledRDD[91] at countByValue at StringIndexer.scala:92), which has no missing parents
20/11/28 21:14:20 INFO MemoryStore: Block broadcast_22 stored as values in memory (estimated size 3.2 KB, free 903.4 MB)
20/11/28 21:14:20 INFO MemoryStore: Block broadcast_22_piece0 stored as bytes in memory (estimated size 1970.0 B, free 903.4 MB)
20/11/28 21:14:20 INFO BlockManagerInfo: Added broadcast_22_piece0 in memory on 127.0.0.1:49604 (size: 1970.0 B, free: 903.4 MB)
20/11/28 21:14:20 INFO SparkContext: Created broadcast 22 from broadcast at DAGScheduler.scala:996
20/11/28 21:14:20 INFO DAGScheduler: Submitting 1 missing tasks from ResultStage 22 (ShuffledRDD[91] at countByValue at StringIndexer.scala:92)
20/11/28 21:14:20 INFO TaskSchedulerImpl: Adding task set 22.0 with 1 tasks
20/11/28 21:14:20 INFO TaskSetManager: Starting task 0.0 in stage 22.0 (TID 22, localhost, executor driver, partition 0, ANY, 5817 bytes)
20/11/28 21:14:20 INFO Executor: Running task 0.0 in stage 22.0 (TID 22)
20/11/28 21:14:20 INFO ShuffleBlockFetcherIterator: Getting 1 non-empty blocks out of 1 blocks
20/11/28 21:14:20 INFO ShuffleBlockFetcherIterator: Started 0 remote fetches in 1 ms
20/11/28 21:14:20 INFO Executor: Finished task 0.0 in stage 22.0 (TID 22). 2436 bytes result sent to driver
20/11/28 21:14:20 INFO TaskSetManager: Finished task 0.0 in stage 22.0 (TID 22) in 11 ms on localhost (executor driver) (1/1)
20/11/28 21:14:20 INFO TaskSchedulerImpl: Removed TaskSet 22.0, whose tasks have all completed, from pool 
20/11/28 21:14:20 INFO DAGScheduler: ResultStage 22 (countByValue at StringIndexer.scala:92) finished in 0.011 s
20/11/28 21:14:20 INFO DAGScheduler: Job 12 finished: countByValue at StringIndexer.scala:92, took 3.321788 s
20/11/28 21:14:21 INFO CodeGenerator: Code generated in 17.804734 ms
20/11/28 21:14:21 INFO SparkContext: Starting job: countByValue at StringIndexer.scala:92
20/11/28 21:14:21 INFO DAGScheduler: Registering RDD 98 (countByValue at StringIndexer.scala:92)
20/11/28 21:14:21 INFO DAGScheduler: Got job 13 (countByValue at StringIndexer.scala:92) with 1 output partitions
20/11/28 21:14:21 INFO DAGScheduler: Final stage: ResultStage 24 (countByValue at StringIndexer.scala:92)
20/11/28 21:14:21 INFO DAGScheduler: Parents of final stage: List(ShuffleMapStage 23)
20/11/28 21:14:21 INFO DAGScheduler: Missing parents: List(ShuffleMapStage 23)
20/11/28 21:14:21 INFO DAGScheduler: Submitting ShuffleMapStage 23 (MapPartitionsRDD[98] at countByValue at StringIndexer.scala:92), which has no missing parents
20/11/28 21:14:21 INFO MemoryStore: Block broadcast_23 stored as values in memory (estimated size 32.3 KB, free 903.4 MB)
20/11/28 21:14:21 INFO MemoryStore: Block broadcast_23_piece0 stored as bytes in memory (estimated size 12.3 KB, free 903.4 MB)
20/11/28 21:14:21 INFO BlockManagerInfo: Added broadcast_23_piece0 in memory on 127.0.0.1:49604 (size: 12.3 KB, free: 903.4 MB)
20/11/28 21:14:21 INFO SparkContext: Created broadcast 23 from broadcast at DAGScheduler.scala:996
20/11/28 21:14:21 INFO DAGScheduler: Submitting 1 missing tasks from ShuffleMapStage 23 (MapPartitionsRDD[98] at countByValue at StringIndexer.scala:92)
20/11/28 21:14:21 INFO TaskSchedulerImpl: Adding task set 23.0 with 1 tasks
20/11/28 21:14:22 INFO BlockManagerInfo: Removed broadcast_21_piece0 on 127.0.0.1:49604 in memory (size: 12.3 KB, free: 903.4 MB)
20/11/28 21:14:22 INFO BlockManagerInfo: Removed broadcast_22_piece0 on 127.0.0.1:49604 in memory (size: 1970.0 B, free: 903.5 MB)
20/11/28 21:14:22 INFO ContextCleaner: Cleaned shuffle 9
20/11/28 21:14:22 INFO ContextCleaner: Cleaned accumulator 1119
20/11/28 21:14:22 INFO ContextCleaner: Cleaned accumulator 1118
20/11/28 21:14:22 INFO ContextCleaner: Cleaned accumulator 1117
20/11/28 21:14:22 INFO ContextCleaner: Cleaned accumulator 1116
20/11/28 21:14:22 INFO ContextCleaner: Cleaned accumulator 1115
20/11/28 21:14:22 INFO ContextCleaner: Cleaned accumulator 1114
20/11/28 21:14:22 WARN TaskSetManager: Stage 23 contains a task of very large size (40834 KB). The maximum recommended task size is 100 KB.
20/11/28 21:14:22 INFO TaskSetManager: Starting task 0.0 in stage 23.0 (TID 23, localhost, executor driver, partition 0, PROCESS_LOCAL, 41814928 bytes)
20/11/28 21:14:22 INFO Executor: Running task 0.0 in stage 23.0 (TID 23)
20/11/28 21:14:23 INFO BlockManager: Found block rdd_16_0 locally
20/11/28 21:14:24 INFO Executor: Finished task 0.0 in stage 23.0 (TID 23). 2505 bytes result sent to driver
20/11/28 21:14:24 INFO TaskSetManager: Finished task 0.0 in stage 23.0 (TID 23) in 3304 ms on localhost (executor driver) (1/1)
20/11/28 21:14:24 INFO TaskSchedulerImpl: Removed TaskSet 23.0, whose tasks have all completed, from pool 
20/11/28 21:14:24 INFO DAGScheduler: ShuffleMapStage 23 (countByValue at StringIndexer.scala:92) finished in 3.305 s
20/11/28 21:14:24 INFO DAGScheduler: looking for newly runnable stages
20/11/28 21:14:24 INFO DAGScheduler: running: Set()
20/11/28 21:14:24 INFO DAGScheduler: waiting: Set(ResultStage 24)
20/11/28 21:14:24 INFO DAGScheduler: failed: Set()
20/11/28 21:14:24 INFO DAGScheduler: Submitting ResultStage 24 (ShuffledRDD[99] at countByValue at StringIndexer.scala:92), which has no missing parents
20/11/28 21:14:24 INFO MemoryStore: Block broadcast_24 stored as values in memory (estimated size 3.2 KB, free 903.4 MB)
20/11/28 21:14:24 INFO MemoryStore: Block broadcast_24_piece0 stored as bytes in memory (estimated size 1970.0 B, free 903.4 MB)
20/11/28 21:14:24 INFO BlockManagerInfo: Added broadcast_24_piece0 in memory on 127.0.0.1:49604 (size: 1970.0 B, free: 903.4 MB)
20/11/28 21:14:24 INFO SparkContext: Created broadcast 24 from broadcast at DAGScheduler.scala:996
20/11/28 21:14:24 INFO DAGScheduler: Submitting 1 missing tasks from ResultStage 24 (ShuffledRDD[99] at countByValue at StringIndexer.scala:92)
20/11/28 21:14:24 INFO TaskSchedulerImpl: Adding task set 24.0 with 1 tasks
20/11/28 21:14:24 INFO TaskSetManager: Starting task 0.0 in stage 24.0 (TID 24, localhost, executor driver, partition 0, ANY, 5817 bytes)
20/11/28 21:14:24 INFO Executor: Running task 0.0 in stage 24.0 (TID 24)
20/11/28 21:14:24 INFO ShuffleBlockFetcherIterator: Getting 1 non-empty blocks out of 1 blocks
20/11/28 21:14:24 INFO ShuffleBlockFetcherIterator: Started 0 remote fetches in 0 ms
20/11/28 21:14:24 INFO Executor: Finished task 0.0 in stage 24.0 (TID 24). 14919 bytes result sent to driver
20/11/28 21:14:24 INFO TaskSetManager: Finished task 0.0 in stage 24.0 (TID 24) in 44 ms on localhost (executor driver) (1/1)
20/11/28 21:14:24 INFO TaskSchedulerImpl: Removed TaskSet 24.0, whose tasks have all completed, from pool 
20/11/28 21:14:24 INFO DAGScheduler: ResultStage 24 (countByValue at StringIndexer.scala:92) finished in 0.047 s
20/11/28 21:14:24 INFO DAGScheduler: Job 13 finished: countByValue at StringIndexer.scala:92, took 3.370463 s
20/11/28 21:14:24 INFO CodeGenerator: Code generated in 15.830134 ms
20/11/28 21:14:24 INFO SparkContext: Starting job: countByValue at StringIndexer.scala:92
20/11/28 21:14:24 INFO DAGScheduler: Registering RDD 106 (countByValue at StringIndexer.scala:92)
20/11/28 21:14:24 INFO DAGScheduler: Got job 14 (countByValue at StringIndexer.scala:92) with 1 output partitions
20/11/28 21:14:24 INFO DAGScheduler: Final stage: ResultStage 26 (countByValue at StringIndexer.scala:92)
20/11/28 21:14:24 INFO DAGScheduler: Parents of final stage: List(ShuffleMapStage 25)
20/11/28 21:14:24 INFO DAGScheduler: Missing parents: List(ShuffleMapStage 25)
20/11/28 21:14:24 INFO DAGScheduler: Submitting ShuffleMapStage 25 (MapPartitionsRDD[106] at countByValue at StringIndexer.scala:92), which has no missing parents
20/11/28 21:14:24 INFO MemoryStore: Block broadcast_25 stored as values in memory (estimated size 32.3 KB, free 903.4 MB)
20/11/28 21:14:24 INFO MemoryStore: Block broadcast_25_piece0 stored as bytes in memory (estimated size 12.3 KB, free 903.4 MB)
20/11/28 21:14:24 INFO BlockManagerInfo: Added broadcast_25_piece0 in memory on 127.0.0.1:49604 (size: 12.3 KB, free: 903.4 MB)
20/11/28 21:14:24 INFO SparkContext: Created broadcast 25 from broadcast at DAGScheduler.scala:996
20/11/28 21:14:24 INFO DAGScheduler: Submitting 1 missing tasks from ShuffleMapStage 25 (MapPartitionsRDD[106] at countByValue at StringIndexer.scala:92)
20/11/28 21:14:24 INFO TaskSchedulerImpl: Adding task set 25.0 with 1 tasks
20/11/28 21:14:24 INFO BlockManagerInfo: Removed broadcast_24_piece0 on 127.0.0.1:49604 in memory (size: 1970.0 B, free: 903.4 MB)
20/11/28 21:14:26 WARN TaskSetManager: Stage 25 contains a task of very large size (40834 KB). The maximum recommended task size is 100 KB.
20/11/28 21:14:26 INFO TaskSetManager: Starting task 0.0 in stage 25.0 (TID 25, localhost, executor driver, partition 0, PROCESS_LOCAL, 41814928 bytes)
20/11/28 21:14:26 INFO Executor: Running task 0.0 in stage 25.0 (TID 25)
20/11/28 21:14:27 INFO BlockManagerInfo: Removed broadcast_23_piece0 on 127.0.0.1:49604 in memory (size: 12.3 KB, free: 903.5 MB)
20/11/28 21:14:27 INFO ContextCleaner: Cleaned shuffle 10
20/11/28 21:14:27 INFO ContextCleaner: Cleaned accumulator 1221
20/11/28 21:14:27 INFO ContextCleaner: Cleaned accumulator 1220
20/11/28 21:14:27 INFO ContextCleaner: Cleaned accumulator 1219
20/11/28 21:14:27 INFO ContextCleaner: Cleaned accumulator 1218
20/11/28 21:14:27 INFO ContextCleaner: Cleaned accumulator 1217
20/11/28 21:14:27 INFO ContextCleaner: Cleaned accumulator 1216
20/11/28 21:14:27 INFO BlockManager: Found block rdd_16_0 locally
20/11/28 21:14:28 INFO Executor: Finished task 0.0 in stage 25.0 (TID 25). 2505 bytes result sent to driver
20/11/28 21:14:28 INFO TaskSetManager: Finished task 0.0 in stage 25.0 (TID 25) in 3895 ms on localhost (executor driver) (1/1)
20/11/28 21:14:28 INFO TaskSchedulerImpl: Removed TaskSet 25.0, whose tasks have all completed, from pool 
20/11/28 21:14:28 INFO DAGScheduler: ShuffleMapStage 25 (countByValue at StringIndexer.scala:92) finished in 3.897 s
20/11/28 21:14:28 INFO DAGScheduler: looking for newly runnable stages
20/11/28 21:14:28 INFO DAGScheduler: running: Set()
20/11/28 21:14:28 INFO DAGScheduler: waiting: Set(ResultStage 26)
20/11/28 21:14:28 INFO DAGScheduler: failed: Set()
20/11/28 21:14:28 INFO DAGScheduler: Submitting ResultStage 26 (ShuffledRDD[107] at countByValue at StringIndexer.scala:92), which has no missing parents
20/11/28 21:14:28 INFO MemoryStore: Block broadcast_26 stored as values in memory (estimated size 3.2 KB, free 903.4 MB)
20/11/28 21:14:28 INFO MemoryStore: Block broadcast_26_piece0 stored as bytes in memory (estimated size 1970.0 B, free 903.4 MB)
20/11/28 21:14:28 INFO BlockManagerInfo: Added broadcast_26_piece0 in memory on 127.0.0.1:49604 (size: 1970.0 B, free: 903.4 MB)
20/11/28 21:14:28 INFO SparkContext: Created broadcast 26 from broadcast at DAGScheduler.scala:996
20/11/28 21:14:28 INFO DAGScheduler: Submitting 1 missing tasks from ResultStage 26 (ShuffledRDD[107] at countByValue at StringIndexer.scala:92)
20/11/28 21:14:28 INFO TaskSchedulerImpl: Adding task set 26.0 with 1 tasks
20/11/28 21:14:28 INFO TaskSetManager: Starting task 0.0 in stage 26.0 (TID 26, localhost, executor driver, partition 0, ANY, 5817 bytes)
20/11/28 21:14:28 INFO Executor: Running task 0.0 in stage 26.0 (TID 26)
20/11/28 21:14:28 INFO ShuffleBlockFetcherIterator: Getting 1 non-empty blocks out of 1 blocks
20/11/28 21:14:28 INFO ShuffleBlockFetcherIterator: Started 0 remote fetches in 1 ms
20/11/28 21:14:28 INFO Executor: Finished task 0.0 in stage 26.0 (TID 26). 15145 bytes result sent to driver
20/11/28 21:14:28 INFO TaskSetManager: Finished task 0.0 in stage 26.0 (TID 26) in 27 ms on localhost (executor driver) (1/1)
20/11/28 21:14:28 INFO TaskSchedulerImpl: Removed TaskSet 26.0, whose tasks have all completed, from pool 
20/11/28 21:14:28 INFO DAGScheduler: ResultStage 26 (countByValue at StringIndexer.scala:92) finished in 0.028 s
20/11/28 21:14:28 INFO DAGScheduler: Job 14 finished: countByValue at StringIndexer.scala:92, took 3.942404 s
20/11/28 21:14:28 INFO CodeGenerator: Code generated in 18.032875 ms
20/11/28 21:14:28 INFO SparkContext: Starting job: countByValue at StringIndexer.scala:92
20/11/28 21:14:28 INFO DAGScheduler: Registering RDD 114 (countByValue at StringIndexer.scala:92)
20/11/28 21:14:28 INFO DAGScheduler: Got job 15 (countByValue at StringIndexer.scala:92) with 1 output partitions
20/11/28 21:14:28 INFO DAGScheduler: Final stage: ResultStage 28 (countByValue at StringIndexer.scala:92)
20/11/28 21:14:28 INFO DAGScheduler: Parents of final stage: List(ShuffleMapStage 27)
20/11/28 21:14:28 INFO DAGScheduler: Missing parents: List(ShuffleMapStage 27)
20/11/28 21:14:28 INFO DAGScheduler: Submitting ShuffleMapStage 27 (MapPartitionsRDD[114] at countByValue at StringIndexer.scala:92), which has no missing parents
20/11/28 21:14:28 INFO MemoryStore: Block broadcast_27 stored as values in memory (estimated size 32.3 KB, free 903.4 MB)
20/11/28 21:14:28 INFO MemoryStore: Block broadcast_27_piece0 stored as bytes in memory (estimated size 12.3 KB, free 903.4 MB)
20/11/28 21:14:28 INFO BlockManagerInfo: Added broadcast_27_piece0 in memory on 127.0.0.1:49604 (size: 12.3 KB, free: 903.4 MB)
20/11/28 21:14:28 INFO SparkContext: Created broadcast 27 from broadcast at DAGScheduler.scala:996
20/11/28 21:14:28 INFO DAGScheduler: Submitting 1 missing tasks from ShuffleMapStage 27 (MapPartitionsRDD[114] at countByValue at StringIndexer.scala:92)
20/11/28 21:14:28 INFO TaskSchedulerImpl: Adding task set 27.0 with 1 tasks
20/11/28 21:14:29 INFO BlockManagerInfo: Removed broadcast_26_piece0 on 127.0.0.1:49604 in memory (size: 1970.0 B, free: 903.4 MB)
20/11/28 21:14:30 WARN TaskSetManager: Stage 27 contains a task of very large size (40834 KB). The maximum recommended task size is 100 KB.
20/11/28 21:14:30 INFO TaskSetManager: Starting task 0.0 in stage 27.0 (TID 27, localhost, executor driver, partition 0, PROCESS_LOCAL, 41814928 bytes)
20/11/28 21:14:30 INFO Executor: Running task 0.0 in stage 27.0 (TID 27)
20/11/28 21:14:31 INFO BlockManager: Found block rdd_16_0 locally
20/11/28 21:14:31 INFO Executor: Finished task 0.0 in stage 27.0 (TID 27). 2505 bytes result sent to driver
20/11/28 21:14:31 INFO TaskSetManager: Finished task 0.0 in stage 27.0 (TID 27) in 2969 ms on localhost (executor driver) (1/1)
20/11/28 21:14:31 INFO TaskSchedulerImpl: Removed TaskSet 27.0, whose tasks have all completed, from pool 
20/11/28 21:14:31 INFO DAGScheduler: ShuffleMapStage 27 (countByValue at StringIndexer.scala:92) finished in 2.969 s
20/11/28 21:14:31 INFO DAGScheduler: looking for newly runnable stages
20/11/28 21:14:31 INFO DAGScheduler: running: Set()
20/11/28 21:14:31 INFO DAGScheduler: waiting: Set(ResultStage 28)
20/11/28 21:14:31 INFO DAGScheduler: failed: Set()
20/11/28 21:14:31 INFO DAGScheduler: Submitting ResultStage 28 (ShuffledRDD[115] at countByValue at StringIndexer.scala:92), which has no missing parents
20/11/28 21:14:31 INFO MemoryStore: Block broadcast_28 stored as values in memory (estimated size 3.2 KB, free 903.4 MB)
20/11/28 21:14:31 INFO MemoryStore: Block broadcast_28_piece0 stored as bytes in memory (estimated size 1970.0 B, free 903.4 MB)
20/11/28 21:14:31 INFO BlockManagerInfo: Added broadcast_28_piece0 in memory on 127.0.0.1:49604 (size: 1970.0 B, free: 903.4 MB)
20/11/28 21:14:31 INFO SparkContext: Created broadcast 28 from broadcast at DAGScheduler.scala:996
20/11/28 21:14:31 INFO DAGScheduler: Submitting 1 missing tasks from ResultStage 28 (ShuffledRDD[115] at countByValue at StringIndexer.scala:92)
20/11/28 21:14:31 INFO TaskSchedulerImpl: Adding task set 28.0 with 1 tasks
20/11/28 21:14:31 INFO TaskSetManager: Starting task 0.0 in stage 28.0 (TID 28, localhost, executor driver, partition 0, ANY, 5817 bytes)
20/11/28 21:14:31 INFO Executor: Running task 0.0 in stage 28.0 (TID 28)
20/11/28 21:14:31 INFO ShuffleBlockFetcherIterator: Getting 1 non-empty blocks out of 1 blocks
20/11/28 21:14:31 INFO ShuffleBlockFetcherIterator: Started 0 remote fetches in 0 ms
20/11/28 21:14:31 INFO Executor: Finished task 0.0 in stage 28.0 (TID 28). 16017 bytes result sent to driver
20/11/28 21:14:31 INFO TaskSetManager: Finished task 0.0 in stage 28.0 (TID 28) in 21 ms on localhost (executor driver) (1/1)
20/11/28 21:14:31 INFO TaskSchedulerImpl: Removed TaskSet 28.0, whose tasks have all completed, from pool 
20/11/28 21:14:31 INFO DAGScheduler: ResultStage 28 (countByValue at StringIndexer.scala:92) finished in 0.022 s
20/11/28 21:14:31 INFO DAGScheduler: Job 15 finished: countByValue at StringIndexer.scala:92, took 3.006490 s
20/11/28 21:14:31 INFO CodeGenerator: Code generated in 16.733315 ms
20/11/28 21:14:31 INFO SparkContext: Starting job: countByValue at StringIndexer.scala:92
20/11/28 21:14:31 INFO DAGScheduler: Registering RDD 122 (countByValue at StringIndexer.scala:92)
20/11/28 21:14:31 INFO DAGScheduler: Got job 16 (countByValue at StringIndexer.scala:92) with 1 output partitions
20/11/28 21:14:31 INFO DAGScheduler: Final stage: ResultStage 30 (countByValue at StringIndexer.scala:92)
20/11/28 21:14:31 INFO DAGScheduler: Parents of final stage: List(ShuffleMapStage 29)
20/11/28 21:14:31 INFO DAGScheduler: Missing parents: List(ShuffleMapStage 29)
20/11/28 21:14:31 INFO DAGScheduler: Submitting ShuffleMapStage 29 (MapPartitionsRDD[122] at countByValue at StringIndexer.scala:92), which has no missing parents
20/11/28 21:14:31 INFO MemoryStore: Block broadcast_29 stored as values in memory (estimated size 32.3 KB, free 903.3 MB)
20/11/28 21:14:31 INFO MemoryStore: Block broadcast_29_piece0 stored as bytes in memory (estimated size 12.3 KB, free 903.3 MB)
20/11/28 21:14:31 INFO BlockManagerInfo: Added broadcast_29_piece0 in memory on 127.0.0.1:49604 (size: 12.3 KB, free: 903.4 MB)
20/11/28 21:14:31 INFO SparkContext: Created broadcast 29 from broadcast at DAGScheduler.scala:996
20/11/28 21:14:31 INFO DAGScheduler: Submitting 1 missing tasks from ShuffleMapStage 29 (MapPartitionsRDD[122] at countByValue at StringIndexer.scala:92)
20/11/28 21:14:31 INFO TaskSchedulerImpl: Adding task set 29.0 with 1 tasks
20/11/28 21:14:32 INFO BlockManagerInfo: Removed broadcast_28_piece0 on 127.0.0.1:49604 in memory (size: 1970.0 B, free: 903.4 MB)
20/11/28 21:14:33 WARN TaskSetManager: Stage 29 contains a task of very large size (40834 KB). The maximum recommended task size is 100 KB.
20/11/28 21:14:33 INFO TaskSetManager: Starting task 0.0 in stage 29.0 (TID 29, localhost, executor driver, partition 0, PROCESS_LOCAL, 41814928 bytes)
20/11/28 21:14:33 INFO Executor: Running task 0.0 in stage 29.0 (TID 29)
20/11/28 21:14:34 INFO BlockManager: Found block rdd_16_0 locally
20/11/28 21:14:35 INFO BlockManagerInfo: Removed broadcast_27_piece0 on 127.0.0.1:49604 in memory (size: 12.3 KB, free: 903.4 MB)
20/11/28 21:14:35 INFO ContextCleaner: Cleaned shuffle 12
20/11/28 21:14:35 INFO ContextCleaner: Cleaned accumulator 1425
20/11/28 21:14:35 INFO ContextCleaner: Cleaned accumulator 1424
20/11/28 21:14:35 INFO ContextCleaner: Cleaned accumulator 1423
20/11/28 21:14:35 INFO ContextCleaner: Cleaned accumulator 1422
20/11/28 21:14:35 INFO ContextCleaner: Cleaned accumulator 1421
20/11/28 21:14:35 INFO ContextCleaner: Cleaned accumulator 1420
20/11/28 21:14:35 INFO BlockManagerInfo: Removed broadcast_25_piece0 on 127.0.0.1:49604 in memory (size: 12.3 KB, free: 903.5 MB)
20/11/28 21:14:35 INFO ContextCleaner: Cleaned shuffle 11
20/11/28 21:14:35 INFO ContextCleaner: Cleaned accumulator 1323
20/11/28 21:14:35 INFO ContextCleaner: Cleaned accumulator 1322
20/11/28 21:14:35 INFO ContextCleaner: Cleaned accumulator 1321
20/11/28 21:14:35 INFO ContextCleaner: Cleaned accumulator 1320
20/11/28 21:14:35 INFO ContextCleaner: Cleaned accumulator 1319
20/11/28 21:14:35 INFO ContextCleaner: Cleaned accumulator 1318
20/11/28 21:14:35 INFO Executor: Finished task 0.0 in stage 29.0 (TID 29). 2505 bytes result sent to driver
20/11/28 21:14:35 INFO TaskSetManager: Finished task 0.0 in stage 29.0 (TID 29) in 3829 ms on localhost (executor driver) (1/1)
20/11/28 21:14:35 INFO TaskSchedulerImpl: Removed TaskSet 29.0, whose tasks have all completed, from pool 
20/11/28 21:14:35 INFO DAGScheduler: ShuffleMapStage 29 (countByValue at StringIndexer.scala:92) finished in 3.830 s
20/11/28 21:14:35 INFO DAGScheduler: looking for newly runnable stages
20/11/28 21:14:35 INFO DAGScheduler: running: Set()
20/11/28 21:14:35 INFO DAGScheduler: waiting: Set(ResultStage 30)
20/11/28 21:14:35 INFO DAGScheduler: failed: Set()
20/11/28 21:14:35 INFO DAGScheduler: Submitting ResultStage 30 (ShuffledRDD[123] at countByValue at StringIndexer.scala:92), which has no missing parents
20/11/28 21:14:35 INFO MemoryStore: Block broadcast_30 stored as values in memory (estimated size 3.2 KB, free 903.4 MB)
20/11/28 21:14:35 INFO MemoryStore: Block broadcast_30_piece0 stored as bytes in memory (estimated size 1970.0 B, free 903.4 MB)
20/11/28 21:14:35 INFO BlockManagerInfo: Added broadcast_30_piece0 in memory on 127.0.0.1:49604 (size: 1970.0 B, free: 903.4 MB)
20/11/28 21:14:35 INFO SparkContext: Created broadcast 30 from broadcast at DAGScheduler.scala:996
20/11/28 21:14:35 INFO DAGScheduler: Submitting 1 missing tasks from ResultStage 30 (ShuffledRDD[123] at countByValue at StringIndexer.scala:92)
20/11/28 21:14:35 INFO TaskSchedulerImpl: Adding task set 30.0 with 1 tasks
20/11/28 21:14:35 INFO TaskSetManager: Starting task 0.0 in stage 30.0 (TID 30, localhost, executor driver, partition 0, ANY, 5817 bytes)
20/11/28 21:14:35 INFO Executor: Running task 0.0 in stage 30.0 (TID 30)
20/11/28 21:14:35 INFO ShuffleBlockFetcherIterator: Getting 1 non-empty blocks out of 1 blocks
20/11/28 21:14:35 INFO ShuffleBlockFetcherIterator: Started 0 remote fetches in 0 ms
20/11/28 21:14:35 INFO Executor: Finished task 0.0 in stage 30.0 (TID 30). 1948 bytes result sent to driver
20/11/28 21:14:35 INFO TaskSetManager: Finished task 0.0 in stage 30.0 (TID 30) in 9 ms on localhost (executor driver) (1/1)
20/11/28 21:14:35 INFO TaskSchedulerImpl: Removed TaskSet 30.0, whose tasks have all completed, from pool 
20/11/28 21:14:35 INFO DAGScheduler: ResultStage 30 (countByValue at StringIndexer.scala:92) finished in 0.011 s
20/11/28 21:14:35 INFO DAGScheduler: Job 16 finished: countByValue at StringIndexer.scala:92, took 3.856654 s
20/11/28 21:14:35 INFO CodeGenerator: Code generated in 15.733579 ms
20/11/28 21:14:35 INFO SparkContext: Starting job: countByValue at StringIndexer.scala:92
20/11/28 21:14:35 INFO DAGScheduler: Registering RDD 130 (countByValue at StringIndexer.scala:92)
20/11/28 21:14:35 INFO DAGScheduler: Got job 17 (countByValue at StringIndexer.scala:92) with 1 output partitions
20/11/28 21:14:35 INFO DAGScheduler: Final stage: ResultStage 32 (countByValue at StringIndexer.scala:92)
20/11/28 21:14:35 INFO DAGScheduler: Parents of final stage: List(ShuffleMapStage 31)
20/11/28 21:14:35 INFO DAGScheduler: Missing parents: List(ShuffleMapStage 31)
20/11/28 21:14:35 INFO DAGScheduler: Submitting ShuffleMapStage 31 (MapPartitionsRDD[130] at countByValue at StringIndexer.scala:92), which has no missing parents
20/11/28 21:14:35 INFO MemoryStore: Block broadcast_31 stored as values in memory (estimated size 32.3 KB, free 903.4 MB)
20/11/28 21:14:35 INFO MemoryStore: Block broadcast_31_piece0 stored as bytes in memory (estimated size 12.2 KB, free 903.4 MB)
20/11/28 21:14:35 INFO BlockManagerInfo: Added broadcast_31_piece0 in memory on 127.0.0.1:49604 (size: 12.2 KB, free: 903.4 MB)
20/11/28 21:14:35 INFO SparkContext: Created broadcast 31 from broadcast at DAGScheduler.scala:996
20/11/28 21:14:35 INFO DAGScheduler: Submitting 1 missing tasks from ShuffleMapStage 31 (MapPartitionsRDD[130] at countByValue at StringIndexer.scala:92)
20/11/28 21:14:35 INFO TaskSchedulerImpl: Adding task set 31.0 with 1 tasks
20/11/28 21:14:36 INFO BlockManagerInfo: Removed broadcast_30_piece0 on 127.0.0.1:49604 in memory (size: 1970.0 B, free: 903.4 MB)
20/11/28 21:14:37 WARN TaskSetManager: Stage 31 contains a task of very large size (40834 KB). The maximum recommended task size is 100 KB.
20/11/28 21:14:37 INFO TaskSetManager: Starting task 0.0 in stage 31.0 (TID 31, localhost, executor driver, partition 0, PROCESS_LOCAL, 41814928 bytes)
20/11/28 21:14:37 INFO Executor: Running task 0.0 in stage 31.0 (TID 31)
20/11/28 21:14:38 INFO BlockManager: Found block rdd_16_0 locally
20/11/28 21:14:38 INFO Executor: Finished task 0.0 in stage 31.0 (TID 31). 2505 bytes result sent to driver
20/11/28 21:14:38 INFO TaskSetManager: Finished task 0.0 in stage 31.0 (TID 31) in 2870 ms on localhost (executor driver) (1/1)
20/11/28 21:14:38 INFO TaskSchedulerImpl: Removed TaskSet 31.0, whose tasks have all completed, from pool 
20/11/28 21:14:38 INFO DAGScheduler: ShuffleMapStage 31 (countByValue at StringIndexer.scala:92) finished in 2.872 s
20/11/28 21:14:38 INFO DAGScheduler: looking for newly runnable stages
20/11/28 21:14:38 INFO DAGScheduler: running: Set()
20/11/28 21:14:38 INFO DAGScheduler: waiting: Set(ResultStage 32)
20/11/28 21:14:38 INFO DAGScheduler: failed: Set()
20/11/28 21:14:38 INFO DAGScheduler: Submitting ResultStage 32 (ShuffledRDD[131] at countByValue at StringIndexer.scala:92), which has no missing parents
20/11/28 21:14:38 INFO MemoryStore: Block broadcast_32 stored as values in memory (estimated size 3.2 KB, free 903.4 MB)
20/11/28 21:14:38 INFO MemoryStore: Block broadcast_32_piece0 stored as bytes in memory (estimated size 1971.0 B, free 903.4 MB)
20/11/28 21:14:38 INFO BlockManagerInfo: Added broadcast_32_piece0 in memory on 127.0.0.1:49604 (size: 1971.0 B, free: 903.4 MB)
20/11/28 21:14:38 INFO SparkContext: Created broadcast 32 from broadcast at DAGScheduler.scala:996
20/11/28 21:14:38 INFO DAGScheduler: Submitting 1 missing tasks from ResultStage 32 (ShuffledRDD[131] at countByValue at StringIndexer.scala:92)
20/11/28 21:14:38 INFO TaskSchedulerImpl: Adding task set 32.0 with 1 tasks
20/11/28 21:14:38 INFO TaskSetManager: Starting task 0.0 in stage 32.0 (TID 32, localhost, executor driver, partition 0, ANY, 5817 bytes)
20/11/28 21:14:38 INFO Executor: Running task 0.0 in stage 32.0 (TID 32)
20/11/28 21:14:38 INFO ShuffleBlockFetcherIterator: Getting 1 non-empty blocks out of 1 blocks
20/11/28 21:14:38 INFO ShuffleBlockFetcherIterator: Started 0 remote fetches in 0 ms
20/11/28 21:14:38 INFO Executor: Finished task 0.0 in stage 32.0 (TID 32). 1950 bytes result sent to driver
20/11/28 21:14:38 INFO TaskSetManager: Finished task 0.0 in stage 32.0 (TID 32) in 8 ms on localhost (executor driver) (1/1)
20/11/28 21:14:38 INFO TaskSchedulerImpl: Removed TaskSet 32.0, whose tasks have all completed, from pool 
20/11/28 21:14:38 INFO DAGScheduler: ResultStage 32 (countByValue at StringIndexer.scala:92) finished in 0.008 s
20/11/28 21:14:38 INFO DAGScheduler: Job 17 finished: countByValue at StringIndexer.scala:92, took 2.894592 s
20/11/28 21:14:38 INFO BlockManagerInfo: Removed broadcast_32_piece0 on 127.0.0.1:49604 in memory (size: 1971.0 B, free: 903.4 MB)
20/11/28 21:14:39 INFO CodeGenerator: Code generated in 14.618851 ms
20/11/28 21:14:39 INFO SparkContext: Starting job: countByValue at StringIndexer.scala:92
20/11/28 21:14:39 INFO DAGScheduler: Registering RDD 138 (countByValue at StringIndexer.scala:92)
20/11/28 21:14:39 INFO DAGScheduler: Got job 18 (countByValue at StringIndexer.scala:92) with 1 output partitions
20/11/28 21:14:39 INFO DAGScheduler: Final stage: ResultStage 34 (countByValue at StringIndexer.scala:92)
20/11/28 21:14:39 INFO DAGScheduler: Parents of final stage: List(ShuffleMapStage 33)
20/11/28 21:14:39 INFO DAGScheduler: Missing parents: List(ShuffleMapStage 33)
20/11/28 21:14:39 INFO DAGScheduler: Submitting ShuffleMapStage 33 (MapPartitionsRDD[138] at countByValue at StringIndexer.scala:92), which has no missing parents
20/11/28 21:14:39 INFO MemoryStore: Block broadcast_33 stored as values in memory (estimated size 32.3 KB, free 903.3 MB)
20/11/28 21:14:39 INFO MemoryStore: Block broadcast_33_piece0 stored as bytes in memory (estimated size 12.3 KB, free 903.3 MB)
20/11/28 21:14:39 INFO BlockManagerInfo: Added broadcast_33_piece0 in memory on 127.0.0.1:49604 (size: 12.3 KB, free: 903.4 MB)
20/11/28 21:14:39 INFO SparkContext: Created broadcast 33 from broadcast at DAGScheduler.scala:996
20/11/28 21:14:39 INFO DAGScheduler: Submitting 1 missing tasks from ShuffleMapStage 33 (MapPartitionsRDD[138] at countByValue at StringIndexer.scala:92)
20/11/28 21:14:39 INFO TaskSchedulerImpl: Adding task set 33.0 with 1 tasks
20/11/28 21:14:40 WARN TaskSetManager: Stage 33 contains a task of very large size (40834 KB). The maximum recommended task size is 100 KB.
20/11/28 21:14:40 INFO TaskSetManager: Starting task 0.0 in stage 33.0 (TID 33, localhost, executor driver, partition 0, PROCESS_LOCAL, 41814928 bytes)
20/11/28 21:14:40 INFO Executor: Running task 0.0 in stage 33.0 (TID 33)
20/11/28 21:14:41 INFO BlockManager: Found block rdd_16_0 locally
20/11/28 21:14:42 INFO Executor: Finished task 0.0 in stage 33.0 (TID 33). 2505 bytes result sent to driver
20/11/28 21:14:42 INFO TaskSetManager: Finished task 0.0 in stage 33.0 (TID 33) in 2990 ms on localhost (executor driver) (1/1)
20/11/28 21:14:42 INFO TaskSchedulerImpl: Removed TaskSet 33.0, whose tasks have all completed, from pool 
20/11/28 21:14:42 INFO DAGScheduler: ShuffleMapStage 33 (countByValue at StringIndexer.scala:92) finished in 2.991 s
20/11/28 21:14:42 INFO DAGScheduler: looking for newly runnable stages
20/11/28 21:14:42 INFO DAGScheduler: running: Set()
20/11/28 21:14:42 INFO DAGScheduler: waiting: Set(ResultStage 34)
20/11/28 21:14:42 INFO DAGScheduler: failed: Set()
20/11/28 21:14:42 INFO DAGScheduler: Submitting ResultStage 34 (ShuffledRDD[139] at countByValue at StringIndexer.scala:92), which has no missing parents
20/11/28 21:14:42 INFO MemoryStore: Block broadcast_34 stored as values in memory (estimated size 3.2 KB, free 903.3 MB)
20/11/28 21:14:42 INFO MemoryStore: Block broadcast_34_piece0 stored as bytes in memory (estimated size 1970.0 B, free 903.3 MB)
20/11/28 21:14:42 INFO BlockManagerInfo: Added broadcast_34_piece0 in memory on 127.0.0.1:49604 (size: 1970.0 B, free: 903.4 MB)
20/11/28 21:14:42 INFO SparkContext: Created broadcast 34 from broadcast at DAGScheduler.scala:996
20/11/28 21:14:42 INFO DAGScheduler: Submitting 1 missing tasks from ResultStage 34 (ShuffledRDD[139] at countByValue at StringIndexer.scala:92)
20/11/28 21:14:42 INFO TaskSchedulerImpl: Adding task set 34.0 with 1 tasks
20/11/28 21:14:42 INFO TaskSetManager: Starting task 0.0 in stage 34.0 (TID 34, localhost, executor driver, partition 0, ANY, 5817 bytes)
20/11/28 21:14:42 INFO Executor: Running task 0.0 in stage 34.0 (TID 34)
20/11/28 21:14:42 INFO ShuffleBlockFetcherIterator: Getting 1 non-empty blocks out of 1 blocks
20/11/28 21:14:42 INFO ShuffleBlockFetcherIterator: Started 0 remote fetches in 0 ms
20/11/28 21:14:42 INFO Executor: Finished task 0.0 in stage 34.0 (TID 34). 1950 bytes result sent to driver
20/11/28 21:14:42 INFO TaskSetManager: Finished task 0.0 in stage 34.0 (TID 34) in 7 ms on localhost (executor driver) (1/1)
20/11/28 21:14:42 INFO TaskSchedulerImpl: Removed TaskSet 34.0, whose tasks have all completed, from pool 
20/11/28 21:14:42 INFO DAGScheduler: ResultStage 34 (countByValue at StringIndexer.scala:92) finished in 0.008 s
20/11/28 21:14:42 INFO DAGScheduler: Job 18 finished: countByValue at StringIndexer.scala:92, took 3.013011 s
20/11/28 21:14:42 INFO CodeGenerator: Code generated in 13.458621 ms
20/11/28 21:14:42 INFO SparkContext: Starting job: countByValue at StringIndexer.scala:92
20/11/28 21:14:42 INFO DAGScheduler: Registering RDD 146 (countByValue at StringIndexer.scala:92)
20/11/28 21:14:42 INFO DAGScheduler: Got job 19 (countByValue at StringIndexer.scala:92) with 1 output partitions
20/11/28 21:14:42 INFO DAGScheduler: Final stage: ResultStage 36 (countByValue at StringIndexer.scala:92)
20/11/28 21:14:42 INFO DAGScheduler: Parents of final stage: List(ShuffleMapStage 35)
20/11/28 21:14:42 INFO DAGScheduler: Missing parents: List(ShuffleMapStage 35)
20/11/28 21:14:42 INFO DAGScheduler: Submitting ShuffleMapStage 35 (MapPartitionsRDD[146] at countByValue at StringIndexer.scala:92), which has no missing parents
20/11/28 21:14:42 INFO MemoryStore: Block broadcast_35 stored as values in memory (estimated size 32.3 KB, free 903.3 MB)
20/11/28 21:14:42 INFO MemoryStore: Block broadcast_35_piece0 stored as bytes in memory (estimated size 12.3 KB, free 903.3 MB)
20/11/28 21:14:42 INFO BlockManagerInfo: Added broadcast_35_piece0 in memory on 127.0.0.1:49604 (size: 12.3 KB, free: 903.4 MB)
20/11/28 21:14:42 INFO SparkContext: Created broadcast 35 from broadcast at DAGScheduler.scala:996
20/11/28 21:14:42 INFO DAGScheduler: Submitting 1 missing tasks from ShuffleMapStage 35 (MapPartitionsRDD[146] at countByValue at StringIndexer.scala:92)
20/11/28 21:14:42 INFO TaskSchedulerImpl: Adding task set 35.0 with 1 tasks
20/11/28 21:14:42 INFO BlockManagerInfo: Removed broadcast_34_piece0 on 127.0.0.1:49604 in memory (size: 1970.0 B, free: 903.4 MB)
20/11/28 21:14:43 WARN TaskSetManager: Stage 35 contains a task of very large size (40834 KB). The maximum recommended task size is 100 KB.
20/11/28 21:14:43 INFO TaskSetManager: Starting task 0.0 in stage 35.0 (TID 35, localhost, executor driver, partition 0, PROCESS_LOCAL, 41814928 bytes)
20/11/28 21:14:43 INFO Executor: Running task 0.0 in stage 35.0 (TID 35)
20/11/28 21:14:44 INFO BlockManager: Found block rdd_16_0 locally
20/11/28 21:14:45 INFO Executor: Finished task 0.0 in stage 35.0 (TID 35). 2505 bytes result sent to driver
20/11/28 21:14:45 INFO TaskSetManager: Finished task 0.0 in stage 35.0 (TID 35) in 2954 ms on localhost (executor driver) (1/1)
20/11/28 21:14:45 INFO TaskSchedulerImpl: Removed TaskSet 35.0, whose tasks have all completed, from pool 
20/11/28 21:14:45 INFO DAGScheduler: ShuffleMapStage 35 (countByValue at StringIndexer.scala:92) finished in 2.954 s
20/11/28 21:14:45 INFO DAGScheduler: looking for newly runnable stages
20/11/28 21:14:45 INFO DAGScheduler: running: Set()
20/11/28 21:14:45 INFO DAGScheduler: waiting: Set(ResultStage 36)
20/11/28 21:14:45 INFO DAGScheduler: failed: Set()
20/11/28 21:14:45 INFO DAGScheduler: Submitting ResultStage 36 (ShuffledRDD[147] at countByValue at StringIndexer.scala:92), which has no missing parents
20/11/28 21:14:45 INFO MemoryStore: Block broadcast_36 stored as values in memory (estimated size 3.2 KB, free 903.3 MB)
20/11/28 21:14:45 INFO MemoryStore: Block broadcast_36_piece0 stored as bytes in memory (estimated size 1970.0 B, free 903.3 MB)
20/11/28 21:14:45 INFO BlockManagerInfo: Added broadcast_36_piece0 in memory on 127.0.0.1:49604 (size: 1970.0 B, free: 903.4 MB)
20/11/28 21:14:45 INFO SparkContext: Created broadcast 36 from broadcast at DAGScheduler.scala:996
20/11/28 21:14:45 INFO DAGScheduler: Submitting 1 missing tasks from ResultStage 36 (ShuffledRDD[147] at countByValue at StringIndexer.scala:92)
20/11/28 21:14:45 INFO TaskSchedulerImpl: Adding task set 36.0 with 1 tasks
20/11/28 21:14:45 INFO TaskSetManager: Starting task 0.0 in stage 36.0 (TID 36, localhost, executor driver, partition 0, ANY, 5817 bytes)
20/11/28 21:14:45 INFO Executor: Running task 0.0 in stage 36.0 (TID 36)
20/11/28 21:14:45 INFO ShuffleBlockFetcherIterator: Getting 1 non-empty blocks out of 1 blocks
20/11/28 21:14:45 INFO ShuffleBlockFetcherIterator: Started 0 remote fetches in 0 ms
20/11/28 21:14:45 INFO Executor: Finished task 0.0 in stage 36.0 (TID 36). 1950 bytes result sent to driver
20/11/28 21:14:45 INFO TaskSetManager: Finished task 0.0 in stage 36.0 (TID 36) in 7 ms on localhost (executor driver) (1/1)
20/11/28 21:14:45 INFO TaskSchedulerImpl: Removed TaskSet 36.0, whose tasks have all completed, from pool 
20/11/28 21:14:45 INFO DAGScheduler: ResultStage 36 (countByValue at StringIndexer.scala:92) finished in 0.007 s
20/11/28 21:14:45 INFO DAGScheduler: Job 19 finished: countByValue at StringIndexer.scala:92, took 2.973658 s
20/11/28 21:14:45 INFO CodeGenerator: Code generated in 15.137103 ms
20/11/28 21:14:45 INFO SparkContext: Starting job: countByValue at StringIndexer.scala:92
20/11/28 21:14:45 INFO DAGScheduler: Registering RDD 154 (countByValue at StringIndexer.scala:92)
20/11/28 21:14:45 INFO DAGScheduler: Got job 20 (countByValue at StringIndexer.scala:92) with 1 output partitions
20/11/28 21:14:45 INFO DAGScheduler: Final stage: ResultStage 38 (countByValue at StringIndexer.scala:92)
20/11/28 21:14:45 INFO DAGScheduler: Parents of final stage: List(ShuffleMapStage 37)
20/11/28 21:14:45 INFO DAGScheduler: Missing parents: List(ShuffleMapStage 37)
20/11/28 21:14:45 INFO DAGScheduler: Submitting ShuffleMapStage 37 (MapPartitionsRDD[154] at countByValue at StringIndexer.scala:92), which has no missing parents
20/11/28 21:14:45 INFO MemoryStore: Block broadcast_37 stored as values in memory (estimated size 32.3 KB, free 903.3 MB)
20/11/28 21:14:45 INFO MemoryStore: Block broadcast_37_piece0 stored as bytes in memory (estimated size 12.3 KB, free 903.2 MB)
20/11/28 21:14:45 INFO BlockManagerInfo: Added broadcast_37_piece0 in memory on 127.0.0.1:49604 (size: 12.3 KB, free: 903.4 MB)
20/11/28 21:14:45 INFO SparkContext: Created broadcast 37 from broadcast at DAGScheduler.scala:996
20/11/28 21:14:45 INFO DAGScheduler: Submitting 1 missing tasks from ShuffleMapStage 37 (MapPartitionsRDD[154] at countByValue at StringIndexer.scala:92)
20/11/28 21:14:45 INFO TaskSchedulerImpl: Adding task set 37.0 with 1 tasks
20/11/28 21:14:45 INFO ContextCleaner: Cleaned accumulator 1626
20/11/28 21:14:45 INFO BlockManagerInfo: Removed broadcast_36_piece0 on 127.0.0.1:49604 in memory (size: 1970.0 B, free: 903.4 MB)
20/11/28 21:14:45 INFO BlockManagerInfo: Removed broadcast_35_piece0 on 127.0.0.1:49604 in memory (size: 12.3 KB, free: 903.4 MB)
20/11/28 21:14:45 INFO ContextCleaner: Cleaned shuffle 16
20/11/28 21:14:45 INFO ContextCleaner: Cleaned accumulator 1833
20/11/28 21:14:45 INFO ContextCleaner: Cleaned accumulator 1832
20/11/28 21:14:45 INFO ContextCleaner: Cleaned accumulator 1831
20/11/28 21:14:45 INFO ContextCleaner: Cleaned accumulator 1830
20/11/28 21:14:45 INFO ContextCleaner: Cleaned accumulator 1829
20/11/28 21:14:45 INFO ContextCleaner: Cleaned accumulator 1828
20/11/28 21:14:45 INFO BlockManagerInfo: Removed broadcast_33_piece0 on 127.0.0.1:49604 in memory (size: 12.3 KB, free: 903.4 MB)
20/11/28 21:14:45 INFO ContextCleaner: Cleaned shuffle 15
20/11/28 21:14:45 INFO ContextCleaner: Cleaned accumulator 1731
20/11/28 21:14:45 INFO ContextCleaner: Cleaned accumulator 1730
20/11/28 21:14:45 INFO ContextCleaner: Cleaned accumulator 1729
20/11/28 21:14:45 INFO ContextCleaner: Cleaned accumulator 1728
20/11/28 21:14:45 INFO ContextCleaner: Cleaned accumulator 1727
20/11/28 21:14:45 INFO ContextCleaner: Cleaned accumulator 1726
20/11/28 21:14:45 INFO BlockManagerInfo: Removed broadcast_31_piece0 on 127.0.0.1:49604 in memory (size: 12.2 KB, free: 903.4 MB)
20/11/28 21:14:45 INFO ContextCleaner: Cleaned shuffle 14
20/11/28 21:14:45 INFO ContextCleaner: Cleaned accumulator 1629
20/11/28 21:14:45 INFO ContextCleaner: Cleaned accumulator 1628
20/11/28 21:14:45 INFO ContextCleaner: Cleaned accumulator 1627
20/11/28 21:14:45 INFO ContextCleaner: Cleaned accumulator 1625
20/11/28 21:14:45 INFO ContextCleaner: Cleaned accumulator 1624
20/11/28 21:14:45 INFO BlockManagerInfo: Removed broadcast_29_piece0 on 127.0.0.1:49604 in memory (size: 12.3 KB, free: 903.5 MB)
20/11/28 21:14:45 INFO ContextCleaner: Cleaned shuffle 13
20/11/28 21:14:45 INFO ContextCleaner: Cleaned accumulator 1527
20/11/28 21:14:45 INFO ContextCleaner: Cleaned accumulator 1526
20/11/28 21:14:45 INFO ContextCleaner: Cleaned accumulator 1525
20/11/28 21:14:45 INFO ContextCleaner: Cleaned accumulator 1524
20/11/28 21:14:45 INFO ContextCleaner: Cleaned accumulator 1523
20/11/28 21:14:45 INFO ContextCleaner: Cleaned accumulator 1522
20/11/28 21:14:47 WARN TaskSetManager: Stage 37 contains a task of very large size (40834 KB). The maximum recommended task size is 100 KB.
20/11/28 21:14:47 INFO TaskSetManager: Starting task 0.0 in stage 37.0 (TID 37, localhost, executor driver, partition 0, PROCESS_LOCAL, 41814928 bytes)
20/11/28 21:14:47 INFO Executor: Running task 0.0 in stage 37.0 (TID 37)
20/11/28 21:14:48 INFO BlockManager: Found block rdd_16_0 locally
20/11/28 21:14:48 INFO Executor: Finished task 0.0 in stage 37.0 (TID 37). 2505 bytes result sent to driver
20/11/28 21:14:48 INFO TaskSetManager: Finished task 0.0 in stage 37.0 (TID 37) in 3319 ms on localhost (executor driver) (1/1)
20/11/28 21:14:48 INFO TaskSchedulerImpl: Removed TaskSet 37.0, whose tasks have all completed, from pool 
20/11/28 21:14:48 INFO DAGScheduler: ShuffleMapStage 37 (countByValue at StringIndexer.scala:92) finished in 3.320 s
20/11/28 21:14:48 INFO DAGScheduler: looking for newly runnable stages
20/11/28 21:14:48 INFO DAGScheduler: running: Set()
20/11/28 21:14:48 INFO DAGScheduler: waiting: Set(ResultStage 38)
20/11/28 21:14:48 INFO DAGScheduler: failed: Set()
20/11/28 21:14:48 INFO DAGScheduler: Submitting ResultStage 38 (ShuffledRDD[155] at countByValue at StringIndexer.scala:92), which has no missing parents
20/11/28 21:14:48 INFO MemoryStore: Block broadcast_38 stored as values in memory (estimated size 3.2 KB, free 903.4 MB)
20/11/28 21:14:48 INFO MemoryStore: Block broadcast_38_piece0 stored as bytes in memory (estimated size 1970.0 B, free 903.4 MB)
20/11/28 21:14:48 INFO BlockManagerInfo: Added broadcast_38_piece0 in memory on 127.0.0.1:49604 (size: 1970.0 B, free: 903.4 MB)
20/11/28 21:14:48 INFO SparkContext: Created broadcast 38 from broadcast at DAGScheduler.scala:996
20/11/28 21:14:48 INFO DAGScheduler: Submitting 1 missing tasks from ResultStage 38 (ShuffledRDD[155] at countByValue at StringIndexer.scala:92)
20/11/28 21:14:48 INFO TaskSchedulerImpl: Adding task set 38.0 with 1 tasks
20/11/28 21:14:48 INFO TaskSetManager: Starting task 0.0 in stage 38.0 (TID 38, localhost, executor driver, partition 0, ANY, 5817 bytes)
20/11/28 21:14:48 INFO Executor: Running task 0.0 in stage 38.0 (TID 38)
20/11/28 21:14:48 INFO ShuffleBlockFetcherIterator: Getting 1 non-empty blocks out of 1 blocks
20/11/28 21:14:48 INFO ShuffleBlockFetcherIterator: Started 0 remote fetches in 0 ms
20/11/28 21:14:48 INFO Executor: Finished task 0.0 in stage 38.0 (TID 38). 1950 bytes result sent to driver
20/11/28 21:14:48 INFO TaskSetManager: Finished task 0.0 in stage 38.0 (TID 38) in 12 ms on localhost (executor driver) (1/1)
20/11/28 21:14:48 INFO TaskSchedulerImpl: Removed TaskSet 38.0, whose tasks have all completed, from pool 
20/11/28 21:14:48 INFO DAGScheduler: ResultStage 38 (countByValue at StringIndexer.scala:92) finished in 0.012 s
20/11/28 21:14:48 INFO DAGScheduler: Job 20 finished: countByValue at StringIndexer.scala:92, took 3.346316 s
20/11/28 21:14:48 INFO CodeGenerator: Code generated in 134.552995 ms
20/11/28 21:14:48 INFO BlockManagerInfo: Removed broadcast_38_piece0 on 127.0.0.1:49604 in memory (size: 1970.0 B, free: 903.5 MB)
20/11/28 21:14:48 INFO SparkContext: Starting job: countByValue at StringIndexer.scala:92
20/11/28 21:14:48 INFO DAGScheduler: Registering RDD 162 (countByValue at StringIndexer.scala:92)
20/11/28 21:14:48 INFO DAGScheduler: Got job 21 (countByValue at StringIndexer.scala:92) with 1 output partitions
20/11/28 21:14:48 INFO DAGScheduler: Final stage: ResultStage 40 (countByValue at StringIndexer.scala:92)
20/11/28 21:14:48 INFO DAGScheduler: Parents of final stage: List(ShuffleMapStage 39)
20/11/28 21:14:48 INFO DAGScheduler: Missing parents: List(ShuffleMapStage 39)
20/11/28 21:14:48 INFO DAGScheduler: Submitting ShuffleMapStage 39 (MapPartitionsRDD[162] at countByValue at StringIndexer.scala:92), which has no missing parents
20/11/28 21:14:48 INFO MemoryStore: Block broadcast_39 stored as values in memory (estimated size 32.3 KB, free 903.4 MB)
20/11/28 21:14:48 INFO MemoryStore: Block broadcast_39_piece0 stored as bytes in memory (estimated size 12.3 KB, free 903.4 MB)
20/11/28 21:14:48 INFO BlockManagerInfo: Added broadcast_39_piece0 in memory on 127.0.0.1:49604 (size: 12.3 KB, free: 903.4 MB)
20/11/28 21:14:48 INFO SparkContext: Created broadcast 39 from broadcast at DAGScheduler.scala:996
20/11/28 21:14:48 INFO DAGScheduler: Submitting 1 missing tasks from ShuffleMapStage 39 (MapPartitionsRDD[162] at countByValue at StringIndexer.scala:92)
20/11/28 21:14:48 INFO TaskSchedulerImpl: Adding task set 39.0 with 1 tasks
20/11/28 21:14:50 WARN TaskSetManager: Stage 39 contains a task of very large size (40834 KB). The maximum recommended task size is 100 KB.
20/11/28 21:14:50 INFO TaskSetManager: Starting task 0.0 in stage 39.0 (TID 39, localhost, executor driver, partition 0, PROCESS_LOCAL, 41814928 bytes)
20/11/28 21:14:50 INFO Executor: Running task 0.0 in stage 39.0 (TID 39)
20/11/28 21:14:51 INFO BlockManager: Found block rdd_16_0 locally
20/11/28 21:14:51 INFO Executor: Finished task 0.0 in stage 39.0 (TID 39). 2505 bytes result sent to driver
20/11/28 21:14:51 INFO TaskSetManager: Finished task 0.0 in stage 39.0 (TID 39) in 2916 ms on localhost (executor driver) (1/1)
20/11/28 21:14:51 INFO TaskSchedulerImpl: Removed TaskSet 39.0, whose tasks have all completed, from pool 
20/11/28 21:14:51 INFO DAGScheduler: ShuffleMapStage 39 (countByValue at StringIndexer.scala:92) finished in 2.916 s
20/11/28 21:14:51 INFO DAGScheduler: looking for newly runnable stages
20/11/28 21:14:51 INFO DAGScheduler: running: Set()
20/11/28 21:14:51 INFO DAGScheduler: waiting: Set(ResultStage 40)
20/11/28 21:14:51 INFO DAGScheduler: failed: Set()
20/11/28 21:14:51 INFO DAGScheduler: Submitting ResultStage 40 (ShuffledRDD[163] at countByValue at StringIndexer.scala:92), which has no missing parents
20/11/28 21:14:51 INFO MemoryStore: Block broadcast_40 stored as values in memory (estimated size 3.2 KB, free 903.4 MB)
20/11/28 21:14:51 INFO MemoryStore: Block broadcast_40_piece0 stored as bytes in memory (estimated size 1970.0 B, free 903.4 MB)
20/11/28 21:14:51 INFO BlockManagerInfo: Added broadcast_40_piece0 in memory on 127.0.0.1:49604 (size: 1970.0 B, free: 903.4 MB)
20/11/28 21:14:51 INFO SparkContext: Created broadcast 40 from broadcast at DAGScheduler.scala:996
20/11/28 21:14:51 INFO DAGScheduler: Submitting 1 missing tasks from ResultStage 40 (ShuffledRDD[163] at countByValue at StringIndexer.scala:92)
20/11/28 21:14:51 INFO TaskSchedulerImpl: Adding task set 40.0 with 1 tasks
20/11/28 21:14:51 INFO TaskSetManager: Starting task 0.0 in stage 40.0 (TID 40, localhost, executor driver, partition 0, ANY, 5817 bytes)
20/11/28 21:14:51 INFO Executor: Running task 0.0 in stage 40.0 (TID 40)
20/11/28 21:14:51 INFO ShuffleBlockFetcherIterator: Getting 1 non-empty blocks out of 1 blocks
20/11/28 21:14:51 INFO ShuffleBlockFetcherIterator: Started 0 remote fetches in 0 ms
20/11/28 21:14:51 INFO Executor: Finished task 0.0 in stage 40.0 (TID 40). 1950 bytes result sent to driver
20/11/28 21:14:51 INFO TaskSetManager: Finished task 0.0 in stage 40.0 (TID 40) in 7 ms on localhost (executor driver) (1/1)
20/11/28 21:14:51 INFO TaskSchedulerImpl: Removed TaskSet 40.0, whose tasks have all completed, from pool 
20/11/28 21:14:51 INFO DAGScheduler: ResultStage 40 (countByValue at StringIndexer.scala:92) finished in 0.008 s
20/11/28 21:14:51 INFO DAGScheduler: Job 21 finished: countByValue at StringIndexer.scala:92, took 2.937270 s
20/11/28 21:14:51 INFO CodeGenerator: Code generated in 16.356194 ms
20/11/28 21:14:51 INFO SparkContext: Starting job: countByValue at StringIndexer.scala:92
20/11/28 21:14:51 INFO DAGScheduler: Registering RDD 170 (countByValue at StringIndexer.scala:92)
20/11/28 21:14:51 INFO DAGScheduler: Got job 22 (countByValue at StringIndexer.scala:92) with 1 output partitions
20/11/28 21:14:51 INFO DAGScheduler: Final stage: ResultStage 42 (countByValue at StringIndexer.scala:92)
20/11/28 21:14:51 INFO DAGScheduler: Parents of final stage: List(ShuffleMapStage 41)
20/11/28 21:14:51 INFO DAGScheduler: Missing parents: List(ShuffleMapStage 41)
20/11/28 21:14:51 INFO DAGScheduler: Submitting ShuffleMapStage 41 (MapPartitionsRDD[170] at countByValue at StringIndexer.scala:92), which has no missing parents
20/11/28 21:14:51 INFO MemoryStore: Block broadcast_41 stored as values in memory (estimated size 32.3 KB, free 903.3 MB)
20/11/28 21:14:51 INFO MemoryStore: Block broadcast_41_piece0 stored as bytes in memory (estimated size 12.3 KB, free 903.3 MB)
20/11/28 21:14:51 INFO BlockManagerInfo: Added broadcast_41_piece0 in memory on 127.0.0.1:49604 (size: 12.3 KB, free: 903.4 MB)
20/11/28 21:14:51 INFO SparkContext: Created broadcast 41 from broadcast at DAGScheduler.scala:996
20/11/28 21:14:51 INFO DAGScheduler: Submitting 1 missing tasks from ShuffleMapStage 41 (MapPartitionsRDD[170] at countByValue at StringIndexer.scala:92)
20/11/28 21:14:51 INFO TaskSchedulerImpl: Adding task set 41.0 with 1 tasks
20/11/28 21:14:52 INFO BlockManagerInfo: Removed broadcast_40_piece0 on 127.0.0.1:49604 in memory (size: 1970.0 B, free: 903.4 MB)
20/11/28 21:14:52 INFO BlockManagerInfo: Removed broadcast_39_piece0 on 127.0.0.1:49604 in memory (size: 12.3 KB, free: 903.4 MB)
20/11/28 21:14:52 INFO ContextCleaner: Cleaned shuffle 18
20/11/28 21:14:52 INFO ContextCleaner: Cleaned accumulator 2037
20/11/28 21:14:52 INFO ContextCleaner: Cleaned accumulator 2036
20/11/28 21:14:52 INFO ContextCleaner: Cleaned accumulator 2035
20/11/28 21:14:52 INFO ContextCleaner: Cleaned accumulator 2034
20/11/28 21:14:52 INFO ContextCleaner: Cleaned accumulator 2033
20/11/28 21:14:52 INFO ContextCleaner: Cleaned accumulator 2032
20/11/28 21:14:52 INFO BlockManagerInfo: Removed broadcast_37_piece0 on 127.0.0.1:49604 in memory (size: 12.3 KB, free: 903.5 MB)
20/11/28 21:14:52 INFO ContextCleaner: Cleaned shuffle 17
20/11/28 21:14:52 INFO ContextCleaner: Cleaned accumulator 1935
20/11/28 21:14:52 INFO ContextCleaner: Cleaned accumulator 1934
20/11/28 21:14:52 INFO ContextCleaner: Cleaned accumulator 1933
20/11/28 21:14:52 INFO ContextCleaner: Cleaned accumulator 1932
20/11/28 21:14:52 INFO ContextCleaner: Cleaned accumulator 1931
20/11/28 21:14:52 INFO ContextCleaner: Cleaned accumulator 1930
20/11/28 21:14:53 WARN TaskSetManager: Stage 41 contains a task of very large size (40834 KB). The maximum recommended task size is 100 KB.
20/11/28 21:14:53 INFO TaskSetManager: Starting task 0.0 in stage 41.0 (TID 41, localhost, executor driver, partition 0, PROCESS_LOCAL, 41814928 bytes)
20/11/28 21:14:53 INFO Executor: Running task 0.0 in stage 41.0 (TID 41)
20/11/28 21:14:54 INFO BlockManager: Found block rdd_16_0 locally
20/11/28 21:14:55 INFO Executor: Finished task 0.0 in stage 41.0 (TID 41). 2505 bytes result sent to driver
20/11/28 21:14:55 INFO TaskSetManager: Finished task 0.0 in stage 41.0 (TID 41) in 3238 ms on localhost (executor driver) (1/1)
20/11/28 21:14:55 INFO TaskSchedulerImpl: Removed TaskSet 41.0, whose tasks have all completed, from pool 
20/11/28 21:14:55 INFO DAGScheduler: ShuffleMapStage 41 (countByValue at StringIndexer.scala:92) finished in 3.239 s
20/11/28 21:14:55 INFO DAGScheduler: looking for newly runnable stages
20/11/28 21:14:55 INFO DAGScheduler: running: Set()
20/11/28 21:14:55 INFO DAGScheduler: waiting: Set(ResultStage 42)
20/11/28 21:14:55 INFO DAGScheduler: failed: Set()
20/11/28 21:14:55 INFO DAGScheduler: Submitting ResultStage 42 (ShuffledRDD[171] at countByValue at StringIndexer.scala:92), which has no missing parents
20/11/28 21:14:55 INFO MemoryStore: Block broadcast_42 stored as values in memory (estimated size 3.2 KB, free 903.4 MB)
20/11/28 21:14:55 INFO MemoryStore: Block broadcast_42_piece0 stored as bytes in memory (estimated size 1970.0 B, free 903.4 MB)
20/11/28 21:14:55 INFO BlockManagerInfo: Added broadcast_42_piece0 in memory on 127.0.0.1:49604 (size: 1970.0 B, free: 903.4 MB)
20/11/28 21:14:55 INFO SparkContext: Created broadcast 42 from broadcast at DAGScheduler.scala:996
20/11/28 21:14:55 INFO DAGScheduler: Submitting 1 missing tasks from ResultStage 42 (ShuffledRDD[171] at countByValue at StringIndexer.scala:92)
20/11/28 21:14:55 INFO TaskSchedulerImpl: Adding task set 42.0 with 1 tasks
20/11/28 21:14:55 INFO TaskSetManager: Starting task 0.0 in stage 42.0 (TID 42, localhost, executor driver, partition 0, ANY, 5817 bytes)
20/11/28 21:14:55 INFO Executor: Running task 0.0 in stage 42.0 (TID 42)
20/11/28 21:14:55 INFO ShuffleBlockFetcherIterator: Getting 1 non-empty blocks out of 1 blocks
20/11/28 21:14:55 INFO ShuffleBlockFetcherIterator: Started 0 remote fetches in 0 ms
20/11/28 21:14:55 INFO Executor: Finished task 0.0 in stage 42.0 (TID 42). 1950 bytes result sent to driver
20/11/28 21:14:55 INFO TaskSetManager: Finished task 0.0 in stage 42.0 (TID 42) in 7 ms on localhost (executor driver) (1/1)
20/11/28 21:14:55 INFO TaskSchedulerImpl: Removed TaskSet 42.0, whose tasks have all completed, from pool 
20/11/28 21:14:55 INFO DAGScheduler: ResultStage 42 (countByValue at StringIndexer.scala:92) finished in 0.007 s
20/11/28 21:14:55 INFO DAGScheduler: Job 22 finished: countByValue at StringIndexer.scala:92, took 3.259359 s
20/11/28 21:14:55 INFO CodeGenerator: Code generated in 17.904602 ms
20/11/28 21:14:55 INFO SparkContext: Starting job: countByValue at StringIndexer.scala:92
20/11/28 21:14:55 INFO DAGScheduler: Registering RDD 178 (countByValue at StringIndexer.scala:92)
20/11/28 21:14:55 INFO DAGScheduler: Got job 23 (countByValue at StringIndexer.scala:92) with 1 output partitions
20/11/28 21:14:55 INFO DAGScheduler: Final stage: ResultStage 44 (countByValue at StringIndexer.scala:92)
20/11/28 21:14:55 INFO DAGScheduler: Parents of final stage: List(ShuffleMapStage 43)
20/11/28 21:14:55 INFO DAGScheduler: Missing parents: List(ShuffleMapStage 43)
20/11/28 21:14:55 INFO DAGScheduler: Submitting ShuffleMapStage 43 (MapPartitionsRDD[178] at countByValue at StringIndexer.scala:92), which has no missing parents
20/11/28 21:14:55 INFO MemoryStore: Block broadcast_43 stored as values in memory (estimated size 32.3 KB, free 903.4 MB)
20/11/28 21:14:55 INFO MemoryStore: Block broadcast_43_piece0 stored as bytes in memory (estimated size 12.3 KB, free 903.4 MB)
20/11/28 21:14:55 INFO BlockManagerInfo: Added broadcast_43_piece0 in memory on 127.0.0.1:49604 (size: 12.3 KB, free: 903.4 MB)
20/11/28 21:14:55 INFO SparkContext: Created broadcast 43 from broadcast at DAGScheduler.scala:996
20/11/28 21:14:55 INFO DAGScheduler: Submitting 1 missing tasks from ShuffleMapStage 43 (MapPartitionsRDD[178] at countByValue at StringIndexer.scala:92)
20/11/28 21:14:55 INFO TaskSchedulerImpl: Adding task set 43.0 with 1 tasks
20/11/28 21:14:55 INFO BlockManagerInfo: Removed broadcast_42_piece0 on 127.0.0.1:49604 in memory (size: 1970.0 B, free: 903.4 MB)
20/11/28 21:14:57 WARN TaskSetManager: Stage 43 contains a task of very large size (40834 KB). The maximum recommended task size is 100 KB.
20/11/28 21:14:57 INFO TaskSetManager: Starting task 0.0 in stage 43.0 (TID 43, localhost, executor driver, partition 0, PROCESS_LOCAL, 41814928 bytes)
20/11/28 21:14:57 INFO Executor: Running task 0.0 in stage 43.0 (TID 43)
20/11/28 21:14:57 INFO BlockManager: Found block rdd_16_0 locally
20/11/28 21:14:58 INFO BlockManagerInfo: Removed broadcast_41_piece0 on 127.0.0.1:49604 in memory (size: 12.3 KB, free: 903.5 MB)
20/11/28 21:14:58 INFO ContextCleaner: Cleaned shuffle 19
20/11/28 21:14:58 INFO ContextCleaner: Cleaned accumulator 2139
20/11/28 21:14:58 INFO ContextCleaner: Cleaned accumulator 2138
20/11/28 21:14:58 INFO ContextCleaner: Cleaned accumulator 2137
20/11/28 21:14:58 INFO ContextCleaner: Cleaned accumulator 2136
20/11/28 21:14:58 INFO ContextCleaner: Cleaned accumulator 2135
20/11/28 21:14:58 INFO ContextCleaner: Cleaned accumulator 2134
20/11/28 21:14:59 INFO Executor: Finished task 0.0 in stage 43.0 (TID 43). 2505 bytes result sent to driver
20/11/28 21:14:59 INFO TaskSetManager: Finished task 0.0 in stage 43.0 (TID 43) in 3824 ms on localhost (executor driver) (1/1)
20/11/28 21:14:59 INFO TaskSchedulerImpl: Removed TaskSet 43.0, whose tasks have all completed, from pool 
20/11/28 21:14:59 INFO DAGScheduler: ShuffleMapStage 43 (countByValue at StringIndexer.scala:92) finished in 3.824 s
20/11/28 21:14:59 INFO DAGScheduler: looking for newly runnable stages
20/11/28 21:14:59 INFO DAGScheduler: running: Set()
20/11/28 21:14:59 INFO DAGScheduler: waiting: Set(ResultStage 44)
20/11/28 21:14:59 INFO DAGScheduler: failed: Set()
20/11/28 21:14:59 INFO DAGScheduler: Submitting ResultStage 44 (ShuffledRDD[179] at countByValue at StringIndexer.scala:92), which has no missing parents
20/11/28 21:14:59 INFO MemoryStore: Block broadcast_44 stored as values in memory (estimated size 3.2 KB, free 903.4 MB)
20/11/28 21:14:59 INFO MemoryStore: Block broadcast_44_piece0 stored as bytes in memory (estimated size 1970.0 B, free 903.4 MB)
20/11/28 21:14:59 INFO BlockManagerInfo: Added broadcast_44_piece0 in memory on 127.0.0.1:49604 (size: 1970.0 B, free: 903.4 MB)
20/11/28 21:14:59 INFO SparkContext: Created broadcast 44 from broadcast at DAGScheduler.scala:996
20/11/28 21:14:59 INFO DAGScheduler: Submitting 1 missing tasks from ResultStage 44 (ShuffledRDD[179] at countByValue at StringIndexer.scala:92)
20/11/28 21:14:59 INFO TaskSchedulerImpl: Adding task set 44.0 with 1 tasks
20/11/28 21:14:59 INFO TaskSetManager: Starting task 0.0 in stage 44.0 (TID 44, localhost, executor driver, partition 0, ANY, 5817 bytes)
20/11/28 21:14:59 INFO Executor: Running task 0.0 in stage 44.0 (TID 44)
20/11/28 21:14:59 INFO ShuffleBlockFetcherIterator: Getting 1 non-empty blocks out of 1 blocks
20/11/28 21:14:59 INFO ShuffleBlockFetcherIterator: Started 0 remote fetches in 1 ms
20/11/28 21:14:59 INFO Executor: Finished task 0.0 in stage 44.0 (TID 44). 1891 bytes result sent to driver
20/11/28 21:14:59 INFO TaskSetManager: Finished task 0.0 in stage 44.0 (TID 44) in 10 ms on localhost (executor driver) (1/1)
20/11/28 21:14:59 INFO TaskSchedulerImpl: Removed TaskSet 44.0, whose tasks have all completed, from pool 
20/11/28 21:14:59 INFO DAGScheduler: ResultStage 44 (countByValue at StringIndexer.scala:92) finished in 0.011 s
20/11/28 21:14:59 INFO DAGScheduler: Job 23 finished: countByValue at StringIndexer.scala:92, took 3.850200 s
20/11/28 21:14:59 INFO CodeGenerator: Code generated in 16.464103 ms
20/11/28 21:14:59 INFO SparkContext: Starting job: countByValue at StringIndexer.scala:92
20/11/28 21:14:59 INFO DAGScheduler: Registering RDD 186 (countByValue at StringIndexer.scala:92)
20/11/28 21:14:59 INFO DAGScheduler: Got job 24 (countByValue at StringIndexer.scala:92) with 1 output partitions
20/11/28 21:14:59 INFO DAGScheduler: Final stage: ResultStage 46 (countByValue at StringIndexer.scala:92)
20/11/28 21:14:59 INFO DAGScheduler: Parents of final stage: List(ShuffleMapStage 45)
20/11/28 21:14:59 INFO DAGScheduler: Missing parents: List(ShuffleMapStage 45)
20/11/28 21:14:59 INFO DAGScheduler: Submitting ShuffleMapStage 45 (MapPartitionsRDD[186] at countByValue at StringIndexer.scala:92), which has no missing parents
20/11/28 21:14:59 INFO MemoryStore: Block broadcast_45 stored as values in memory (estimated size 32.3 KB, free 903.4 MB)
20/11/28 21:14:59 INFO MemoryStore: Block broadcast_45_piece0 stored as bytes in memory (estimated size 12.3 KB, free 903.4 MB)
20/11/28 21:14:59 INFO BlockManagerInfo: Added broadcast_45_piece0 in memory on 127.0.0.1:49604 (size: 12.3 KB, free: 903.4 MB)
20/11/28 21:14:59 INFO SparkContext: Created broadcast 45 from broadcast at DAGScheduler.scala:996
20/11/28 21:14:59 INFO DAGScheduler: Submitting 1 missing tasks from ShuffleMapStage 45 (MapPartitionsRDD[186] at countByValue at StringIndexer.scala:92)
20/11/28 21:14:59 INFO TaskSchedulerImpl: Adding task set 45.0 with 1 tasks
20/11/28 21:14:59 INFO BlockManagerInfo: Removed broadcast_44_piece0 on 127.0.0.1:49604 in memory (size: 1970.0 B, free: 903.4 MB)
20/11/28 21:15:01 WARN TaskSetManager: Stage 45 contains a task of very large size (40834 KB). The maximum recommended task size is 100 KB.
20/11/28 21:15:01 INFO TaskSetManager: Starting task 0.0 in stage 45.0 (TID 45, localhost, executor driver, partition 0, PROCESS_LOCAL, 41814928 bytes)
20/11/28 21:15:01 INFO Executor: Running task 0.0 in stage 45.0 (TID 45)
20/11/28 21:15:01 INFO BlockManager: Found block rdd_16_0 locally
20/11/28 21:15:02 INFO Executor: Finished task 0.0 in stage 45.0 (TID 45). 2505 bytes result sent to driver
20/11/28 21:15:02 INFO TaskSetManager: Finished task 0.0 in stage 45.0 (TID 45) in 2914 ms on localhost (executor driver) (1/1)
20/11/28 21:15:02 INFO TaskSchedulerImpl: Removed TaskSet 45.0, whose tasks have all completed, from pool 
20/11/28 21:15:02 INFO DAGScheduler: ShuffleMapStage 45 (countByValue at StringIndexer.scala:92) finished in 2.915 s
20/11/28 21:15:02 INFO DAGScheduler: looking for newly runnable stages
20/11/28 21:15:02 INFO DAGScheduler: running: Set()
20/11/28 21:15:02 INFO DAGScheduler: waiting: Set(ResultStage 46)
20/11/28 21:15:02 INFO DAGScheduler: failed: Set()
20/11/28 21:15:02 INFO DAGScheduler: Submitting ResultStage 46 (ShuffledRDD[187] at countByValue at StringIndexer.scala:92), which has no missing parents
20/11/28 21:15:02 INFO MemoryStore: Block broadcast_46 stored as values in memory (estimated size 3.2 KB, free 903.4 MB)
20/11/28 21:15:02 INFO MemoryStore: Block broadcast_46_piece0 stored as bytes in memory (estimated size 1970.0 B, free 903.4 MB)
20/11/28 21:15:02 INFO BlockManagerInfo: Added broadcast_46_piece0 in memory on 127.0.0.1:49604 (size: 1970.0 B, free: 903.4 MB)
20/11/28 21:15:02 INFO SparkContext: Created broadcast 46 from broadcast at DAGScheduler.scala:996
20/11/28 21:15:02 INFO DAGScheduler: Submitting 1 missing tasks from ResultStage 46 (ShuffledRDD[187] at countByValue at StringIndexer.scala:92)
20/11/28 21:15:02 INFO TaskSchedulerImpl: Adding task set 46.0 with 1 tasks
20/11/28 21:15:02 INFO TaskSetManager: Starting task 0.0 in stage 46.0 (TID 46, localhost, executor driver, partition 0, ANY, 5817 bytes)
20/11/28 21:15:02 INFO Executor: Running task 0.0 in stage 46.0 (TID 46)
20/11/28 21:15:02 INFO ShuffleBlockFetcherIterator: Getting 1 non-empty blocks out of 1 blocks
20/11/28 21:15:02 INFO ShuffleBlockFetcherIterator: Started 0 remote fetches in 1 ms
20/11/28 21:15:02 INFO Executor: Finished task 0.0 in stage 46.0 (TID 46). 1892 bytes result sent to driver
20/11/28 21:15:02 INFO TaskSetManager: Finished task 0.0 in stage 46.0 (TID 46) in 7 ms on localhost (executor driver) (1/1)
20/11/28 21:15:02 INFO TaskSchedulerImpl: Removed TaskSet 46.0, whose tasks have all completed, from pool 
20/11/28 21:15:02 INFO DAGScheduler: ResultStage 46 (countByValue at StringIndexer.scala:92) finished in 0.007 s
20/11/28 21:15:02 INFO DAGScheduler: Job 24 finished: countByValue at StringIndexer.scala:92, took 2.934954 s
20/11/28 21:15:02 INFO BlockManagerInfo: Removed broadcast_46_piece0 on 127.0.0.1:49604 in memory (size: 1970.0 B, free: 903.4 MB)
20/11/28 21:15:03 INFO CodeGenerator: Code generated in 12.590261 ms
20/11/28 21:15:03 INFO SparkContext: Starting job: countByValue at StringIndexer.scala:92
20/11/28 21:15:03 INFO DAGScheduler: Registering RDD 194 (countByValue at StringIndexer.scala:92)
20/11/28 21:15:03 INFO DAGScheduler: Got job 25 (countByValue at StringIndexer.scala:92) with 1 output partitions
20/11/28 21:15:03 INFO DAGScheduler: Final stage: ResultStage 48 (countByValue at StringIndexer.scala:92)
20/11/28 21:15:03 INFO DAGScheduler: Parents of final stage: List(ShuffleMapStage 47)
20/11/28 21:15:03 INFO DAGScheduler: Missing parents: List(ShuffleMapStage 47)
20/11/28 21:15:03 INFO DAGScheduler: Submitting ShuffleMapStage 47 (MapPartitionsRDD[194] at countByValue at StringIndexer.scala:92), which has no missing parents
20/11/28 21:15:03 INFO MemoryStore: Block broadcast_47 stored as values in memory (estimated size 32.3 KB, free 903.3 MB)
20/11/28 21:15:03 INFO MemoryStore: Block broadcast_47_piece0 stored as bytes in memory (estimated size 12.3 KB, free 903.3 MB)
20/11/28 21:15:03 INFO BlockManagerInfo: Added broadcast_47_piece0 in memory on 127.0.0.1:49604 (size: 12.3 KB, free: 903.4 MB)
20/11/28 21:15:03 INFO SparkContext: Created broadcast 47 from broadcast at DAGScheduler.scala:996
20/11/28 21:15:03 INFO DAGScheduler: Submitting 1 missing tasks from ShuffleMapStage 47 (MapPartitionsRDD[194] at countByValue at StringIndexer.scala:92)
20/11/28 21:15:03 INFO TaskSchedulerImpl: Adding task set 47.0 with 1 tasks
20/11/28 21:15:05 WARN TaskSetManager: Stage 47 contains a task of very large size (40834 KB). The maximum recommended task size is 100 KB.
20/11/28 21:15:05 INFO TaskSetManager: Starting task 0.0 in stage 47.0 (TID 47, localhost, executor driver, partition 0, PROCESS_LOCAL, 41814928 bytes)
20/11/28 21:15:05 INFO Executor: Running task 0.0 in stage 47.0 (TID 47)
20/11/28 21:15:06 INFO BlockManager: Found block rdd_16_0 locally
20/11/28 21:15:06 INFO Executor: Finished task 0.0 in stage 47.0 (TID 47). 2505 bytes result sent to driver
20/11/28 21:15:06 INFO TaskSetManager: Finished task 0.0 in stage 47.0 (TID 47) in 2824 ms on localhost (executor driver) (1/1)
20/11/28 21:15:06 INFO TaskSchedulerImpl: Removed TaskSet 47.0, whose tasks have all completed, from pool 
20/11/28 21:15:06 INFO DAGScheduler: ShuffleMapStage 47 (countByValue at StringIndexer.scala:92) finished in 2.825 s
20/11/28 21:15:06 INFO DAGScheduler: looking for newly runnable stages
20/11/28 21:15:06 INFO DAGScheduler: running: Set()
20/11/28 21:15:06 INFO DAGScheduler: waiting: Set(ResultStage 48)
20/11/28 21:15:06 INFO DAGScheduler: failed: Set()
20/11/28 21:15:06 INFO DAGScheduler: Submitting ResultStage 48 (ShuffledRDD[195] at countByValue at StringIndexer.scala:92), which has no missing parents
20/11/28 21:15:06 INFO MemoryStore: Block broadcast_48 stored as values in memory (estimated size 3.2 KB, free 903.3 MB)
20/11/28 21:15:06 INFO MemoryStore: Block broadcast_48_piece0 stored as bytes in memory (estimated size 1970.0 B, free 903.3 MB)
20/11/28 21:15:06 INFO BlockManagerInfo: Added broadcast_48_piece0 in memory on 127.0.0.1:49604 (size: 1970.0 B, free: 903.4 MB)
20/11/28 21:15:06 INFO SparkContext: Created broadcast 48 from broadcast at DAGScheduler.scala:996
20/11/28 21:15:06 INFO DAGScheduler: Submitting 1 missing tasks from ResultStage 48 (ShuffledRDD[195] at countByValue at StringIndexer.scala:92)
20/11/28 21:15:06 INFO TaskSchedulerImpl: Adding task set 48.0 with 1 tasks
20/11/28 21:15:06 INFO TaskSetManager: Starting task 0.0 in stage 48.0 (TID 48, localhost, executor driver, partition 0, ANY, 5817 bytes)
20/11/28 21:15:06 INFO Executor: Running task 0.0 in stage 48.0 (TID 48)
20/11/28 21:15:06 INFO ShuffleBlockFetcherIterator: Getting 1 non-empty blocks out of 1 blocks
20/11/28 21:15:06 INFO ShuffleBlockFetcherIterator: Started 0 remote fetches in 0 ms
20/11/28 21:15:06 INFO Executor: Finished task 0.0 in stage 48.0 (TID 48). 2005 bytes result sent to driver
20/11/28 21:15:06 INFO TaskSetManager: Finished task 0.0 in stage 48.0 (TID 48) in 8 ms on localhost (executor driver) (1/1)
20/11/28 21:15:06 INFO TaskSchedulerImpl: Removed TaskSet 48.0, whose tasks have all completed, from pool 
20/11/28 21:15:06 INFO DAGScheduler: ResultStage 48 (countByValue at StringIndexer.scala:92) finished in 0.008 s
20/11/28 21:15:06 INFO DAGScheduler: Job 25 finished: countByValue at StringIndexer.scala:92, took 2.845970 s
20/11/28 21:15:07 INFO BlockManagerInfo: Removed broadcast_48_piece0 on 127.0.0.1:49604 in memory (size: 1970.0 B, free: 903.4 MB)
20/11/28 21:15:08 INFO CodeGenerator: Code generated in 146.387776 ms
20/11/28 21:15:08 INFO Instrumentation: RandomForestClassifier-random_forest__08b6b1f4_0adb_4fa1_877b_7b9174039f10-793477353-1: training: numPartitions=1 storageLevel=StorageLevel(1 replicas)
20/11/28 21:15:08 INFO Instrumentation: RandomForestClassifier-random_forest__08b6b1f4_0adb_4fa1_877b_7b9174039f10-793477353-1: {"subsamplingRate":1.0,"impurity":"gini","featuresCol":"features","maxDepth":5,"minInstancesPerNode":1,"featureSubsetStrategy":"auto","checkpointInterval":10,"minInfoGain":0.0,"cacheNodeIds":false,"labelCol":"label","predictionCol":"prediction","maxMemoryInMB":256,"maxBins":32,"rawPredictionCol":"rawPrediction","probabilityCol":"probability","numTrees":20}
20/11/28 21:15:08 INFO SparkContext: Starting job: take at DecisionTreeMetadata.scala:112
20/11/28 21:15:08 INFO DAGScheduler: Got job 26 (take at DecisionTreeMetadata.scala:112) with 1 output partitions
20/11/28 21:15:08 INFO DAGScheduler: Final stage: ResultStage 49 (take at DecisionTreeMetadata.scala:112)
20/11/28 21:15:08 INFO DAGScheduler: Parents of final stage: List()
20/11/28 21:15:08 INFO DAGScheduler: Missing parents: List()
20/11/28 21:15:08 INFO DAGScheduler: Submitting ResultStage 49 (MapPartitionsRDD[202] at map at DecisionTreeMetadata.scala:112), which has no missing parents
20/11/28 21:15:08 INFO MemoryStore: Block broadcast_49 stored as values in memory (estimated size 332.8 KB, free 903.0 MB)
20/11/28 21:15:08 INFO MemoryStore: Block broadcast_49_piece0 stored as bytes in memory (estimated size 94.2 KB, free 902.9 MB)
20/11/28 21:15:08 INFO BlockManagerInfo: Added broadcast_49_piece0 in memory on 127.0.0.1:49604 (size: 94.2 KB, free: 903.3 MB)
20/11/28 21:15:08 INFO SparkContext: Created broadcast 49 from broadcast at DAGScheduler.scala:996
20/11/28 21:15:08 INFO DAGScheduler: Submitting 1 missing tasks from ResultStage 49 (MapPartitionsRDD[202] at map at DecisionTreeMetadata.scala:112)
20/11/28 21:15:08 INFO TaskSchedulerImpl: Adding task set 49.0 with 1 tasks
20/11/28 21:15:10 WARN TaskSetManager: Stage 49 contains a task of very large size (40834 KB). The maximum recommended task size is 100 KB.
20/11/28 21:15:10 INFO TaskSetManager: Starting task 0.0 in stage 49.0 (TID 49, localhost, executor driver, partition 0, PROCESS_LOCAL, 41814931 bytes)
20/11/28 21:15:10 INFO Executor: Running task 0.0 in stage 49.0 (TID 49)
20/11/28 21:15:11 INFO BlockManager: Found block rdd_16_0 locally
20/11/28 21:15:11 INFO CodeGenerator: Code generated in 7.515953 ms
20/11/28 21:15:12 INFO Executor: Finished task 0.0 in stage 49.0 (TID 49). 2006 bytes result sent to driver
20/11/28 21:15:12 INFO TaskSetManager: Finished task 0.0 in stage 49.0 (TID 49) in 3195 ms on localhost (executor driver) (1/1)
20/11/28 21:15:12 INFO TaskSchedulerImpl: Removed TaskSet 49.0, whose tasks have all completed, from pool 
20/11/28 21:15:12 INFO DAGScheduler: ResultStage 49 (take at DecisionTreeMetadata.scala:112) finished in 3.195 s
20/11/28 21:15:12 INFO DAGScheduler: Job 26 finished: take at DecisionTreeMetadata.scala:112, took 3.212715 s
20/11/28 21:15:12 INFO SparkContext: Starting job: count at DecisionTreeMetadata.scala:116
20/11/28 21:15:12 INFO DAGScheduler: Got job 27 (count at DecisionTreeMetadata.scala:116) with 1 output partitions
20/11/28 21:15:12 INFO DAGScheduler: Final stage: ResultStage 50 (count at DecisionTreeMetadata.scala:116)
20/11/28 21:15:12 INFO DAGScheduler: Parents of final stage: List()
20/11/28 21:15:12 INFO DAGScheduler: Missing parents: List()
20/11/28 21:15:12 INFO DAGScheduler: Submitting ResultStage 50 (MapPartitionsRDD[201] at retag at RandomForest.scala:103), which has no missing parents
20/11/28 21:15:12 INFO MemoryStore: Block broadcast_50 stored as values in memory (estimated size 332.4 KB, free 902.6 MB)
20/11/28 21:15:12 INFO MemoryStore: Block broadcast_50_piece0 stored as bytes in memory (estimated size 94.1 KB, free 902.5 MB)
20/11/28 21:15:12 INFO BlockManagerInfo: Added broadcast_50_piece0 in memory on 127.0.0.1:49604 (size: 94.1 KB, free: 903.2 MB)
20/11/28 21:15:12 INFO SparkContext: Created broadcast 50 from broadcast at DAGScheduler.scala:996
20/11/28 21:15:12 INFO DAGScheduler: Submitting 1 missing tasks from ResultStage 50 (MapPartitionsRDD[201] at retag at RandomForest.scala:103)
20/11/28 21:15:12 INFO TaskSchedulerImpl: Adding task set 50.0 with 1 tasks
20/11/28 21:15:13 WARN TaskSetManager: Stage 50 contains a task of very large size (40834 KB). The maximum recommended task size is 100 KB.
20/11/28 21:15:13 INFO TaskSetManager: Starting task 0.0 in stage 50.0 (TID 50, localhost, executor driver, partition 0, PROCESS_LOCAL, 41814848 bytes)
20/11/28 21:15:13 INFO Executor: Running task 0.0 in stage 50.0 (TID 50)
20/11/28 21:15:15 INFO BlockManagerInfo: Removed broadcast_49_piece0 on 127.0.0.1:49604 in memory (size: 94.2 KB, free: 903.3 MB)
20/11/28 21:15:15 INFO BlockManagerInfo: Removed broadcast_47_piece0 on 127.0.0.1:49604 in memory (size: 12.3 KB, free: 903.3 MB)
20/11/28 21:15:15 INFO ContextCleaner: Cleaned shuffle 22
20/11/28 21:15:15 INFO ContextCleaner: Cleaned accumulator 2445
20/11/28 21:15:15 INFO ContextCleaner: Cleaned accumulator 2444
20/11/28 21:15:15 INFO ContextCleaner: Cleaned accumulator 2443
20/11/28 21:15:15 INFO ContextCleaner: Cleaned accumulator 2442
20/11/28 21:15:15 INFO ContextCleaner: Cleaned accumulator 2441
20/11/28 21:15:15 INFO ContextCleaner: Cleaned accumulator 2440
20/11/28 21:15:15 INFO BlockManagerInfo: Removed broadcast_45_piece0 on 127.0.0.1:49604 in memory (size: 12.3 KB, free: 903.4 MB)
20/11/28 21:15:15 INFO ContextCleaner: Cleaned shuffle 21
20/11/28 21:15:15 INFO ContextCleaner: Cleaned accumulator 2343
20/11/28 21:15:15 INFO ContextCleaner: Cleaned accumulator 2342
20/11/28 21:15:15 INFO ContextCleaner: Cleaned accumulator 2341
20/11/28 21:15:15 INFO ContextCleaner: Cleaned accumulator 2340
20/11/28 21:15:15 INFO ContextCleaner: Cleaned accumulator 2339
20/11/28 21:15:15 INFO ContextCleaner: Cleaned accumulator 2338
20/11/28 21:15:15 INFO BlockManagerInfo: Removed broadcast_43_piece0 on 127.0.0.1:49604 in memory (size: 12.3 KB, free: 903.4 MB)
20/11/28 21:15:15 INFO ContextCleaner: Cleaned shuffle 20
20/11/28 21:15:15 INFO ContextCleaner: Cleaned accumulator 2241
20/11/28 21:15:15 INFO ContextCleaner: Cleaned accumulator 2240
20/11/28 21:15:15 INFO ContextCleaner: Cleaned accumulator 2239
20/11/28 21:15:15 INFO ContextCleaner: Cleaned accumulator 2238
20/11/28 21:15:15 INFO ContextCleaner: Cleaned accumulator 2237
20/11/28 21:15:15 INFO ContextCleaner: Cleaned accumulator 2236
20/11/28 21:15:15 INFO BlockManager: Found block rdd_16_0 locally
20/11/28 21:15:19 INFO Executor: Finished task 0.0 in stage 50.0 (TID 50). 2057 bytes result sent to driver
20/11/28 21:15:19 INFO TaskSetManager: Finished task 0.0 in stage 50.0 (TID 50) in 7012 ms on localhost (executor driver) (1/1)
20/11/28 21:15:19 INFO TaskSchedulerImpl: Removed TaskSet 50.0, whose tasks have all completed, from pool 
20/11/28 21:15:19 INFO DAGScheduler: ResultStage 50 (count at DecisionTreeMetadata.scala:116) finished in 7.013 s
20/11/28 21:15:19 INFO DAGScheduler: Job 27 finished: count at DecisionTreeMetadata.scala:116, took 7.025912 s
20/11/28 21:15:19 INFO Instrumentation: RandomForestClassifier-random_forest__08b6b1f4_0adb_4fa1_877b_7b9174039f10-793477353-1: {"numFeatures":2162}
20/11/28 21:15:19 INFO Instrumentation: RandomForestClassifier-random_forest__08b6b1f4_0adb_4fa1_877b_7b9174039f10-793477353-1: {"numClasses":3}
20/11/28 21:15:19 INFO SparkContext: Starting job: collectAsMap at RandomForest.scala:910
20/11/28 21:15:19 INFO DAGScheduler: Registering RDD 204 (flatMap at RandomForest.scala:903)
20/11/28 21:15:19 INFO DAGScheduler: Got job 28 (collectAsMap at RandomForest.scala:910) with 1 output partitions
20/11/28 21:15:19 INFO DAGScheduler: Final stage: ResultStage 52 (collectAsMap at RandomForest.scala:910)
20/11/28 21:15:19 INFO DAGScheduler: Parents of final stage: List(ShuffleMapStage 51)
20/11/28 21:15:19 INFO DAGScheduler: Missing parents: List(ShuffleMapStage 51)
20/11/28 21:15:19 INFO DAGScheduler: Submitting ShuffleMapStage 51 (MapPartitionsRDD[204] at flatMap at RandomForest.scala:903), which has no missing parents
20/11/28 21:15:19 INFO MemoryStore: Block broadcast_51 stored as values in memory (estimated size 335.6 KB, free 902.7 MB)
20/11/28 21:15:19 INFO MemoryStore: Block broadcast_51_piece0 stored as bytes in memory (estimated size 95.8 KB, free 902.6 MB)
20/11/28 21:15:19 INFO BlockManagerInfo: Added broadcast_51_piece0 in memory on 127.0.0.1:49604 (size: 95.8 KB, free: 903.3 MB)
20/11/28 21:15:19 INFO SparkContext: Created broadcast 51 from broadcast at DAGScheduler.scala:996
20/11/28 21:15:19 INFO DAGScheduler: Submitting 1 missing tasks from ShuffleMapStage 51 (MapPartitionsRDD[204] at flatMap at RandomForest.scala:903)
20/11/28 21:15:19 INFO TaskSchedulerImpl: Adding task set 51.0 with 1 tasks
20/11/28 21:15:20 WARN TaskSetManager: Stage 51 contains a task of very large size (40834 KB). The maximum recommended task size is 100 KB.
20/11/28 21:15:20 INFO TaskSetManager: Starting task 0.0 in stage 51.0 (TID 51, localhost, executor driver, partition 0, PROCESS_LOCAL, 41815037 bytes)
20/11/28 21:15:20 INFO Executor: Running task 0.0 in stage 51.0 (TID 51)
20/11/28 21:15:21 INFO BlockManager: Found block rdd_16_0 locally
20/11/28 21:15:26 INFO Executor: Finished task 0.0 in stage 51.0 (TID 51). 2343 bytes result sent to driver
20/11/28 21:15:26 INFO TaskSetManager: Finished task 0.0 in stage 51.0 (TID 51) in 7302 ms on localhost (executor driver) (1/1)
20/11/28 21:15:26 INFO TaskSchedulerImpl: Removed TaskSet 51.0, whose tasks have all completed, from pool 
20/11/28 21:15:26 INFO DAGScheduler: ShuffleMapStage 51 (flatMap at RandomForest.scala:903) finished in 7.303 s
20/11/28 21:15:26 INFO DAGScheduler: looking for newly runnable stages
20/11/28 21:15:26 INFO DAGScheduler: running: Set()
20/11/28 21:15:26 INFO DAGScheduler: waiting: Set(ResultStage 52)
20/11/28 21:15:26 INFO DAGScheduler: failed: Set()
20/11/28 21:15:26 INFO DAGScheduler: Submitting ResultStage 52 (MapPartitionsRDD[206] at map at RandomForest.scala:905), which has no missing parents
20/11/28 21:15:26 INFO MemoryStore: Block broadcast_52 stored as values in memory (estimated size 397.9 KB, free 902.2 MB)
20/11/28 21:15:26 INFO MemoryStore: Block broadcast_52_piece0 stored as bytes in memory (estimated size 115.5 KB, free 902.1 MB)
20/11/28 21:15:26 INFO BlockManagerInfo: Added broadcast_52_piece0 in memory on 127.0.0.1:49604 (size: 115.5 KB, free: 903.2 MB)
20/11/28 21:15:26 INFO SparkContext: Created broadcast 52 from broadcast at DAGScheduler.scala:996
20/11/28 21:15:26 INFO DAGScheduler: Submitting 1 missing tasks from ResultStage 52 (MapPartitionsRDD[206] at map at RandomForest.scala:905)
20/11/28 21:15:26 INFO TaskSchedulerImpl: Adding task set 52.0 with 1 tasks
20/11/28 21:15:26 INFO TaskSetManager: Starting task 0.0 in stage 52.0 (TID 52, localhost, executor driver, partition 0, ANY, 5817 bytes)
20/11/28 21:15:26 INFO Executor: Running task 0.0 in stage 52.0 (TID 52)
20/11/28 21:15:26 INFO ShuffleBlockFetcherIterator: Getting 1 non-empty blocks out of 1 blocks
20/11/28 21:15:26 INFO ShuffleBlockFetcherIterator: Started 0 remote fetches in 0 ms
20/11/28 21:15:27 INFO Executor: Finished task 0.0 in stage 52.0 (TID 52). 5762 bytes result sent to driver
20/11/28 21:15:27 INFO TaskSetManager: Finished task 0.0 in stage 52.0 (TID 52) in 544 ms on localhost (executor driver) (1/1)
20/11/28 21:15:27 INFO TaskSchedulerImpl: Removed TaskSet 52.0, whose tasks have all completed, from pool 
20/11/28 21:15:27 INFO DAGScheduler: ResultStage 52 (collectAsMap at RandomForest.scala:910) finished in 0.545 s
20/11/28 21:15:27 INFO DAGScheduler: Job 28 finished: collectAsMap at RandomForest.scala:910, took 7.874523 s
20/11/28 21:15:27 INFO MemoryStore: Block broadcast_53 stored as values in memory (estimated size 5.6 KB, free 902.1 MB)
20/11/28 21:15:27 INFO MemoryStore: Block broadcast_53_piece0 stored as bytes in memory (estimated size 3.6 KB, free 902.1 MB)
20/11/28 21:15:27 INFO BlockManagerInfo: Added broadcast_53_piece0 in memory on 127.0.0.1:49604 (size: 3.6 KB, free: 903.2 MB)
20/11/28 21:15:27 INFO SparkContext: Created broadcast 53 from broadcast at RandomForest.scala:513
20/11/28 21:15:27 INFO SparkContext: Starting job: collectAsMap at RandomForest.scala:563
20/11/28 21:15:27 INFO DAGScheduler: Registering RDD 209 (mapPartitions at RandomForest.scala:534)
20/11/28 21:15:27 INFO DAGScheduler: Got job 29 (collectAsMap at RandomForest.scala:563) with 1 output partitions
20/11/28 21:15:27 INFO DAGScheduler: Final stage: ResultStage 54 (collectAsMap at RandomForest.scala:563)
20/11/28 21:15:27 INFO DAGScheduler: Parents of final stage: List(ShuffleMapStage 53)
20/11/28 21:15:27 INFO DAGScheduler: Missing parents: List(ShuffleMapStage 53)
20/11/28 21:15:27 INFO DAGScheduler: Submitting ShuffleMapStage 53 (MapPartitionsRDD[209] at mapPartitions at RandomForest.scala:534), which has no missing parents
20/11/28 21:15:27 INFO MemoryStore: Block broadcast_54 stored as values in memory (estimated size 567.9 KB, free 901.6 MB)
20/11/28 21:15:27 INFO MemoryStore: Block broadcast_54_piece0 stored as bytes in memory (estimated size 131.5 KB, free 901.4 MB)
20/11/28 21:15:27 INFO BlockManagerInfo: Added broadcast_54_piece0 in memory on 127.0.0.1:49604 (size: 131.5 KB, free: 903.0 MB)
20/11/28 21:15:27 INFO SparkContext: Created broadcast 54 from broadcast at DAGScheduler.scala:996
20/11/28 21:15:27 INFO DAGScheduler: Submitting 1 missing tasks from ShuffleMapStage 53 (MapPartitionsRDD[209] at mapPartitions at RandomForest.scala:534)
20/11/28 21:15:27 INFO TaskSchedulerImpl: Adding task set 53.0 with 1 tasks
20/11/28 21:15:27 INFO BlockManagerInfo: Removed broadcast_52_piece0 on 127.0.0.1:49604 in memory (size: 115.5 KB, free: 903.1 MB)
20/11/28 21:15:28 WARN TaskSetManager: Stage 53 contains a task of very large size (40834 KB). The maximum recommended task size is 100 KB.
20/11/28 21:15:28 INFO TaskSetManager: Starting task 0.0 in stage 53.0 (TID 53, localhost, executor driver, partition 0, PROCESS_LOCAL, 41814928 bytes)
20/11/28 21:15:28 INFO Executor: Running task 0.0 in stage 53.0 (TID 53)
20/11/28 21:15:29 INFO BlockManager: Found block rdd_16_0 locally
20/11/28 21:15:39 INFO BlockManagerInfo: Removed broadcast_51_piece0 on 127.0.0.1:49604 in memory (size: 95.8 KB, free: 903.2 MB)
20/11/28 21:15:39 INFO ContextCleaner: Cleaned shuffle 23
20/11/28 21:15:39 INFO BlockManagerInfo: Removed broadcast_50_piece0 on 127.0.0.1:49604 in memory (size: 94.1 KB, free: 903.3 MB)
20/11/28 21:15:41 INFO MemoryStore: Block rdd_208_0 stored as values in memory (estimated size 497.8 MB, free 405.0 MB)
20/11/28 21:15:41 INFO BlockManagerInfo: Added rdd_208_0 in memory on 127.0.0.1:49604 (size: 497.8 MB, free: 405.5 MB)
20/11/28 21:15:46 INFO Executor: Finished task 0.0 in stage 53.0 (TID 53). 3227 bytes result sent to driver
20/11/28 21:15:46 INFO TaskSetManager: Finished task 0.0 in stage 53.0 (TID 53) in 19536 ms on localhost (executor driver) (1/1)
20/11/28 21:15:46 INFO TaskSchedulerImpl: Removed TaskSet 53.0, whose tasks have all completed, from pool 
20/11/28 21:15:46 INFO DAGScheduler: ShuffleMapStage 53 (mapPartitions at RandomForest.scala:534) finished in 19.537 s
20/11/28 21:15:46 INFO DAGScheduler: looking for newly runnable stages
20/11/28 21:15:46 INFO DAGScheduler: running: Set()
20/11/28 21:15:46 INFO DAGScheduler: waiting: Set(ResultStage 54)
20/11/28 21:15:46 INFO DAGScheduler: failed: Set()
20/11/28 21:15:46 INFO DAGScheduler: Submitting ResultStage 54 (MapPartitionsRDD[211] at map at RandomForest.scala:553), which has no missing parents
20/11/28 21:15:46 INFO MemoryStore: Block broadcast_55 stored as values in memory (estimated size 140.9 KB, free 404.9 MB)
20/11/28 21:15:46 INFO MemoryStore: Block broadcast_55_piece0 stored as bytes in memory (estimated size 14.6 KB, free 404.8 MB)
20/11/28 21:15:46 INFO BlockManagerInfo: Added broadcast_55_piece0 in memory on 127.0.0.1:49604 (size: 14.6 KB, free: 405.5 MB)
20/11/28 21:15:46 INFO SparkContext: Created broadcast 55 from broadcast at DAGScheduler.scala:996
20/11/28 21:15:46 INFO DAGScheduler: Submitting 1 missing tasks from ResultStage 54 (MapPartitionsRDD[211] at map at RandomForest.scala:553)
20/11/28 21:15:46 INFO TaskSchedulerImpl: Adding task set 54.0 with 1 tasks
20/11/28 21:15:46 INFO TaskSetManager: Starting task 0.0 in stage 54.0 (TID 54, localhost, executor driver, partition 0, ANY, 5817 bytes)
20/11/28 21:15:46 INFO Executor: Running task 0.0 in stage 54.0 (TID 54)
20/11/28 21:15:46 INFO ShuffleBlockFetcherIterator: Getting 1 non-empty blocks out of 1 blocks
20/11/28 21:15:46 INFO ShuffleBlockFetcherIterator: Started 0 remote fetches in 0 ms
20/11/28 21:15:46 INFO Executor: Finished task 0.0 in stage 54.0 (TID 54). 6964 bytes result sent to driver
20/11/28 21:15:46 INFO TaskSetManager: Finished task 0.0 in stage 54.0 (TID 54) in 140 ms on localhost (executor driver) (1/1)
20/11/28 21:15:46 INFO TaskSchedulerImpl: Removed TaskSet 54.0, whose tasks have all completed, from pool 
20/11/28 21:15:46 INFO DAGScheduler: ResultStage 54 (collectAsMap at RandomForest.scala:563) finished in 0.140 s
20/11/28 21:15:46 INFO DAGScheduler: Job 29 finished: collectAsMap at RandomForest.scala:563, took 19.717633 s
20/11/28 21:15:47 INFO MemoryStore: Block broadcast_56 stored as values in memory (estimated size 11.7 KB, free 404.8 MB)
20/11/28 21:15:47 INFO MemoryStore: Block broadcast_56_piece0 stored as bytes in memory (estimated size 6.5 KB, free 404.8 MB)
20/11/28 21:15:47 INFO BlockManagerInfo: Added broadcast_56_piece0 in memory on 127.0.0.1:49604 (size: 6.5 KB, free: 405.5 MB)
20/11/28 21:15:47 INFO SparkContext: Created broadcast 56 from broadcast at RandomForest.scala:513
20/11/28 21:15:47 INFO SparkContext: Starting job: collectAsMap at RandomForest.scala:563
20/11/28 21:15:47 INFO DAGScheduler: Registering RDD 212 (mapPartitions at RandomForest.scala:534)
20/11/28 21:15:47 INFO DAGScheduler: Got job 30 (collectAsMap at RandomForest.scala:563) with 1 output partitions
20/11/28 21:15:47 INFO DAGScheduler: Final stage: ResultStage 56 (collectAsMap at RandomForest.scala:563)
20/11/28 21:15:47 INFO DAGScheduler: Parents of final stage: List(ShuffleMapStage 55)
20/11/28 21:15:47 INFO DAGScheduler: Missing parents: List(ShuffleMapStage 55)
20/11/28 21:15:47 INFO DAGScheduler: Submitting ShuffleMapStage 55 (MapPartitionsRDD[212] at mapPartitions at RandomForest.scala:534), which has no missing parents
20/11/28 21:15:47 INFO MemoryStore: Block broadcast_57 stored as values in memory (estimated size 578.5 KB, free 404.3 MB)
20/11/28 21:15:47 INFO MemoryStore: Block broadcast_57_piece0 stored as bytes in memory (estimated size 137.4 KB, free 404.1 MB)
20/11/28 21:15:47 INFO BlockManagerInfo: Added broadcast_57_piece0 in memory on 127.0.0.1:49604 (size: 137.4 KB, free: 405.4 MB)
20/11/28 21:15:47 INFO SparkContext: Created broadcast 57 from broadcast at DAGScheduler.scala:996
20/11/28 21:15:47 INFO DAGScheduler: Submitting 1 missing tasks from ShuffleMapStage 55 (MapPartitionsRDD[212] at mapPartitions at RandomForest.scala:534)
20/11/28 21:15:47 INFO TaskSchedulerImpl: Adding task set 55.0 with 1 tasks
20/11/28 21:15:48 INFO BlockManagerInfo: Removed broadcast_55_piece0 on 127.0.0.1:49604 in memory (size: 14.6 KB, free: 405.4 MB)
20/11/28 21:15:48 WARN TaskSetManager: Stage 55 contains a task of very large size (40834 KB). The maximum recommended task size is 100 KB.
20/11/28 21:15:48 INFO TaskSetManager: Starting task 0.0 in stage 55.0 (TID 55, localhost, executor driver, partition 0, PROCESS_LOCAL, 41814928 bytes)
20/11/28 21:15:48 INFO Executor: Running task 0.0 in stage 55.0 (TID 55)
20/11/28 21:15:49 INFO BlockManager: Found block rdd_208_0 locally
20/11/28 21:15:55 INFO Executor: Finished task 0.0 in stage 55.0 (TID 55). 2505 bytes result sent to driver
20/11/28 21:15:55 INFO TaskSetManager: Finished task 0.0 in stage 55.0 (TID 55) in 8307 ms on localhost (executor driver) (1/1)
20/11/28 21:15:55 INFO TaskSchedulerImpl: Removed TaskSet 55.0, whose tasks have all completed, from pool 
20/11/28 21:15:55 INFO DAGScheduler: ShuffleMapStage 55 (mapPartitions at RandomForest.scala:534) finished in 8.308 s
20/11/28 21:15:55 INFO DAGScheduler: looking for newly runnable stages
20/11/28 21:15:55 INFO DAGScheduler: running: Set()
20/11/28 21:15:55 INFO DAGScheduler: waiting: Set(ResultStage 56)
20/11/28 21:15:55 INFO DAGScheduler: failed: Set()
20/11/28 21:15:55 INFO DAGScheduler: Submitting ResultStage 56 (MapPartitionsRDD[214] at map at RandomForest.scala:553), which has no missing parents
20/11/28 21:15:55 INFO MemoryStore: Block broadcast_58 stored as values in memory (estimated size 144.2 KB, free 404.1 MB)
20/11/28 21:15:55 INFO MemoryStore: Block broadcast_58_piece0 stored as bytes in memory (estimated size 16.0 KB, free 404.1 MB)
20/11/28 21:15:55 INFO BlockManagerInfo: Added broadcast_58_piece0 in memory on 127.0.0.1:49604 (size: 16.0 KB, free: 405.4 MB)
20/11/28 21:15:55 INFO SparkContext: Created broadcast 58 from broadcast at DAGScheduler.scala:996
20/11/28 21:15:55 INFO DAGScheduler: Submitting 1 missing tasks from ResultStage 56 (MapPartitionsRDD[214] at map at RandomForest.scala:553)
20/11/28 21:15:55 INFO TaskSchedulerImpl: Adding task set 56.0 with 1 tasks
20/11/28 21:15:55 INFO TaskSetManager: Starting task 0.0 in stage 56.0 (TID 56, localhost, executor driver, partition 0, ANY, 5817 bytes)
20/11/28 21:15:55 INFO Executor: Running task 0.0 in stage 56.0 (TID 56)
20/11/28 21:15:55 INFO ShuffleBlockFetcherIterator: Getting 1 non-empty blocks out of 1 blocks
20/11/28 21:15:55 INFO ShuffleBlockFetcherIterator: Started 0 remote fetches in 0 ms
20/11/28 21:15:55 INFO Executor: Finished task 0.0 in stage 56.0 (TID 56). 10932 bytes result sent to driver
20/11/28 21:15:55 INFO TaskSetManager: Finished task 0.0 in stage 56.0 (TID 56) in 95 ms on localhost (executor driver) (1/1)
20/11/28 21:15:55 INFO TaskSchedulerImpl: Removed TaskSet 56.0, whose tasks have all completed, from pool 
20/11/28 21:15:55 INFO DAGScheduler: ResultStage 56 (collectAsMap at RandomForest.scala:563) finished in 0.095 s
20/11/28 21:15:55 INFO DAGScheduler: Job 30 finished: collectAsMap at RandomForest.scala:563, took 8.437216 s
20/11/28 21:15:55 INFO MemoryStore: Block broadcast_59 stored as values in memory (estimated size 21.7 KB, free 404.1 MB)
20/11/28 21:15:55 INFO MemoryStore: Block broadcast_59_piece0 stored as bytes in memory (estimated size 11.2 KB, free 404.1 MB)
20/11/28 21:15:55 INFO BlockManagerInfo: Added broadcast_59_piece0 in memory on 127.0.0.1:49604 (size: 11.2 KB, free: 405.4 MB)
20/11/28 21:15:55 INFO SparkContext: Created broadcast 59 from broadcast at RandomForest.scala:513
20/11/28 21:15:55 INFO SparkContext: Starting job: collectAsMap at RandomForest.scala:563
20/11/28 21:15:55 INFO DAGScheduler: Registering RDD 215 (mapPartitions at RandomForest.scala:534)
20/11/28 21:15:55 INFO DAGScheduler: Got job 31 (collectAsMap at RandomForest.scala:563) with 1 output partitions
20/11/28 21:15:55 INFO DAGScheduler: Final stage: ResultStage 58 (collectAsMap at RandomForest.scala:563)
20/11/28 21:15:55 INFO DAGScheduler: Parents of final stage: List(ShuffleMapStage 57)
20/11/28 21:15:55 INFO DAGScheduler: Missing parents: List(ShuffleMapStage 57)
20/11/28 21:15:55 INFO DAGScheduler: Submitting ShuffleMapStage 57 (MapPartitionsRDD[215] at mapPartitions at RandomForest.scala:534), which has no missing parents
20/11/28 21:15:55 INFO MemoryStore: Block broadcast_60 stored as values in memory (estimated size 596.2 KB, free 403.5 MB)
20/11/28 21:15:55 INFO MemoryStore: Block broadcast_60_piece0 stored as bytes in memory (estimated size 145.8 KB, free 403.4 MB)
20/11/28 21:15:55 INFO BlockManagerInfo: Added broadcast_60_piece0 in memory on 127.0.0.1:49604 (size: 145.8 KB, free: 405.2 MB)
20/11/28 21:15:55 INFO SparkContext: Created broadcast 60 from broadcast at DAGScheduler.scala:996
20/11/28 21:15:55 INFO DAGScheduler: Submitting 1 missing tasks from ShuffleMapStage 57 (MapPartitionsRDD[215] at mapPartitions at RandomForest.scala:534)
20/11/28 21:15:55 INFO TaskSchedulerImpl: Adding task set 57.0 with 1 tasks
20/11/28 21:15:56 INFO BlockManagerInfo: Removed broadcast_58_piece0 on 127.0.0.1:49604 in memory (size: 16.0 KB, free: 405.3 MB)
20/11/28 21:15:56 INFO BlockManagerInfo: Removed broadcast_56_piece0 on 127.0.0.1:49604 in memory (size: 6.5 KB, free: 405.3 MB)
20/11/28 21:15:56 INFO ContextCleaner: Cleaned shuffle 25
20/11/28 21:15:56 INFO BlockManagerInfo: Removed broadcast_57_piece0 on 127.0.0.1:49604 in memory (size: 137.4 KB, free: 405.4 MB)
20/11/28 21:15:57 WARN TaskSetManager: Stage 57 contains a task of very large size (40834 KB). The maximum recommended task size is 100 KB.
20/11/28 21:15:57 INFO TaskSetManager: Starting task 0.0 in stage 57.0 (TID 57, localhost, executor driver, partition 0, PROCESS_LOCAL, 41814928 bytes)
20/11/28 21:15:57 INFO Executor: Running task 0.0 in stage 57.0 (TID 57)
20/11/28 21:15:57 INFO BlockManager: Found block rdd_208_0 locally
20/11/28 21:16:04 INFO Executor: Finished task 0.0 in stage 57.0 (TID 57). 2505 bytes result sent to driver
20/11/28 21:16:04 INFO TaskSetManager: Finished task 0.0 in stage 57.0 (TID 57) in 8720 ms on localhost (executor driver) (1/1)
20/11/28 21:16:04 INFO TaskSchedulerImpl: Removed TaskSet 57.0, whose tasks have all completed, from pool 
20/11/28 21:16:04 INFO DAGScheduler: ShuffleMapStage 57 (mapPartitions at RandomForest.scala:534) finished in 8.720 s
20/11/28 21:16:04 INFO DAGScheduler: looking for newly runnable stages
20/11/28 21:16:04 INFO DAGScheduler: running: Set()
20/11/28 21:16:04 INFO DAGScheduler: waiting: Set(ResultStage 58)
20/11/28 21:16:04 INFO DAGScheduler: failed: Set()
20/11/28 21:16:04 INFO DAGScheduler: Submitting ResultStage 58 (MapPartitionsRDD[217] at map at RandomForest.scala:553), which has no missing parents
20/11/28 21:16:04 INFO MemoryStore: Block broadcast_61 stored as values in memory (estimated size 147.3 KB, free 404.1 MB)
20/11/28 21:16:04 INFO MemoryStore: Block broadcast_61_piece0 stored as bytes in memory (estimated size 17.0 KB, free 404.1 MB)
20/11/28 21:16:04 INFO BlockManagerInfo: Added broadcast_61_piece0 in memory on 127.0.0.1:49604 (size: 17.0 KB, free: 405.4 MB)
20/11/28 21:16:04 INFO SparkContext: Created broadcast 61 from broadcast at DAGScheduler.scala:996
20/11/28 21:16:04 INFO DAGScheduler: Submitting 1 missing tasks from ResultStage 58 (MapPartitionsRDD[217] at map at RandomForest.scala:553)
20/11/28 21:16:04 INFO TaskSchedulerImpl: Adding task set 58.0 with 1 tasks
20/11/28 21:16:04 INFO TaskSetManager: Starting task 0.0 in stage 58.0 (TID 58, localhost, executor driver, partition 0, ANY, 5817 bytes)
20/11/28 21:16:04 INFO Executor: Running task 0.0 in stage 58.0 (TID 58)
20/11/28 21:16:04 INFO ShuffleBlockFetcherIterator: Getting 1 non-empty blocks out of 1 blocks
20/11/28 21:16:04 INFO ShuffleBlockFetcherIterator: Started 0 remote fetches in 0 ms
20/11/28 21:16:04 INFO Executor: Finished task 0.0 in stage 58.0 (TID 58). 17488 bytes result sent to driver
20/11/28 21:16:04 INFO TaskSetManager: Finished task 0.0 in stage 58.0 (TID 58) in 195 ms on localhost (executor driver) (1/1)
20/11/28 21:16:04 INFO TaskSchedulerImpl: Removed TaskSet 58.0, whose tasks have all completed, from pool 
20/11/28 21:16:04 INFO DAGScheduler: ResultStage 58 (collectAsMap at RandomForest.scala:563) finished in 0.196 s
20/11/28 21:16:04 INFO DAGScheduler: Job 31 finished: collectAsMap at RandomForest.scala:563, took 8.944614 s
20/11/28 21:16:04 INFO MemoryStore: Block broadcast_62 stored as values in memory (estimated size 33.1 KB, free 404.0 MB)
20/11/28 21:16:04 INFO MemoryStore: Block broadcast_62_piece0 stored as bytes in memory (estimated size 16.4 KB, free 404.0 MB)
20/11/28 21:16:04 INFO BlockManagerInfo: Added broadcast_62_piece0 in memory on 127.0.0.1:49604 (size: 16.4 KB, free: 405.4 MB)
20/11/28 21:16:04 INFO SparkContext: Created broadcast 62 from broadcast at RandomForest.scala:513
20/11/28 21:16:04 INFO SparkContext: Starting job: collectAsMap at RandomForest.scala:563
20/11/28 21:16:04 INFO DAGScheduler: Registering RDD 218 (mapPartitions at RandomForest.scala:534)
20/11/28 21:16:04 INFO DAGScheduler: Got job 32 (collectAsMap at RandomForest.scala:563) with 1 output partitions
20/11/28 21:16:04 INFO DAGScheduler: Final stage: ResultStage 60 (collectAsMap at RandomForest.scala:563)
20/11/28 21:16:04 INFO DAGScheduler: Parents of final stage: List(ShuffleMapStage 59)
20/11/28 21:16:04 INFO DAGScheduler: Missing parents: List(ShuffleMapStage 59)
20/11/28 21:16:04 INFO DAGScheduler: Submitting ShuffleMapStage 59 (MapPartitionsRDD[218] at mapPartitions at RandomForest.scala:534), which has no missing parents
20/11/28 21:16:04 INFO MemoryStore: Block broadcast_63 stored as values in memory (estimated size 622.5 KB, free 403.4 MB)
20/11/28 21:16:04 INFO MemoryStore: Block broadcast_63_piece0 stored as bytes in memory (estimated size 157.8 KB, free 403.3 MB)
20/11/28 21:16:04 INFO BlockManagerInfo: Added broadcast_63_piece0 in memory on 127.0.0.1:49604 (size: 157.8 KB, free: 405.2 MB)
20/11/28 21:16:04 INFO SparkContext: Created broadcast 63 from broadcast at DAGScheduler.scala:996
20/11/28 21:16:04 INFO DAGScheduler: Submitting 1 missing tasks from ShuffleMapStage 59 (MapPartitionsRDD[218] at mapPartitions at RandomForest.scala:534)
20/11/28 21:16:04 INFO TaskSchedulerImpl: Adding task set 59.0 with 1 tasks
20/11/28 21:16:04 INFO BlockManagerInfo: Removed broadcast_61_piece0 on 127.0.0.1:49604 in memory (size: 17.0 KB, free: 405.2 MB)
20/11/28 21:16:04 INFO BlockManagerInfo: Removed broadcast_59_piece0 on 127.0.0.1:49604 in memory (size: 11.2 KB, free: 405.2 MB)
20/11/28 21:16:04 INFO ContextCleaner: Cleaned shuffle 26
20/11/28 21:16:04 INFO BlockManagerInfo: Removed broadcast_60_piece0 on 127.0.0.1:49604 in memory (size: 145.8 KB, free: 405.4 MB)
20/11/28 21:16:06 WARN TaskSetManager: Stage 59 contains a task of very large size (40834 KB). The maximum recommended task size is 100 KB.
20/11/28 21:16:06 INFO TaskSetManager: Starting task 0.0 in stage 59.0 (TID 59, localhost, executor driver, partition 0, PROCESS_LOCAL, 41814928 bytes)
20/11/28 21:16:06 INFO Executor: Running task 0.0 in stage 59.0 (TID 59)
20/11/28 21:16:06 INFO BlockManager: Found block rdd_208_0 locally
20/11/28 21:16:13 INFO Executor: Finished task 0.0 in stage 59.0 (TID 59). 2505 bytes result sent to driver
20/11/28 21:16:13 INFO TaskSetManager: Finished task 0.0 in stage 59.0 (TID 59) in 9078 ms on localhost (executor driver) (1/1)
20/11/28 21:16:13 INFO TaskSchedulerImpl: Removed TaskSet 59.0, whose tasks have all completed, from pool 
20/11/28 21:16:13 INFO DAGScheduler: ShuffleMapStage 59 (mapPartitions at RandomForest.scala:534) finished in 9.078 s
20/11/28 21:16:13 INFO DAGScheduler: looking for newly runnable stages
20/11/28 21:16:13 INFO DAGScheduler: running: Set()
20/11/28 21:16:13 INFO DAGScheduler: waiting: Set(ResultStage 60)
20/11/28 21:16:13 INFO DAGScheduler: failed: Set()
20/11/28 21:16:13 INFO DAGScheduler: Submitting ResultStage 60 (MapPartitionsRDD[220] at map at RandomForest.scala:553), which has no missing parents
20/11/28 21:16:13 INFO MemoryStore: Block broadcast_64 stored as values in memory (estimated size 150.8 KB, free 404.0 MB)
20/11/28 21:16:13 INFO MemoryStore: Block broadcast_64_piece0 stored as bytes in memory (estimated size 18.1 KB, free 404.0 MB)
20/11/28 21:16:13 INFO BlockManagerInfo: Added broadcast_64_piece0 in memory on 127.0.0.1:49604 (size: 18.1 KB, free: 405.4 MB)
20/11/28 21:16:13 INFO SparkContext: Created broadcast 64 from broadcast at DAGScheduler.scala:996
20/11/28 21:16:13 INFO DAGScheduler: Submitting 1 missing tasks from ResultStage 60 (MapPartitionsRDD[220] at map at RandomForest.scala:553)
20/11/28 21:16:13 INFO TaskSchedulerImpl: Adding task set 60.0 with 1 tasks
20/11/28 21:16:13 INFO TaskSetManager: Starting task 0.0 in stage 60.0 (TID 60, localhost, executor driver, partition 0, ANY, 5817 bytes)
20/11/28 21:16:13 INFO Executor: Running task 0.0 in stage 60.0 (TID 60)
20/11/28 21:16:13 INFO ShuffleBlockFetcherIterator: Getting 1 non-empty blocks out of 1 blocks
20/11/28 21:16:13 INFO ShuffleBlockFetcherIterator: Started 0 remote fetches in 0 ms
20/11/28 21:16:13 INFO Executor: Finished task 0.0 in stage 60.0 (TID 60). 25388 bytes result sent to driver
20/11/28 21:16:13 INFO TaskSetManager: Finished task 0.0 in stage 60.0 (TID 60) in 293 ms on localhost (executor driver) (1/1)
20/11/28 21:16:13 INFO TaskSchedulerImpl: Removed TaskSet 60.0, whose tasks have all completed, from pool 
20/11/28 21:16:13 INFO DAGScheduler: ResultStage 60 (collectAsMap at RandomForest.scala:563) finished in 0.294 s
20/11/28 21:16:13 INFO DAGScheduler: Job 32 finished: collectAsMap at RandomForest.scala:563, took 9.403621 s
20/11/28 21:16:13 INFO MemoryStore: Block broadcast_65 stored as values in memory (estimated size 48.7 KB, free 404.0 MB)
20/11/28 21:16:13 INFO MemoryStore: Block broadcast_65_piece0 stored as bytes in memory (estimated size 24.3 KB, free 403.9 MB)
20/11/28 21:16:13 INFO BlockManagerInfo: Added broadcast_65_piece0 in memory on 127.0.0.1:49604 (size: 24.3 KB, free: 405.3 MB)
20/11/28 21:16:13 INFO SparkContext: Created broadcast 65 from broadcast at RandomForest.scala:513
20/11/28 21:16:13 INFO SparkContext: Starting job: collectAsMap at RandomForest.scala:563
20/11/28 21:16:13 INFO DAGScheduler: Registering RDD 221 (mapPartitions at RandomForest.scala:534)
20/11/28 21:16:13 INFO DAGScheduler: Got job 33 (collectAsMap at RandomForest.scala:563) with 1 output partitions
20/11/28 21:16:13 INFO DAGScheduler: Final stage: ResultStage 62 (collectAsMap at RandomForest.scala:563)
20/11/28 21:16:13 INFO DAGScheduler: Parents of final stage: List(ShuffleMapStage 61)
20/11/28 21:16:13 INFO DAGScheduler: Missing parents: List(ShuffleMapStage 61)
20/11/28 21:16:13 INFO DAGScheduler: Submitting ShuffleMapStage 61 (MapPartitionsRDD[221] at mapPartitions at RandomForest.scala:534), which has no missing parents
20/11/28 21:16:14 INFO BlockManagerInfo: Removed broadcast_64_piece0 on 127.0.0.1:49604 in memory (size: 18.1 KB, free: 405.4 MB)
20/11/28 21:16:14 INFO MemoryStore: Block broadcast_66 stored as values in memory (estimated size 661.6 KB, free 403.5 MB)
20/11/28 21:16:14 INFO MemoryStore: Block broadcast_66_piece0 stored as bytes in memory (estimated size 174.2 KB, free 403.3 MB)
20/11/28 21:16:14 INFO BlockManagerInfo: Added broadcast_66_piece0 in memory on 127.0.0.1:49604 (size: 174.2 KB, free: 405.2 MB)
20/11/28 21:16:14 INFO SparkContext: Created broadcast 66 from broadcast at DAGScheduler.scala:996
20/11/28 21:16:14 INFO DAGScheduler: Submitting 1 missing tasks from ShuffleMapStage 61 (MapPartitionsRDD[221] at mapPartitions at RandomForest.scala:534)
20/11/28 21:16:14 INFO TaskSchedulerImpl: Adding task set 61.0 with 1 tasks
20/11/28 21:16:15 WARN TaskSetManager: Stage 61 contains a task of very large size (40834 KB). The maximum recommended task size is 100 KB.
20/11/28 21:16:15 INFO TaskSetManager: Starting task 0.0 in stage 61.0 (TID 61, localhost, executor driver, partition 0, PROCESS_LOCAL, 41814928 bytes)
20/11/28 21:16:15 INFO Executor: Running task 0.0 in stage 61.0 (TID 61)
20/11/28 21:16:16 INFO BlockManager: Found block rdd_208_0 locally
20/11/28 21:16:22 INFO Executor: Finished task 0.0 in stage 61.0 (TID 61). 2505 bytes result sent to driver
20/11/28 21:16:22 INFO TaskSetManager: Finished task 0.0 in stage 61.0 (TID 61) in 8926 ms on localhost (executor driver) (1/1)
20/11/28 21:16:22 INFO TaskSchedulerImpl: Removed TaskSet 61.0, whose tasks have all completed, from pool 
20/11/28 21:16:22 INFO DAGScheduler: ShuffleMapStage 61 (mapPartitions at RandomForest.scala:534) finished in 8.927 s
20/11/28 21:16:22 INFO DAGScheduler: looking for newly runnable stages
20/11/28 21:16:22 INFO DAGScheduler: running: Set()
20/11/28 21:16:22 INFO DAGScheduler: waiting: Set(ResultStage 62)
20/11/28 21:16:22 INFO DAGScheduler: failed: Set()
20/11/28 21:16:22 INFO DAGScheduler: Submitting ResultStage 62 (MapPartitionsRDD[223] at map at RandomForest.scala:553), which has no missing parents
20/11/28 21:16:22 INFO MemoryStore: Block broadcast_67 stored as values in memory (estimated size 155.6 KB, free 403.1 MB)
20/11/28 21:16:22 INFO MemoryStore: Block broadcast_67_piece0 stored as bytes in memory (estimated size 19.6 KB, free 403.1 MB)
20/11/28 21:16:22 INFO BlockManagerInfo: Added broadcast_67_piece0 in memory on 127.0.0.1:49604 (size: 19.6 KB, free: 405.2 MB)
20/11/28 21:16:22 INFO SparkContext: Created broadcast 67 from broadcast at DAGScheduler.scala:996
20/11/28 21:16:22 INFO DAGScheduler: Submitting 1 missing tasks from ResultStage 62 (MapPartitionsRDD[223] at map at RandomForest.scala:553)
20/11/28 21:16:22 INFO TaskSchedulerImpl: Adding task set 62.0 with 1 tasks
20/11/28 21:16:22 INFO TaskSetManager: Starting task 0.0 in stage 62.0 (TID 62, localhost, executor driver, partition 0, ANY, 5817 bytes)
20/11/28 21:16:22 INFO Executor: Running task 0.0 in stage 62.0 (TID 62)
20/11/28 21:16:22 INFO ShuffleBlockFetcherIterator: Getting 1 non-empty blocks out of 1 blocks
20/11/28 21:16:22 INFO ShuffleBlockFetcherIterator: Started 0 remote fetches in 0 ms
20/11/28 21:16:23 INFO Executor: Finished task 0.0 in stage 62.0 (TID 62). 36337 bytes result sent to driver
20/11/28 21:16:23 INFO TaskSetManager: Finished task 0.0 in stage 62.0 (TID 62) in 380 ms on localhost (executor driver) (1/1)
20/11/28 21:16:23 INFO TaskSchedulerImpl: Removed TaskSet 62.0, whose tasks have all completed, from pool 
20/11/28 21:16:23 INFO DAGScheduler: ResultStage 62 (collectAsMap at RandomForest.scala:563) finished in 0.380 s
20/11/28 21:16:23 INFO DAGScheduler: Job 33 finished: collectAsMap at RandomForest.scala:563, took 9.351469 s
20/11/28 21:16:23 INFO MapPartitionsRDD: Removing RDD 208 from persistence list
20/11/28 21:16:23 INFO BlockManager: Removing RDD 208
20/11/28 21:16:23 INFO RandomForest: Internal timing for DecisionTree:
20/11/28 21:16:23 INFO RandomForest:   init: 18.365051352
  total: 74.578582947
  findSplits: 8.010632862
  findBestSplits: 56.091376568
  chooseSplits: 56.078775287
20/11/28 21:16:23 INFO SparkContext: Starting job: first at RandomForestClassifier.scala:140
20/11/28 21:16:23 INFO DAGScheduler: Got job 34 (first at RandomForestClassifier.scala:140) with 1 output partitions
20/11/28 21:16:23 INFO DAGScheduler: Final stage: ResultStage 63 (first at RandomForestClassifier.scala:140)
20/11/28 21:16:23 INFO DAGScheduler: Parents of final stage: List()
20/11/28 21:16:23 INFO DAGScheduler: Missing parents: List()
20/11/28 21:16:23 INFO DAGScheduler: Submitting ResultStage 63 (MapPartitionsRDD[200] at map at Classifier.scala:82), which has no missing parents
20/11/28 21:16:23 INFO MemoryStore: Block broadcast_68 stored as values in memory (estimated size 332.4 KB, free 900.6 MB)
20/11/28 21:16:23 INFO MemoryStore: Block broadcast_68_piece0 stored as bytes in memory (estimated size 94.2 KB, free 900.5 MB)
20/11/28 21:16:23 INFO BlockManagerInfo: Added broadcast_68_piece0 in memory on 127.0.0.1:49604 (size: 94.2 KB, free: 902.9 MB)
20/11/28 21:16:23 INFO SparkContext: Created broadcast 68 from broadcast at DAGScheduler.scala:996
20/11/28 21:16:23 INFO DAGScheduler: Submitting 1 missing tasks from ResultStage 63 (MapPartitionsRDD[200] at map at Classifier.scala:82)
20/11/28 21:16:23 INFO TaskSchedulerImpl: Adding task set 63.0 with 1 tasks
20/11/28 21:16:23 INFO BlockManagerInfo: Removed broadcast_67_piece0 on 127.0.0.1:49604 in memory (size: 19.6 KB, free: 902.9 MB)
20/11/28 21:16:25 WARN TaskSetManager: Stage 63 contains a task of very large size (40834 KB). The maximum recommended task size is 100 KB.
20/11/28 21:16:25 INFO TaskSetManager: Starting task 0.0 in stage 63.0 (TID 63, localhost, executor driver, partition 0, PROCESS_LOCAL, 41814932 bytes)
20/11/28 21:16:25 INFO Executor: Running task 0.0 in stage 63.0 (TID 63)
20/11/28 21:16:26 INFO BlockManagerInfo: Removed broadcast_66_piece0 on 127.0.0.1:49604 in memory (size: 174.2 KB, free: 903.0 MB)
20/11/28 21:16:26 INFO ContextCleaner: Cleaned shuffle 28
20/11/28 21:16:26 INFO BlockManagerInfo: Removed broadcast_65_piece0 on 127.0.0.1:49604 in memory (size: 24.3 KB, free: 903.1 MB)
20/11/28 21:16:26 INFO BlockManagerInfo: Removed broadcast_63_piece0 on 127.0.0.1:49604 in memory (size: 157.8 KB, free: 903.2 MB)
20/11/28 21:16:26 INFO ContextCleaner: Cleaned shuffle 27
20/11/28 21:16:26 INFO BlockManagerInfo: Removed broadcast_62_piece0 on 127.0.0.1:49604 in memory (size: 16.4 KB, free: 903.2 MB)
20/11/28 21:16:26 INFO BlockManagerInfo: Removed broadcast_54_piece0 on 127.0.0.1:49604 in memory (size: 131.5 KB, free: 903.4 MB)
20/11/28 21:16:26 INFO ContextCleaner: Cleaned shuffle 24
20/11/28 21:16:26 INFO BlockManagerInfo: Removed broadcast_53_piece0 on 127.0.0.1:49604 in memory (size: 3.6 KB, free: 903.4 MB)
20/11/28 21:16:26 INFO BlockManager: Removing RDD 208
20/11/28 21:16:26 INFO ContextCleaner: Cleaned RDD 208
20/11/28 21:16:26 INFO BlockManager: Found block rdd_16_0 locally
20/11/28 21:16:27 INFO Executor: Finished task 0.0 in stage 63.0 (TID 63). 2661 bytes result sent to driver
20/11/28 21:16:27 INFO TaskSetManager: Finished task 0.0 in stage 63.0 (TID 63) in 4111 ms on localhost (executor driver) (1/1)
20/11/28 21:16:27 INFO TaskSchedulerImpl: Removed TaskSet 63.0, whose tasks have all completed, from pool 
20/11/28 21:16:27 INFO DAGScheduler: ResultStage 63 (first at RandomForestClassifier.scala:140) finished in 4.111 s
20/11/28 21:16:27 INFO DAGScheduler: Job 34 finished: first at RandomForestClassifier.scala:140, took 4.123107 s
20/11/28 21:16:27 INFO Instrumentation: RandomForestClassifier-random_forest__08b6b1f4_0adb_4fa1_877b_7b9174039f10-793477353-1: training finished
20/11/28 21:16:27 INFO SparkSqlParser: Parsing command: SELECT *
FROM `sparklyr_tmp_e6e3ebbe_1426_4179_abb3_7c015418717c`
20/11/28 21:16:29 INFO SparkSqlParser: Parsing command: sparklyr_tmp_2ffba37a_a64f_4f99_bf57_c77e8197a330
20/11/28 21:16:29 INFO SparkSqlParser: Parsing command: SELECT *
FROM `sparklyr_tmp_2ffba37a_a64f_4f99_bf57_c77e8197a330` AS `q01`
WHERE (0 = 1)
20/11/28 21:16:29 INFO SparkSqlParser: Parsing command: SELECT *
FROM `sparklyr_tmp_2ffba37a_a64f_4f99_bf57_c77e8197a330`
20/11/28 21:16:29 INFO SparkSqlParser: Parsing command: SELECT *
FROM `sparklyr_tmp_e6e3ebbe_1426_4179_abb3_7c015418717c`
20/11/28 21:16:30 INFO SparkSqlParser: Parsing command: sparklyr_tmp_c11974b3_b7fe_4805_bf57_acb886a15248
20/11/28 21:16:30 INFO SparkSqlParser: Parsing command: SELECT *
FROM `sparklyr_tmp_c11974b3_b7fe_4805_bf57_acb886a15248` AS `q01`
WHERE (0 = 1)
20/11/28 21:16:30 INFO SparkSqlParser: Parsing command: SELECT *
FROM `sparklyr_tmp_c11974b3_b7fe_4805_bf57_acb886a15248`
20/11/28 21:16:31 INFO SparkSqlParser: Parsing command: SELECT *
FROM `sparklyr_tmp_e6e3ebbe_1426_4179_abb3_7c015418717c`
20/11/28 21:20:03 INFO SparkSqlParser: Parsing command: SELECT *
FROM `sparklyr_tmp_f7be9dc1_f3ae_435b_a334_6e4ab6612c38`
20/11/28 21:20:05 INFO SparkSqlParser: Parsing command: sparklyr_tmp_e3933bbc_3ba1_4a13_99ac_25896b77d9a8
20/11/28 21:20:05 INFO SparkSqlParser: Parsing command: SELECT *
FROM `sparklyr_tmp_e3933bbc_3ba1_4a13_99ac_25896b77d9a8` AS `q01`
WHERE (0 = 1)
20/11/28 21:20:05 INFO SparkSqlParser: Parsing command: SELECT *
FROM `sparklyr_tmp_e3933bbc_3ba1_4a13_99ac_25896b77d9a8`
20/11/28 21:20:05 INFO SparkSqlParser: Parsing command: sparklyr_tmp_7504b647_2fbe_48f6_b69d_9d75c8dbb07c
20/11/28 21:20:05 INFO SparkSqlParser: Parsing command: SELECT *
FROM `sparklyr_tmp_7504b647_2fbe_48f6_b69d_9d75c8dbb07c` AS `q01`
WHERE (0 = 1)
20/11/28 21:20:13 INFO SparkSqlParser: Parsing command: SELECT *
FROM `sparklyr_tmp_7504b647_2fbe_48f6_b69d_9d75c8dbb07c`
20/11/28 21:20:13 INFO CodeGenerator: Code generated in 121.018852 ms
20/11/28 21:20:14 INFO SparkContext: Starting job: countByValue at MulticlassMetrics.scala:42
20/11/28 21:20:14 INFO DAGScheduler: Registering RDD 235 (countByValue at MulticlassMetrics.scala:42)
20/11/28 21:20:14 INFO DAGScheduler: Got job 35 (countByValue at MulticlassMetrics.scala:42) with 1 output partitions
20/11/28 21:20:14 INFO DAGScheduler: Final stage: ResultStage 65 (countByValue at MulticlassMetrics.scala:42)
20/11/28 21:20:14 INFO DAGScheduler: Parents of final stage: List(ShuffleMapStage 64)
20/11/28 21:20:14 INFO DAGScheduler: Missing parents: List(ShuffleMapStage 64)
20/11/28 21:20:14 INFO DAGScheduler: Submitting ShuffleMapStage 64 (MapPartitionsRDD[235] at countByValue at MulticlassMetrics.scala:42), which has no missing parents
20/11/28 21:20:14 INFO MemoryStore: Block broadcast_69 stored as values in memory (estimated size 313.9 KB, free 902.7 MB)
20/11/28 21:20:14 INFO MemoryStore: Block broadcast_69_piece0 stored as bytes in memory (estimated size 112.2 KB, free 902.6 MB)
20/11/28 21:20:14 INFO BlockManagerInfo: Added broadcast_69_piece0 in memory on 127.0.0.1:49604 (size: 112.2 KB, free: 903.3 MB)
20/11/28 21:20:14 INFO SparkContext: Created broadcast 69 from broadcast at DAGScheduler.scala:996
20/11/28 21:20:14 INFO DAGScheduler: Submitting 1 missing tasks from ShuffleMapStage 64 (MapPartitionsRDD[235] at countByValue at MulticlassMetrics.scala:42)
20/11/28 21:20:14 INFO TaskSchedulerImpl: Adding task set 64.0 with 1 tasks
20/11/28 21:20:15 WARN TaskSetManager: Stage 64 contains a task of very large size (40834 KB). The maximum recommended task size is 100 KB.
20/11/28 21:20:15 INFO TaskSetManager: Starting task 0.0 in stage 64.0 (TID 64, localhost, executor driver, partition 0, PROCESS_LOCAL, 41814928 bytes)
20/11/28 21:20:15 INFO Executor: Running task 0.0 in stage 64.0 (TID 64)
20/11/28 21:20:16 INFO BlockManager: Found block rdd_16_0 locally
20/11/28 21:20:16 INFO CodeGenerator: Code generated in 5.669903 ms
20/11/28 21:20:17 ERROR Executor: Exception in task 0.0 in stage 64.0 (TID 64)
org.apache.spark.SparkException: Failed to execute user defined function($anonfun$4: (string) => double)
	at org.apache.spark.sql.catalyst.expressions.GeneratedClass$GeneratedIterator.processNext(Unknown Source)
	at org.apache.spark.sql.execution.BufferedRowIterator.hasNext(BufferedRowIterator.java:43)
	at org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$8$$anon$1.hasNext(WholeStageCodegenExec.scala:377)
	at scala.collection.Iterator$$anon$11.hasNext(Iterator.scala:408)
	at scala.collection.Iterator$$anon$11.hasNext(Iterator.scala:408)
	at scala.collection.Iterator$$anon$11.hasNext(Iterator.scala:408)
	at scala.collection.Iterator$$anon$11.hasNext(Iterator.scala:408)
	at scala.collection.Iterator$$anon$11.hasNext(Iterator.scala:408)
	at scala.collection.Iterator$$anon$11.hasNext(Iterator.scala:408)
	at org.apache.spark.util.collection.ExternalSorter.insertAll(ExternalSorter.scala:191)
	at org.apache.spark.shuffle.sort.SortShuffleWriter.write(SortShuffleWriter.scala:63)
	at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:96)
	at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:53)
	at org.apache.spark.scheduler.Task.run(Task.scala:99)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:282)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.spark.SparkException: Unseen label: 915.
	at org.apache.spark.ml.feature.StringIndexerModel$$anonfun$4.apply(StringIndexer.scala:170)
	at org.apache.spark.ml.feature.StringIndexerModel$$anonfun$4.apply(StringIndexer.scala:166)
	... 18 more
20/11/28 21:20:17 WARN TaskSetManager: Lost task 0.0 in stage 64.0 (TID 64, localhost, executor driver): org.apache.spark.SparkException: Failed to execute user defined function($anonfun$4: (string) => double)
	at org.apache.spark.sql.catalyst.expressions.GeneratedClass$GeneratedIterator.processNext(Unknown Source)
	at org.apache.spark.sql.execution.BufferedRowIterator.hasNext(BufferedRowIterator.java:43)
	at org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$8$$anon$1.hasNext(WholeStageCodegenExec.scala:377)
	at scala.collection.Iterator$$anon$11.hasNext(Iterator.scala:408)
	at scala.collection.Iterator$$anon$11.hasNext(Iterator.scala:408)
	at scala.collection.Iterator$$anon$11.hasNext(Iterator.scala:408)
	at scala.collection.Iterator$$anon$11.hasNext(Iterator.scala:408)
	at scala.collection.Iterator$$anon$11.hasNext(Iterator.scala:408)
	at scala.collection.Iterator$$anon$11.hasNext(Iterator.scala:408)
	at org.apache.spark.util.collection.ExternalSorter.insertAll(ExternalSorter.scala:191)
	at org.apache.spark.shuffle.sort.SortShuffleWriter.write(SortShuffleWriter.scala:63)
	at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:96)
	at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:53)
	at org.apache.spark.scheduler.Task.run(Task.scala:99)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:282)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.spark.SparkException: Unseen label: 915.
	at org.apache.spark.ml.feature.StringIndexerModel$$anonfun$4.apply(StringIndexer.scala:170)
	at org.apache.spark.ml.feature.StringIndexerModel$$anonfun$4.apply(StringIndexer.scala:166)
	... 18 more

20/11/28 21:20:17 ERROR TaskSetManager: Task 0 in stage 64.0 failed 1 times; aborting job
20/11/28 21:20:17 INFO TaskSchedulerImpl: Removed TaskSet 64.0, whose tasks have all completed, from pool 
20/11/28 21:20:17 INFO TaskSchedulerImpl: Cancelling stage 64
20/11/28 21:20:17 INFO DAGScheduler: ShuffleMapStage 64 (countByValue at MulticlassMetrics.scala:42) failed in 3.136 s due to Job aborted due to stage failure: Task 0 in stage 64.0 failed 1 times, most recent failure: Lost task 0.0 in stage 64.0 (TID 64, localhost, executor driver): org.apache.spark.SparkException: Failed to execute user defined function($anonfun$4: (string) => double)
	at org.apache.spark.sql.catalyst.expressions.GeneratedClass$GeneratedIterator.processNext(Unknown Source)
	at org.apache.spark.sql.execution.BufferedRowIterator.hasNext(BufferedRowIterator.java:43)
	at org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$8$$anon$1.hasNext(WholeStageCodegenExec.scala:377)
	at scala.collection.Iterator$$anon$11.hasNext(Iterator.scala:408)
	at scala.collection.Iterator$$anon$11.hasNext(Iterator.scala:408)
	at scala.collection.Iterator$$anon$11.hasNext(Iterator.scala:408)
	at scala.collection.Iterator$$anon$11.hasNext(Iterator.scala:408)
	at scala.collection.Iterator$$anon$11.hasNext(Iterator.scala:408)
	at scala.collection.Iterator$$anon$11.hasNext(Iterator.scala:408)
	at org.apache.spark.util.collection.ExternalSorter.insertAll(ExternalSorter.scala:191)
	at org.apache.spark.shuffle.sort.SortShuffleWriter.write(SortShuffleWriter.scala:63)
	at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:96)
	at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:53)
	at org.apache.spark.scheduler.Task.run(Task.scala:99)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:282)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.spark.SparkException: Unseen label: 915.
	at org.apache.spark.ml.feature.StringIndexerModel$$anonfun$4.apply(StringIndexer.scala:170)
	at org.apache.spark.ml.feature.StringIndexerModel$$anonfun$4.apply(StringIndexer.scala:166)
	... 18 more

Driver stacktrace:
20/11/28 21:20:17 INFO DAGScheduler: Job 35 failed: countByValue at MulticlassMetrics.scala:42, took 3.155976 s
20/11/28 21:21:11 INFO SparkSqlParser: Parsing command: SELECT *
FROM `sparklyr_tmp_7504b647_2fbe_48f6_b69d_9d75c8dbb07c`
20/11/28 21:21:11 INFO SparkSqlParser: Parsing command: SELECT *
FROM `sparklyr_tmp_7504b647_2fbe_48f6_b69d_9d75c8dbb07c`
20/11/28 21:21:11 INFO SparkSqlParser: Parsing command: SELECT *
FROM `sparklyr_tmp_7504b647_2fbe_48f6_b69d_9d75c8dbb07c`
LIMIT 11
20/11/28 21:21:11 INFO SparkSqlParser: Parsing command: SELECT *
FROM `sparklyr_tmp_7504b647_2fbe_48f6_b69d_9d75c8dbb07c`
LIMIT 11
20/11/28 21:21:11 INFO ContextCleaner: Cleaned accumulator 3268
20/11/28 21:21:11 INFO ContextCleaner: Cleaned accumulator 3269
20/11/28 21:21:11 INFO ContextCleaner: Cleaned accumulator 3270
20/11/28 21:21:11 INFO ContextCleaner: Cleaned accumulator 3271
20/11/28 21:21:11 INFO ContextCleaner: Cleaned accumulator 3272
20/11/28 21:21:11 INFO ContextCleaner: Cleaned accumulator 3273
20/11/28 21:21:11 INFO ContextCleaner: Cleaned shuffle 29
20/11/28 21:21:11 INFO BlockManagerInfo: Removed broadcast_69_piece0 on 127.0.0.1:49604 in memory (size: 112.2 KB, free: 903.4 MB)
20/11/28 21:21:13 ERROR CodeGenerator: failed to compile: org.codehaus.janino.JaninoRuntimeException: Code of method "processNext()V" of class "org.apache.spark.sql.catalyst.expressions.GeneratedClass$GeneratedIterator" grows beyond 64 KB
/* 001 */ public Object generate(Object[] references) {
/* 002 */   return new GeneratedIterator(references);
/* 003 */ }
/* 004 */
/* 005 */ final class GeneratedIterator extends org.apache.spark.sql.execution.BufferedRowIterator {
/* 006 */   private Object[] references;
/* 007 */   private scala.collection.Iterator[] inputs;
/* 008 */   private boolean sort_needToSort;
/* 009 */   private org.apache.spark.sql.execution.SortExec sort_plan;
/* 010 */   private org.apache.spark.sql.execution.UnsafeExternalRowSorter sort_sorter;
/* 011 */   private org.apache.spark.executor.TaskMetrics sort_metrics;
/* 012 */   private scala.collection.Iterator<UnsafeRow> sort_sortedIter;
/* 013 */   private scala.collection.Iterator inputadapter_input;
/* 014 */   private org.apache.spark.sql.execution.metric.SQLMetric sort_peakMemory;
/* 015 */   private org.apache.spark.sql.execution.metric.SQLMetric sort_spillSize;
/* 016 */   private org.apache.spark.sql.execution.metric.SQLMetric sort_sortTime;
/* 017 */   private org.apache.spark.sql.execution.metric.SQLMetric sample_numOutputRows;
/* 018 */   private org.apache.spark.util.random.BernoulliCellSampler<UnsafeRow> sample_sampler;
/* 019 */   private UnsafeRow sample_result;
/* 020 */   private org.apache.spark.sql.catalyst.expressions.codegen.BufferHolder sample_holder;
/* 021 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter sample_rowWriter;
/* 022 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF;
/* 023 */   private scala.Function1 project_catalystConverter;
/* 024 */   private scala.Function1 project_converter;
/* 025 */   private scala.Function1 project_udf;
/* 026 */   private Object[] project_values;
/* 027 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF1;
/* 028 */   private scala.Function1 project_catalystConverter1;
/* 029 */   private scala.Function1 project_converter1;
/* 030 */   private scala.Function1 project_udf1;
/* 031 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF2;
/* 032 */   private scala.Function1 project_catalystConverter2;
/* 033 */   private scala.Function1 project_converter2;
/* 034 */   private scala.Function1 project_udf2;
/* 035 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF3;
/* 036 */   private scala.Function1 project_catalystConverter3;
/* 037 */   private scala.Function1 project_converter3;
/* 038 */   private scala.Function1 project_udf3;
/* 039 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF4;
/* 040 */   private scala.Function1 project_catalystConverter4;
/* 041 */   private scala.Function1 project_converter4;
/* 042 */   private scala.Function1 project_udf4;
/* 043 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF5;
/* 044 */   private scala.Function1 project_catalystConverter5;
/* 045 */   private scala.Function1 project_converter5;
/* 046 */   private scala.Function1 project_udf5;
/* 047 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF6;
/* 048 */   private scala.Function1 project_catalystConverter6;
/* 049 */   private scala.Function1 project_converter6;
/* 050 */   private scala.Function1 project_udf6;
/* 051 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF7;
/* 052 */   private scala.Function1 project_catalystConverter7;
/* 053 */   private scala.Function1 project_converter7;
/* 054 */   private scala.Function1 project_udf7;
/* 055 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF8;
/* 056 */   private scala.Function1 project_catalystConverter8;
/* 057 */   private scala.Function1 project_converter8;
/* 058 */   private scala.Function1 project_udf8;
/* 059 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF9;
/* 060 */   private scala.Function1 project_catalystConverter9;
/* 061 */   private scala.Function1 project_converter9;
/* 062 */   private scala.Function1 project_udf9;
/* 063 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF10;
/* 064 */   private scala.Function1 project_catalystConverter10;
/* 065 */   private scala.Function1 project_converter10;
/* 066 */   private scala.Function1 project_udf10;
/* 067 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF11;
/* 068 */   private scala.Function1 project_catalystConverter11;
/* 069 */   private scala.Function1 project_converter11;
/* 070 */   private scala.Function1 project_udf11;
/* 071 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF12;
/* 072 */   private scala.Function1 project_catalystConverter12;
/* 073 */   private scala.Function1 project_converter12;
/* 074 */   private scala.Function1 project_udf12;
/* 075 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF13;
/* 076 */   private scala.Function1 project_catalystConverter13;
/* 077 */   private scala.Function1 project_converter13;
/* 078 */   private scala.Function1 project_udf13;
/* 079 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF14;
/* 080 */   private scala.Function1 project_catalystConverter14;
/* 081 */   private scala.Function1 project_converter14;
/* 082 */   private scala.Function1 project_udf14;
/* 083 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF15;
/* 084 */   private scala.Function1 project_catalystConverter15;
/* 085 */   private scala.Function1 project_converter15;
/* 086 */   private scala.Function1 project_udf15;
/* 087 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF16;
/* 088 */   private scala.Function1 project_catalystConverter16;
/* 089 */   private scala.Function1 project_converter16;
/* 090 */   private scala.Function1 project_udf16;
/* 091 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF17;
/* 092 */   private scala.Function1 project_catalystConverter17;
/* 093 */   private scala.Function1 project_converter17;
/* 094 */   private scala.Function1 project_udf17;
/* 095 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF18;
/* 096 */   private scala.Function1 project_catalystConverter18;
/* 097 */   private scala.Function1 project_converter18;
/* 098 */   private scala.Function1 project_udf18;
/* 099 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF19;
/* 100 */   private scala.Function1 project_catalystConverter19;
/* 101 */   private scala.Function1 project_converter19;
/* 102 */   private scala.Function1 project_udf19;
/* 103 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF20;
/* 104 */   private scala.Function1 project_catalystConverter20;
/* 105 */   private scala.Function1 project_converter20;
/* 106 */   private scala.Function1 project_udf20;
/* 107 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF21;
/* 108 */   private scala.Function1 project_catalystConverter21;
/* 109 */   private scala.Function1 project_converter21;
/* 110 */   private scala.Function1 project_udf21;
/* 111 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF22;
/* 112 */   private scala.Function1 project_catalystConverter22;
/* 113 */   private scala.Function1 project_converter22;
/* 114 */   private scala.Function1 project_udf22;
/* 115 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF23;
/* 116 */   private scala.Function1 project_catalystConverter23;
/* 117 */   private scala.Function1 project_converter23;
/* 118 */   private scala.Function1 project_udf23;
/* 119 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF24;
/* 120 */   private scala.Function1 project_catalystConverter24;
/* 121 */   private scala.Function1 project_converter24;
/* 122 */   private scala.Function1 project_udf24;
/* 123 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF25;
/* 124 */   private scala.Function1 project_catalystConverter25;
/* 125 */   private scala.Function1 project_converter25;
/* 126 */   private scala.Function1 project_udf25;
/* 127 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF26;
/* 128 */   private scala.Function1 project_catalystConverter26;
/* 129 */   private scala.Function1 project_converter26;
/* 130 */   private scala.Function1 project_udf26;
/* 131 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF27;
/* 132 */   private scala.Function1 project_catalystConverter27;
/* 133 */   private scala.Function1 project_converter27;
/* 134 */   private scala.Function1 project_udf27;
/* 135 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF28;
/* 136 */   private scala.Function1 project_catalystConverter28;
/* 137 */   private scala.Function1 project_converter28;
/* 138 */   private scala.Function1 project_udf28;
/* 139 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF29;
/* 140 */   private scala.Function1 project_catalystConverter29;
/* 141 */   private scala.Function1 project_converter29;
/* 142 */   private scala.Function1 project_udf29;
/* 143 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF30;
/* 144 */   private scala.Function1 project_catalystConverter30;
/* 145 */   private scala.Function1 project_converter30;
/* 146 */   private scala.Function1 project_udf30;
/* 147 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF31;
/* 148 */   private scala.Function1 project_catalystConverter31;
/* 149 */   private scala.Function1 project_converter31;
/* 150 */   private scala.Function1 project_udf31;
/* 151 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF32;
/* 152 */   private scala.Function1 project_catalystConverter32;
/* 153 */   private scala.Function1 project_converter32;
/* 154 */   private scala.Function1 project_udf32;
/* 155 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF33;
/* 156 */   private scala.Function1 project_catalystConverter33;
/* 157 */   private scala.Function1 project_converter33;
/* 158 */   private scala.Function1 project_udf33;
/* 159 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF34;
/* 160 */   private scala.Function1 project_catalystConverter34;
/* 161 */   private scala.Function1 project_converter34;
/* 162 */   private scala.Function1 project_udf34;
/* 163 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF35;
/* 164 */   private scala.Function1 project_catalystConverter35;
/* 165 */   private scala.Function1 project_converter35;
/* 166 */   private scala.Function1 project_udf35;
/* 167 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF36;
/* 168 */   private scala.Function1 project_catalystConverter36;
/* 169 */   private scala.Function1 project_converter36;
/* 170 */   private scala.Function1 project_udf36;
/* 171 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF37;
/* 172 */   private scala.Function1 project_catalystConverter37;
/* 173 */   private scala.Function1 project_converter37;
/* 174 */   private scala.Function1 project_udf37;
/* 175 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF38;
/* 176 */   private scala.Function1 project_catalystConverter38;
/* 177 */   private scala.Function1 project_converter38;
/* 178 */   private scala.Function1 project_udf38;
/* 179 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF39;
/* 180 */   private scala.Function1 project_catalystConverter39;
/* 181 */   private scala.Function1 project_converter39;
/* 182 */   private scala.Function1 project_udf39;
/* 183 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF40;
/* 184 */   private scala.Function1 project_catalystConverter40;
/* 185 */   private scala.Function1 project_converter40;
/* 186 */   private scala.Function1 project_udf40;
/* 187 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF41;
/* 188 */   private scala.Function1 project_catalystConverter41;
/* 189 */   private scala.Function1 project_converter41;
/* 190 */   private scala.Function1 project_udf41;
/* 191 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF42;
/* 192 */   private scala.Function1 project_catalystConverter42;
/* 193 */   private scala.Function1 project_converter42;
/* 194 */   private scala.Function1 project_udf42;
/* 195 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF43;
/* 196 */   private scala.Function1 project_catalystConverter43;
/* 197 */   private scala.Function1 project_converter43;
/* 198 */   private scala.Function1 project_udf43;
/* 199 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF44;
/* 200 */   private scala.Function1 project_catalystConverter44;
/* 201 */   private scala.Function1 project_converter44;
/* 202 */   private scala.Function1 project_udf44;
/* 203 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF45;
/* 204 */   private scala.Function1 project_catalystConverter45;
/* 205 */   private scala.Function1 project_converter45;
/* 206 */   private scala.Function1 project_udf45;
/* 207 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF46;
/* 208 */   private scala.Function1 project_catalystConverter46;
/* 209 */   private scala.Function1 project_converter46;
/* 210 */   private scala.Function1 project_udf46;
/* 211 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF47;
/* 212 */   private scala.Function1 project_catalystConverter47;
/* 213 */   private scala.Function1 project_converter47;
/* 214 */   private scala.Function1 project_udf47;
/* 215 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF48;
/* 216 */   private scala.Function1 project_catalystConverter48;
/* 217 */   private scala.Function1 project_converter48;
/* 218 */   private scala.Function1 project_udf48;
/* 219 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF49;
/* 220 */   private scala.Function1 project_catalystConverter49;
/* 221 */   private scala.Function1 project_converter49;
/* 222 */   private scala.Function1 project_udf49;
/* 223 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF50;
/* 224 */   private scala.Function1 project_catalystConverter50;
/* 225 */   private scala.Function1 project_converter50;
/* 226 */   private scala.Function1 project_udf50;
/* 227 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF51;
/* 228 */   private scala.Function1 project_catalystConverter51;
/* 229 */   private scala.Function1 project_converter51;
/* 230 */   private scala.Function1 project_udf51;
/* 231 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF52;
/* 232 */   private scala.Function1 project_catalystConverter52;
/* 233 */   private scala.Function1 project_converter52;
/* 234 */   private scala.Function1 project_udf52;
/* 235 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF53;
/* 236 */   private scala.Function1 project_catalystConverter53;
/* 237 */   private scala.Function1 project_converter53;
/* 238 */   private scala.Function1 project_udf53;
/* 239 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF54;
/* 240 */   private scala.Function1 project_catalystConverter54;
/* 241 */   private scala.Function1 project_converter54;
/* 242 */   private scala.Function1 project_udf54;
/* 243 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF55;
/* 244 */   private scala.Function1 project_catalystConverter55;
/* 245 */   private scala.Function1 project_converter55;
/* 246 */   private scala.Function1 project_udf55;
/* 247 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF56;
/* 248 */   private scala.Function1 project_catalystConverter56;
/* 249 */   private scala.Function1 project_converter56;
/* 250 */   private scala.Function1 project_udf56;
/* 251 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF57;
/* 252 */   private scala.Function1 project_catalystConverter57;
/* 253 */   private scala.Function1 project_converter57;
/* 254 */   private scala.Function1 project_udf57;
/* 255 */   private Object[] project_values1;
/* 256 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF58;
/* 257 */   private scala.Function1 project_catalystConverter58;
/* 258 */   private scala.Function1 project_converter58;
/* 259 */   private scala.Function1 project_udf58;
/* 260 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF59;
/* 261 */   private scala.Function1 project_catalystConverter59;
/* 262 */   private scala.Function1 project_converter59;
/* 263 */   private scala.Function1 project_udf59;
/* 264 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF60;
/* 265 */   private scala.Function1 project_catalystConverter60;
/* 266 */   private scala.Function1 project_converter60;
/* 267 */   private scala.Function1 project_udf60;
/* 268 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF61;
/* 269 */   private scala.Function1 project_catalystConverter61;
/* 270 */   private scala.Function1 project_converter61;
/* 271 */   private scala.Function1 project_udf61;
/* 272 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF62;
/* 273 */   private scala.Function1 project_catalystConverter62;
/* 274 */   private scala.Function1 project_converter62;
/* 275 */   private scala.Function1 project_udf62;
/* 276 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF63;
/* 277 */   private scala.Function1 project_catalystConverter63;
/* 278 */   private scala.Function1 project_converter63;
/* 279 */   private scala.Function1 project_udf63;
/* 280 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF64;
/* 281 */   private scala.Function1 project_catalystConverter64;
/* 282 */   private scala.Function1 project_converter64;
/* 283 */   private scala.Function1 project_udf64;
/* 284 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF65;
/* 285 */   private scala.Function1 project_catalystConverter65;
/* 286 */   private scala.Function1 project_converter65;
/* 287 */   private scala.Function1 project_udf65;
/* 288 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF66;
/* 289 */   private scala.Function1 project_catalystConverter66;
/* 290 */   private scala.Function1 project_converter66;
/* 291 */   private scala.Function1 project_udf66;
/* 292 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF67;
/* 293 */   private scala.Function1 project_catalystConverter67;
/* 294 */   private scala.Function1 project_converter67;
/* 295 */   private scala.Function1 project_udf67;
/* 296 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF68;
/* 297 */   private scala.Function1 project_catalystConverter68;
/* 298 */   private scala.Function1 project_converter68;
/* 299 */   private scala.Function1 project_udf68;
/* 300 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF69;
/* 301 */   private scala.Function1 project_catalystConverter69;
/* 302 */   private scala.Function1 project_converter69;
/* 303 */   private scala.Function1 project_udf69;
/* 304 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF70;
/* 305 */   private scala.Function1 project_catalystConverter70;
/* 306 */   private scala.Function1 project_converter70;
/* 307 */   private scala.Function1 project_udf70;
/* 308 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF71;
/* 309 */   private scala.Function1 project_catalystConverter71;
/* 310 */   private scala.Function1 project_converter71;
/* 311 */   private scala.Function1 project_udf71;
/* 312 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF72;
/* 313 */   private scala.Function1 project_catalystConverter72;
/* 314 */   private scala.Function1 project_converter72;
/* 315 */   private scala.Function1 project_udf72;
/* 316 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF73;
/* 317 */   private scala.Function1 project_catalystConverter73;
/* 318 */   private scala.Function1 project_converter73;
/* 319 */   private scala.Function1 project_udf73;
/* 320 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF74;
/* 321 */   private scala.Function1 project_catalystConverter74;
/* 322 */   private scala.Function1 project_converter74;
/* 323 */   private scala.Function1 project_udf74;
/* 324 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF75;
/* 325 */   private scala.Function1 project_catalystConverter75;
/* 326 */   private scala.Function1 project_converter75;
/* 327 */   private scala.Function1 project_udf75;
/* 328 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF76;
/* 329 */   private scala.Function1 project_catalystConverter76;
/* 330 */   private scala.Function1 project_converter76;
/* 331 */   private scala.Function1 project_udf76;
/* 332 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF77;
/* 333 */   private scala.Function1 project_catalystConverter77;
/* 334 */   private scala.Function1 project_converter77;
/* 335 */   private scala.Function1 project_udf77;
/* 336 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF78;
/* 337 */   private scala.Function1 project_catalystConverter78;
/* 338 */   private scala.Function1 project_converter78;
/* 339 */   private scala.Function1 project_udf78;
/* 340 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF79;
/* 341 */   private scala.Function1 project_catalystConverter79;
/* 342 */   private scala.Function1 project_converter79;
/* 343 */   private scala.Function1 project_udf79;
/* 344 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF80;
/* 345 */   private scala.Function1 project_catalystConverter80;
/* 346 */   private scala.Function1 project_converter80;
/* 347 */   private scala.Function1 project_udf80;
/* 348 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF81;
/* 349 */   private scala.Function1 project_catalystConverter81;
/* 350 */   private scala.Function1 project_converter81;
/* 351 */   private scala.Function1 project_udf81;
/* 352 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF82;
/* 353 */   private scala.Function1 project_catalystConverter82;
/* 354 */   private scala.Function1 project_converter82;
/* 355 */   private scala.Function1 project_udf82;
/* 356 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF83;
/* 357 */   private scala.Function1 project_catalystConverter83;
/* 358 */   private scala.Function1 project_converter83;
/* 359 */   private scala.Function1 project_udf83;
/* 360 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF84;
/* 361 */   private scala.Function1 project_catalystConverter84;
/* 362 */   private scala.Function1 project_converter84;
/* 363 */   private scala.Function1 project_udf84;
/* 364 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF85;
/* 365 */   private scala.Function1 project_catalystConverter85;
/* 366 */   private scala.Function1 project_converter85;
/* 367 */   private scala.Function1 project_udf85;
/* 368 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF86;
/* 369 */   private scala.Function1 project_catalystConverter86;
/* 370 */   private scala.Function1 project_converter86;
/* 371 */   private scala.Function1 project_udf86;
/* 372 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF87;
/* 373 */   private scala.Function1 project_catalystConverter87;
/* 374 */   private scala.Function1 project_converter87;
/* 375 */   private scala.Function1 project_udf87;
/* 376 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF88;
/* 377 */   private scala.Function1 project_catalystConverter88;
/* 378 */   private scala.Function1 project_converter88;
/* 379 */   private scala.Function1 project_udf88;
/* 380 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF89;
/* 381 */   private scala.Function1 project_catalystConverter89;
/* 382 */   private scala.Function1 project_converter89;
/* 383 */   private scala.Function1 project_udf89;
/* 384 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF90;
/* 385 */   private scala.Function1 project_catalystConverter90;
/* 386 */   private scala.Function1 project_converter90;
/* 387 */   private scala.Function1 project_udf90;
/* 388 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF91;
/* 389 */   private scala.Function1 project_catalystConverter91;
/* 390 */   private scala.Function1 project_converter91;
/* 391 */   private scala.Function1 project_udf91;
/* 392 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF92;
/* 393 */   private scala.Function1 project_catalystConverter92;
/* 394 */   private scala.Function1 project_converter92;
/* 395 */   private scala.Function1 project_udf92;
/* 396 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF93;
/* 397 */   private scala.Function1 project_catalystConverter93;
/* 398 */   private scala.Function1 project_converter93;
/* 399 */   private scala.Function1 project_udf93;
/* 400 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF94;
/* 401 */   private scala.Function1 project_catalystConverter94;
/* 402 */   private scala.Function1 project_converter94;
/* 403 */   private scala.Function1 project_udf94;
/* 404 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF95;
/* 405 */   private scala.Function1 project_catalystConverter95;
/* 406 */   private scala.Function1 project_converter95;
/* 407 */   private scala.Function1 project_udf95;
/* 408 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF96;
/* 409 */   private scala.Function1 project_catalystConverter96;
/* 410 */   private scala.Function1 project_converter96;
/* 411 */   private scala.Function1 project_udf96;
/* 412 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF97;
/* 413 */   private scala.Function1 project_catalystConverter97;
/* 414 */   private scala.Function1 project_converter97;
/* 415 */   private scala.Function1 project_udf97;
/* 416 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF98;
/* 417 */   private scala.Function1 project_catalystConverter98;
/* 418 */   private scala.Function1 project_converter98;
/* 419 */   private scala.Function1 project_udf98;
/* 420 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF99;
/* 421 */   private scala.Function1 project_catalystConverter99;
/* 422 */   private scala.Function1 project_converter99;
/* 423 */   private scala.Function1 project_udf99;
/* 424 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF100;
/* 425 */   private scala.Function1 project_catalystConverter100;
/* 426 */   private scala.Function1 project_converter100;
/* 427 */   private scala.Function1 project_udf100;
/* 428 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF101;
/* 429 */   private scala.Function1 project_catalystConverter101;
/* 430 */   private scala.Function1 project_converter101;
/* 431 */   private scala.Function1 project_udf101;
/* 432 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF102;
/* 433 */   private scala.Function1 project_catalystConverter102;
/* 434 */   private scala.Function1 project_converter102;
/* 435 */   private scala.Function1 project_udf102;
/* 436 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF103;
/* 437 */   private scala.Function1 project_catalystConverter103;
/* 438 */   private scala.Function1 project_converter103;
/* 439 */   private scala.Function1 project_udf103;
/* 440 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF104;
/* 441 */   private scala.Function1 project_catalystConverter104;
/* 442 */   private scala.Function1 project_converter104;
/* 443 */   private scala.Function1 project_udf104;
/* 444 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF105;
/* 445 */   private scala.Function1 project_catalystConverter105;
/* 446 */   private scala.Function1 project_converter105;
/* 447 */   private scala.Function1 project_udf105;
/* 448 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF106;
/* 449 */   private scala.Function1 project_catalystConverter106;
/* 450 */   private scala.Function1 project_converter106;
/* 451 */   private scala.Function1 project_udf106;
/* 452 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF107;
/* 453 */   private scala.Function1 project_catalystConverter107;
/* 454 */   private scala.Function1 project_converter107;
/* 455 */   private scala.Function1 project_udf107;
/* 456 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF108;
/* 457 */   private scala.Function1 project_catalystConverter108;
/* 458 */   private scala.Function1 project_converter108;
/* 459 */   private scala.Function1 project_udf108;
/* 460 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF109;
/* 461 */   private scala.Function1 project_catalystConverter109;
/* 462 */   private scala.Function1 project_converter109;
/* 463 */   private scala.Function1 project_udf109;
/* 464 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF110;
/* 465 */   private scala.Function1 project_catalystConverter110;
/* 466 */   private scala.Function1 project_converter110;
/* 467 */   private scala.Function1 project_udf110;
/* 468 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF111;
/* 469 */   private scala.Function1 project_catalystConverter111;
/* 470 */   private scala.Function1 project_converter111;
/* 471 */   private scala.Function1 project_udf111;
/* 472 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF112;
/* 473 */   private scala.Function1 project_catalystConverter112;
/* 474 */   private scala.Function1 project_converter112;
/* 475 */   private scala.Function1 project_udf112;
/* 476 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF113;
/* 477 */   private scala.Function1 project_catalystConverter113;
/* 478 */   private scala.Function1 project_converter113;
/* 479 */   private scala.Function1 project_udf113;
/* 480 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF114;
/* 481 */   private scala.Function1 project_catalystConverter114;
/* 482 */   private scala.Function1 project_converter114;
/* 483 */   private scala.Function1 project_udf114;
/* 484 */   private Object[] project_values2;
/* 485 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF115;
/* 486 */   private scala.Function1 project_catalystConverter115;
/* 487 */   private scala.Function1 project_converter115;
/* 488 */   private scala.Function1 project_udf115;
/* 489 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF116;
/* 490 */   private scala.Function1 project_catalystConverter116;
/* 491 */   private scala.Function1 project_converter116;
/* 492 */   private scala.Function1 project_udf116;
/* 493 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF117;
/* 494 */   private scala.Function1 project_catalystConverter117;
/* 495 */   private scala.Function1 project_converter117;
/* 496 */   private scala.Function1 project_udf117;
/* 497 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF118;
/* 498 */   private scala.Function1 project_catalystConverter118;
/* 499 */   private scala.Function1 project_converter118;
/* 500 */   private scala.Function1 project_udf118;
/* 501 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF119;
/* 502 */   private scala.Function1 project_catalystConverter119;
/* 503 */   private scala.Function1 project_converter119;
/* 504 */   private scala.Function1 project_udf119;
/* 505 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF120;
/* 506 */   private scala.Function1 project_catalystConverter120;
/* 507 */   private scala.Function1 project_converter120;
/* 508 */   private scala.Function1 project_udf120;
/* 509 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF121;
/* 510 */   private scala.Function1 project_catalystConverter121;
/* 511 */   private scala.Function1 project_converter121;
/* 512 */   private scala.Function1 project_udf121;
/* 513 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF122;
/* 514 */   private scala.Function1 project_catalystConverter122;
/* 515 */   private scala.Function1 project_converter122;
/* 516 */   private scala.Function1 project_udf122;
/* 517 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF123;
/* 518 */   private scala.Function1 project_catalystConverter123;
/* 519 */   private scala.Function1 project_converter123;
/* 520 */   private scala.Function1 project_udf123;
/* 521 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF124;
/* 522 */   private scala.Function1 project_catalystConverter124;
/* 523 */   private scala.Function1 project_converter124;
/* 524 */   private scala.Function1 project_udf124;
/* 525 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF125;
/* 526 */   private scala.Function1 project_catalystConverter125;
/* 527 */   private scala.Function1 project_converter125;
/* 528 */   private scala.Function1 project_udf125;
/* 529 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF126;
/* 530 */   private scala.Function1 project_catalystConverter126;
/* 531 */   private scala.Function1 project_converter126;
/* 532 */   private scala.Function1 project_udf126;
/* 533 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF127;
/* 534 */   private scala.Function1 project_catalystConverter127;
/* 535 */   private scala.Function1 project_converter127;
/* 536 */   private scala.Function1 project_udf127;
/* 537 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF128;
/* 538 */   private scala.Function1 project_catalystConverter128;
/* 539 */   private scala.Function1 project_converter128;
/* 540 */   private scala.Function1 project_udf128;
/* 541 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF129;
/* 542 */   private scala.Function1 project_catalystConverter129;
/* 543 */   private scala.Function1 project_converter129;
/* 544 */   private scala.Function1 project_udf129;
/* 545 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF130;
/* 546 */   private scala.Function1 project_catalystConverter130;
/* 547 */   private scala.Function1 project_converter130;
/* 548 */   private scala.Function1 project_udf130;
/* 549 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF131;
/* 550 */   private scala.Function1 project_catalystConverter131;
/* 551 */   private scala.Function1 project_converter131;
/* 552 */   private scala.Function1 project_udf131;
/* 553 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF132;
/* 554 */   private scala.Function1 project_catalystConverter132;
/* 555 */   private scala.Function1 project_converter132;
/* 556 */   private scala.Function1 project_udf132;
/* 557 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF133;
/* 558 */   private scala.Function1 project_catalystConverter133;
/* 559 */   private scala.Function1 project_converter133;
/* 560 */   private scala.Function1 project_udf133;
/* 561 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF134;
/* 562 */   private scala.Function1 project_catalystConverter134;
/* 563 */   private scala.Function1 project_converter134;
/* 564 */   private scala.Function1 project_udf134;
/* 565 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF135;
/* 566 */   private scala.Function1 project_catalystConverter135;
/* 567 */   private scala.Function1 project_converter135;
/* 568 */   private scala.Function1 project_udf135;
/* 569 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF136;
/* 570 */   private scala.Function1 project_catalystConverter136;
/* 571 */   private scala.Function1 project_converter136;
/* 572 */   private scala.Function1 project_udf136;
/* 573 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF137;
/* 574 */   private scala.Function1 project_catalystConverter137;
/* 575 */   private scala.Function1 project_converter137;
/* 576 */   private scala.Function1 project_udf137;
/* 577 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF138;
/* 578 */   private scala.Function1 project_catalystConverter138;
/* 579 */   private scala.Function1 project_converter138;
/* 580 */   private scala.Function1 project_udf138;
/* 581 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF139;
/* 582 */   private scala.Function1 project_catalystConverter139;
/* 583 */   private scala.Function1 project_converter139;
/* 584 */   private scala.Function1 project_udf139;
/* 585 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF140;
/* 586 */   private scala.Function1 project_catalystConverter140;
/* 587 */   private scala.Function1 project_converter140;
/* 588 */   private scala.Function1 project_udf140;
/* 589 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF141;
/* 590 */   private scala.Function1 project_catalystConverter141;
/* 591 */   private scala.Function1 project_converter141;
/* 592 */   private scala.Function1 project_udf141;
/* 593 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF142;
/* 594 */   private scala.Function1 project_catalystConverter142;
/* 595 */   private scala.Function1 project_converter142;
/* 596 */   private scala.Function1 project_udf142;
/* 597 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF143;
/* 598 */   private scala.Function1 project_catalystConverter143;
/* 599 */   private scala.Function1 project_converter143;
/* 600 */   private scala.Function1 project_udf143;
/* 601 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF144;
/* 602 */   private scala.Function1 project_catalystConverter144;
/* 603 */   private scala.Function1 project_converter144;
/* 604 */   private scala.Function1 project_udf144;
/* 605 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF145;
/* 606 */   private scala.Function1 project_catalystConverter145;
/* 607 */   private scala.Function1 project_converter145;
/* 608 */   private scala.Function1 project_udf145;
/* 609 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF146;
/* 610 */   private scala.Function1 project_catalystConverter146;
/* 611 */   private scala.Function1 project_converter146;
/* 612 */   private scala.Function1 project_udf146;
/* 613 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF147;
/* 614 */   private scala.Function1 project_catalystConverter147;
/* 615 */   private scala.Function1 project_converter147;
/* 616 */   private scala.Function1 project_udf147;
/* 617 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF148;
/* 618 */   private scala.Function1 project_catalystConverter148;
/* 619 */   private scala.Function1 project_converter148;
/* 620 */   private scala.Function1 project_udf148;
/* 621 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF149;
/* 622 */   private scala.Function1 project_catalystConverter149;
/* 623 */   private scala.Function1 project_converter149;
/* 624 */   private scala.Function1 project_udf149;
/* 625 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF150;
/* 626 */   private scala.Function1 project_catalystConverter150;
/* 627 */   private scala.Function1 project_converter150;
/* 628 */   private scala.Function1 project_udf150;
/* 629 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF151;
/* 630 */   private scala.Function1 project_catalystConverter151;
/* 631 */   private scala.Function1 project_converter151;
/* 632 */   private scala.Function1 project_udf151;
/* 633 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF152;
/* 634 */   private scala.Function1 project_catalystConverter152;
/* 635 */   private scala.Function1 project_converter152;
/* 636 */   private scala.Function1 project_udf152;
/* 637 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF153;
/* 638 */   private scala.Function1 project_catalystConverter153;
/* 639 */   private scala.Function1 project_converter153;
/* 640 */   private scala.Function1 project_udf153;
/* 641 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF154;
/* 642 */   private scala.Function1 project_catalystConverter154;
/* 643 */   private scala.Function1 project_converter154;
/* 644 */   private scala.Function1 project_udf154;
/* 645 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF155;
/* 646 */   private scala.Function1 project_catalystConverter155;
/* 647 */   private scala.Function1 project_converter155;
/* 648 */   private scala.Function1 project_udf155;
/* 649 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF156;
/* 650 */   private scala.Function1 project_catalystConverter156;
/* 651 */   private scala.Function1 project_converter156;
/* 652 */   private scala.Function1 project_udf156;
/* 653 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF157;
/* 654 */   private scala.Function1 project_catalystConverter157;
/* 655 */   private scala.Function1 project_converter157;
/* 656 */   private scala.Function1 project_udf157;
/* 657 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF158;
/* 658 */   private scala.Function1 project_catalystConverter158;
/* 659 */   private scala.Function1 project_converter158;
/* 660 */   private scala.Function1 project_udf158;
/* 661 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF159;
/* 662 */   private scala.Function1 project_catalystConverter159;
/* 663 */   private scala.Function1 project_converter159;
/* 664 */   private scala.Function1 project_udf159;
/* 665 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF160;
/* 666 */   private scala.Function1 project_catalystConverter160;
/* 667 */   private scala.Function1 project_converter160;
/* 668 */   private scala.Function1 project_udf160;
/* 669 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF161;
/* 670 */   private scala.Function1 project_catalystConverter161;
/* 671 */   private scala.Function1 project_converter161;
/* 672 */   private scala.Function1 project_udf161;
/* 673 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF162;
/* 674 */   private scala.Function1 project_catalystConverter162;
/* 675 */   private scala.Function1 project_converter162;
/* 676 */   private scala.Function1 project_udf162;
/* 677 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF163;
/* 678 */   private scala.Function1 project_catalystConverter163;
/* 679 */   private scala.Function1 project_converter163;
/* 680 */   private scala.Function1 project_udf163;
/* 681 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF164;
/* 682 */   private scala.Function1 project_catalystConverter164;
/* 683 */   private scala.Function1 project_converter164;
/* 684 */   private scala.Function1 project_udf164;
/* 685 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF165;
/* 686 */   private scala.Function1 project_catalystConverter165;
/* 687 */   private scala.Function1 project_converter165;
/* 688 */   private scala.Function1 project_udf165;
/* 689 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF166;
/* 690 */   private scala.Function1 project_catalystConverter166;
/* 691 */   private scala.Function1 project_converter166;
/* 692 */   private scala.Function1 project_udf166;
/* 693 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF167;
/* 694 */   private scala.Function1 project_catalystConverter167;
/* 695 */   private scala.Function1 project_converter167;
/* 696 */   private scala.Function1 project_udf167;
/* 697 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF168;
/* 698 */   private scala.Function1 project_catalystConverter168;
/* 699 */   private scala.Function1 project_converter168;
/* 700 */   private scala.Function1 project_udf168;
/* 701 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF169;
/* 702 */   private scala.Function1 project_catalystConverter169;
/* 703 */   private scala.Function1 project_converter169;
/* 704 */   private scala.Function1 project_udf169;
/* 705 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF170;
/* 706 */   private scala.Function1 project_catalystConverter170;
/* 707 */   private scala.Function1 project_converter170;
/* 708 */   private scala.Function1 project_udf170;
/* 709 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF171;
/* 710 */   private scala.Function1 project_catalystConverter171;
/* 711 */   private scala.Function1 project_converter171;
/* 712 */   private scala.Function1 project_udf171;
/* 713 */   private Object[] project_values3;
/* 714 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF172;
/* 715 */   private scala.Function1 project_catalystConverter172;
/* 716 */   private scala.Function1 project_converter172;
/* 717 */   private scala.Function1 project_udf172;
/* 718 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF173;
/* 719 */   private scala.Function1 project_catalystConverter173;
/* 720 */   private scala.Function1 project_converter173;
/* 721 */   private scala.Function1 project_udf173;
/* 722 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF174;
/* 723 */   private scala.Function1 project_catalystConverter174;
/* 724 */   private scala.Function1 project_converter174;
/* 725 */   private scala.Function1 project_udf174;
/* 726 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF175;
/* 727 */   private scala.Function1 project_catalystConverter175;
/* 728 */   private scala.Function1 project_converter175;
/* 729 */   private scala.Function1 project_udf175;
/* 730 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF176;
/* 731 */   private scala.Function1 project_catalystConverter176;
/* 732 */   private scala.Function1 project_converter176;
/* 733 */   private scala.Function1 project_udf176;
/* 734 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF177;
/* 735 */   private scala.Function1 project_catalystConverter177;
/* 736 */   private scala.Function1 project_converter177;
/* 737 */   private scala.Function1 project_udf177;
/* 738 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF178;
/* 739 */   private scala.Function1 project_catalystConverter178;
/* 740 */   private scala.Function1 project_converter178;
/* 741 */   private scala.Function1 project_udf178;
/* 742 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF179;
/* 743 */   private scala.Function1 project_catalystConverter179;
/* 744 */   private scala.Function1 project_converter179;
/* 745 */   private scala.Function1 project_udf179;
/* 746 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF180;
/* 747 */   private scala.Function1 project_catalystConverter180;
/* 748 */   private scala.Function1 project_converter180;
/* 749 */   private scala.Function1 project_udf180;
/* 750 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF181;
/* 751 */   private scala.Function1 project_catalystConverter181;
/* 752 */   private scala.Function1 project_converter181;
/* 753 */   private scala.Function1 project_udf181;
/* 754 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF182;
/* 755 */   private scala.Function1 project_catalystConverter182;
/* 756 */   private scala.Function1 project_converter182;
/* 757 */   private scala.Function1 project_udf182;
/* 758 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF183;
/* 759 */   private scala.Function1 project_catalystConverter183;
/* 760 */   private scala.Function1 project_converter183;
/* 761 */   private scala.Function1 project_udf183;
/* 762 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF184;
/* 763 */   private scala.Function1 project_catalystConverter184;
/* 764 */   private scala.Function1 project_converter184;
/* 765 */   private scala.Function1 project_udf184;
/* 766 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF185;
/* 767 */   private scala.Function1 project_catalystConverter185;
/* 768 */   private scala.Function1 project_converter185;
/* 769 */   private scala.Function1 project_udf185;
/* 770 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF186;
/* 771 */   private scala.Function1 project_catalystConverter186;
/* 772 */   private scala.Function1 project_converter186;
/* 773 */   private scala.Function1 project_udf186;
/* 774 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF187;
/* 775 */   private scala.Function1 project_catalystConverter187;
/* 776 */   private scala.Function1 project_converter187;
/* 777 */   private scala.Function1 project_udf187;
/* 778 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF188;
/* 779 */   private scala.Function1 project_catalystConverter188;
/* 780 */   private scala.Function1 project_converter188;
/* 781 */   private scala.Function1 project_udf188;
/* 782 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF189;
/* 783 */   private scala.Function1 project_catalystConverter189;
/* 784 */   private scala.Function1 project_converter189;
/* 785 */   private scala.Function1 project_udf189;
/* 786 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF190;
/* 787 */   private scala.Function1 project_catalystConverter190;
/* 788 */   private scala.Function1 project_converter190;
/* 789 */   private scala.Function1 project_udf190;
/* 790 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF191;
/* 791 */   private scala.Function1 project_catalystConverter191;
/* 792 */   private scala.Function1 project_converter191;
/* 793 */   private scala.Function1 project_udf191;
/* 794 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF192;
/* 795 */   private scala.Function1 project_catalystConverter192;
/* 796 */   private scala.Function1 project_converter192;
/* 797 */   private scala.Function1 project_udf192;
/* 798 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF193;
/* 799 */   private scala.Function1 project_catalystConverter193;
/* 800 */   private scala.Function1 project_converter193;
/* 801 */   private scala.Function1 project_udf193;
/* 802 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF194;
/* 803 */   private scala.Function1 project_catalystConverter194;
/* 804 */   private scala.Function1 project_converter194;
/* 805 */   private scala.Function1 project_udf194;
/* 806 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF195;
/* 807 */   private scala.Function1 project_catalystConverter195;
/* 808 */   private scala.Function1 project_converter195;
/* 809 */   private scala.Function1 project_udf195;
/* 810 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF196;
/* 811 */   private scala.Function1 project_catalystConverter196;
/* 812 */   private scala.Function1 project_converter196;
/* 813 */   private scala.Function1 project_udf196;
/* 814 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF197;
/* 815 */   private scala.Function1 project_catalystConverter197;
/* 816 */   private scala.Function1 project_converter197;
/* 817 */   private scala.Function1 project_udf197;
/* 818 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF198;
/* 819 */   private scala.Function1 project_catalystConverter198;
/* 820 */   private scala.Function1 project_converter198;
/* 821 */   private scala.Function1 project_udf198;
/* 822 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF199;
/* 823 */   private scala.Function1 project_catalystConverter199;
/* 824 */   private scala.Function1 project_converter199;
/* 825 */   private scala.Function1 project_udf199;
/* 826 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF200;
/* 827 */   private scala.Function1 project_catalystConverter200;
/* 828 */   private scala.Function1 project_converter200;
/* 829 */   private scala.Function1 project_udf200;
/* 830 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF201;
/* 831 */   private scala.Function1 project_catalystConverter201;
/* 832 */   private scala.Function1 project_converter201;
/* 833 */   private scala.Function1 project_udf201;
/* 834 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF202;
/* 835 */   private scala.Function1 project_catalystConverter202;
/* 836 */   private scala.Function1 project_converter202;
/* 837 */   private scala.Function1 project_udf202;
/* 838 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF203;
/* 839 */   private scala.Function1 project_catalystConverter203;
/* 840 */   private scala.Function1 project_converter203;
/* 841 */   private scala.Function1 project_udf203;
/* 842 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF204;
/* 843 */   private scala.Function1 project_catalystConverter204;
/* 844 */   private scala.Function1 project_converter204;
/* 845 */   private scala.Function1 project_udf204;
/* 846 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF205;
/* 847 */   private scala.Function1 project_catalystConverter205;
/* 848 */   private scala.Function1 project_converter205;
/* 849 */   private scala.Function1 project_udf205;
/* 850 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF206;
/* 851 */   private scala.Function1 project_catalystConverter206;
/* 852 */   private scala.Function1 project_converter206;
/* 853 */   private scala.Function1 project_udf206;
/* 854 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF207;
/* 855 */   private scala.Function1 project_catalystConverter207;
/* 856 */   private scala.Function1 project_converter207;
/* 857 */   private scala.Function1 project_udf207;
/* 858 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF208;
/* 859 */   private scala.Function1 project_catalystConverter208;
/* 860 */   private scala.Function1 project_converter208;
/* 861 */   private scala.Function1 project_udf208;
/* 862 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF209;
/* 863 */   private scala.Function1 project_catalystConverter209;
/* 864 */   private scala.Function1 project_converter209;
/* 865 */   private scala.Function1 project_udf209;
/* 866 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF210;
/* 867 */   private scala.Function1 project_catalystConverter210;
/* 868 */   private scala.Function1 project_converter210;
/* 869 */   private scala.Function1 project_udf210;
/* 870 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF211;
/* 871 */   private scala.Function1 project_catalystConverter211;
/* 872 */   private scala.Function1 project_converter211;
/* 873 */   private scala.Function1 project_udf211;
/* 874 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF212;
/* 875 */   private scala.Function1 project_catalystConverter212;
/* 876 */   private scala.Function1 project_converter212;
/* 877 */   private scala.Function1 project_udf212;
/* 878 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF213;
/* 879 */   private scala.Function1 project_catalystConverter213;
/* 880 */   private scala.Function1 project_converter213;
/* 881 */   private scala.Function1 project_udf213;
/* 882 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF214;
/* 883 */   private scala.Function1 project_catalystConverter214;
/* 884 */   private scala.Function1 project_converter214;
/* 885 */   private scala.Function1 project_udf214;
/* 886 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF215;
/* 887 */   private scala.Function1 project_catalystConverter215;
/* 888 */   private scala.Function1 project_converter215;
/* 889 */   private scala.Function1 project_udf215;
/* 890 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF216;
/* 891 */   private scala.Function1 project_catalystConverter216;
/* 892 */   private scala.Function1 project_converter216;
/* 893 */   private scala.Function1 project_udf216;
/* 894 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF217;
/* 895 */   private scala.Function1 project_catalystConverter217;
/* 896 */   private scala.Function1 project_converter217;
/* 897 */   private scala.Function1 project_udf217;
/* 898 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF218;
/* 899 */   private scala.Function1 project_catalystConverter218;
/* 900 */   private scala.Function1 project_converter218;
/* 901 */   private scala.Function1 project_udf218;
/* 902 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF219;
/* 903 */   private scala.Function1 project_catalystConverter219;
/* 904 */   private scala.Function1 project_converter219;
/* 905 */   private scala.Function1 project_udf219;
/* 906 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF220;
/* 907 */   private scala.Function1 project_catalystConverter220;
/* 908 */   private scala.Function1 project_converter220;
/* 909 */   private scala.Function1 project_udf220;
/* 910 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF221;
/* 911 */   private scala.Function1 project_catalystConverter221;
/* 912 */   private scala.Function1 project_converter221;
/* 913 */   private scala.Function1 project_udf221;
/* 914 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF222;
/* 915 */   private scala.Function1 project_catalystConverter222;
/* 916 */   private scala.Function1 project_converter222;
/* 917 */   private scala.Function1 project_udf222;
/* 918 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF223;
/* 919 */   private scala.Function1 project_catalystConverter223;
/* 920 */   private scala.Function1 project_converter223;
/* 921 */   private scala.Function1 project_udf223;
/* 922 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF224;
/* 923 */   private scala.Function1 project_catalystConverter224;
/* 924 */   private scala.Function1 project_converter224;
/* 925 */   private scala.Function1 project_udf224;
/* 926 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF225;
/* 927 */   private scala.Function1 project_catalystConverter225;
/* 928 */   private scala.Function1 project_converter225;
/* 929 */   private scala.Function1 project_udf225;
/* 930 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF226;
/* 931 */   private scala.Function1 project_catalystConverter226;
/* 932 */   private scala.Function1 project_converter226;
/* 933 */   private scala.Function1 project_udf226;
/* 934 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF227;
/* 935 */   private scala.Function1 project_catalystConverter227;
/* 936 */   private scala.Function1 project_converter227;
/* 937 */   private scala.Function1 project_udf227;
/* 938 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF228;
/* 939 */   private scala.Function1 project_catalystConverter228;
/* 940 */   private scala.Function1 project_converter228;
/* 941 */   private scala.Function1 project_udf228;
/* 942 */   private Object[] project_values4;
/* 943 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF229;
/* 944 */   private scala.Function1 project_catalystConverter229;
/* 945 */   private scala.Function1 project_converter229;
/* 946 */   private scala.Function1 project_udf229;
/* 947 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF230;
/* 948 */   private scala.Function1 project_catalystConverter230;
/* 949 */   private scala.Function1 project_converter230;
/* 950 */   private scala.Function1 project_udf230;
/* 951 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF231;
/* 952 */   private scala.Function1 project_catalystConverter231;
/* 953 */   private scala.Function1 project_converter231;
/* 954 */   private scala.Function1 project_udf231;
/* 955 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF232;
/* 956 */   private scala.Function1 project_catalystConverter232;
/* 957 */   private scala.Function1 project_converter232;
/* 958 */   private scala.Function1 project_udf232;
/* 959 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF233;
/* 960 */   private scala.Function1 project_catalystConverter233;
/* 961 */   private scala.Function1 project_converter233;
/* 962 */   private scala.Function1 project_udf233;
/* 963 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF234;
/* 964 */   private scala.Function1 project_catalystConverter234;
/* 965 */   private scala.Function1 project_converter234;
/* 966 */   private scala.Function1 project_udf234;
/* 967 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF235;
/* 968 */   private scala.Function1 project_catalystConverter235;
/* 969 */   private scala.Function1 project_converter235;
/* 970 */   private scala.Function1 project_udf235;
/* 971 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF236;
/* 972 */   private scala.Function1 project_catalystConverter236;
/* 973 */   private scala.Function1 project_converter236;
/* 974 */   private scala.Function1 project_udf236;
/* 975 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF237;
/* 976 */   private scala.Function1 project_catalystConverter237;
/* 977 */   private scala.Function1 project_converter237;
/* 978 */   private scala.Function1 project_udf237;
/* 979 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF238;
/* 980 */   private scala.Function1 project_catalystConverter238;
/* 981 */   private scala.Function1 project_converter238;
/* 982 */   private scala.Function1 project_udf238;
/* 983 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF239;
/* 984 */   private scala.Function1 project_catalystConverter239;
/* 985 */   private scala.Function1 project_converter239;
/* 986 */   private scala.Function1 project_udf239;
/* 987 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF240;
/* 988 */   private scala.Function1 project_catalystConverter240;
/* 989 */   private scala.Function1 project_converter240;
/* 990 */   private scala.Function1 project_udf240;
/* 991 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF241;
/* 992 */   private scala.Function1 project_catalystConverter241;
/* 993 */   private scala.Function1 project_converter241;
/* 994 */   private scala.Function1 project_udf241;
/* 995 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF242;
/* 996 */   private scala.Function1 project_catalystConverter242;
/* 997 */   private scala.Function1 project_converter242;
/* 998 */   private scala.Function1 project_udf242;
/* 999 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF243;
/* 1000 */   private scala.Function1 project_catalystConverter243;
/* 1001 */   private scala.Function1 project_converter243;
/* 1002 */   private scala.Function1 project_udf243;
/* 1003 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF244;
/* 1004 */   private scala.Function1 project_catalystConverter244;
/* 1005 */   private scala.Function1 project_converter244;
/* 1006 */   private scala.Function1 project_udf244;
/* 1007 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF245;
/* 1008 */   private scala.Function1 project_catalystConverter245;
/* 1009 */   private scala.Function1 project_converter245;
/* 1010 */   private scala.Function1 project_udf245;
/* 1011 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF246;
/* 1012 */   private scala.Function1 project_catalystConverter246;
/* 1013 */   private scala.Function1 project_converter246;
/* 1014 */   private scala.Function1 project_udf246;
/* 1015 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF247;
/* 1016 */   private scala.Function1 project_catalystConverter247;
/* 1017 */   private scala.Function1 project_converter247;
/* 1018 */   private scala.Function1 project_udf247;
/* 1019 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF248;
/* 1020 */   private scala.Function1 project_catalystConverter248;
/* 1021 */   private scala.Function1 project_converter248;
/* 1022 */   private scala.Function1 project_udf248;
/* 1023 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF249;
/* 1024 */   private scala.Function1 project_catalystConverter249;
/* 1025 */   private scala.Function1 project_converter249;
/* 1026 */   private scala.Function1 project_udf249;
/* 1027 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF250;
/* 1028 */   private scala.Function1 project_catalystConverter250;
/* 1029 */   private scala.Function1 project_converter250;
/* 1030 */   private scala.Function1 project_udf250;
/* 1031 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF251;
/* 1032 */   private scala.Function1 project_catalystConverter251;
/* 1033 */   private scala.Function1 project_converter251;
/* 1034 */   private scala.Function1 project_udf251;
/* 1035 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF252;
/* 1036 */   private scala.Function1 project_catalystConverter252;
/* 1037 */   private scala.Function1 project_converter252;
/* 1038 */   private scala.Function1 project_udf252;
/* 1039 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF253;
/* 1040 */   private scala.Function1 project_catalystConverter253;
/* 1041 */   private scala.Function1 project_converter253;
/* 1042 */   private scala.Function1 project_udf253;
/* 1043 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF254;
/* 1044 */   private scala.Function1 project_catalystConverter254;
/* 1045 */   private scala.Function1 project_converter254;
/* 1046 */   private scala.Function1 project_udf254;
/* 1047 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF255;
/* 1048 */   private scala.Function1 project_catalystConverter255;
/* 1049 */   private scala.Function1 project_converter255;
/* 1050 */   private scala.Function1 project_udf255;
/* 1051 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF256;
/* 1052 */   private scala.Function1 project_catalystConverter256;
/* 1053 */   private scala.Function1 project_converter256;
/* 1054 */   private scala.Function1 project_udf256;
/* 1055 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF257;
/* 1056 */   private scala.Function1 project_catalystConverter257;
/* 1057 */   private scala.Function1 project_converter257;
/* 1058 */   private scala.Function1 project_udf257;
/* 1059 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF258;
/* 1060 */   private scala.Function1 project_catalystConverter258;
/* 1061 */   private scala.Function1 project_converter258;
/* 1062 */   private scala.Function1 project_udf258;
/* 1063 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF259;
/* 1064 */   private scala.Function1 project_catalystConverter259;
/* 1065 */   private scala.Function1 project_converter259;
/* 1066 */   private scala.Function1 project_udf259;
/* 1067 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF260;
/* 1068 */   private scala.Function1 project_catalystConverter260;
/* 1069 */   private scala.Function1 project_converter260;
/* 1070 */   private scala.Function1 project_udf260;
/* 1071 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF261;
/* 1072 */   private scala.Function1 project_catalystConverter261;
/* 1073 */   private scala.Function1 project_converter261;
/* 1074 */   private scala.Function1 project_udf261;
/* 1075 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF262;
/* 1076 */   private scala.Function1 project_catalystConverter262;
/* 1077 */   private scala.Function1 project_converter262;
/* 1078 */   private scala.Function1 project_udf262;
/* 1079 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF263;
/* 1080 */   private scala.Function1 project_catalystConverter263;
/* 1081 */   private scala.Function1 project_converter263;
/* 1082 */   private scala.Function1 project_udf263;
/* 1083 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF264;
/* 1084 */   private scala.Function1 project_catalystConverter264;
/* 1085 */   private scala.Function1 project_converter264;
/* 1086 */   private scala.Function1 project_udf264;
/* 1087 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF265;
/* 1088 */   private scala.Function1 project_catalystConverter265;
/* 1089 */   private scala.Function1 project_converter265;
/* 1090 */   private scala.Function1 project_udf265;
/* 1091 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF266;
/* 1092 */   private scala.Function1 project_catalystConverter266;
/* 1093 */   private scala.Function1 project_converter266;
/* 1094 */   private scala.Function1 project_udf266;
/* 1095 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF267;
/* 1096 */   private scala.Function1 project_catalystConverter267;
/* 1097 */   private scala.Function1 project_converter267;
/* 1098 */   private scala.Function1 project_udf267;
/* 1099 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF268;
/* 1100 */   private scala.Function1 project_catalystConverter268;
/* 1101 */   private scala.Function1 project_converter268;
/* 1102 */   private scala.Function1 project_udf268;
/* 1103 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF269;
/* 1104 */   private scala.Function1 project_catalystConverter269;
/* 1105 */   private scala.Function1 project_converter269;
/* 1106 */   private scala.Function1 project_udf269;
/* 1107 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF270;
/* 1108 */   private scala.Function1 project_catalystConverter270;
/* 1109 */   private scala.Function1 project_converter270;
/* 1110 */   private scala.Function1 project_udf270;
/* 1111 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF271;
/* 1112 */   private scala.Function1 project_catalystConverter271;
/* 1113 */   private scala.Function1 project_converter271;
/* 1114 */   private scala.Function1 project_udf271;
/* 1115 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF272;
/* 1116 */   private scala.Function1 project_catalystConverter272;
/* 1117 */   private scala.Function1 project_converter272;
/* 1118 */   private scala.Function1 project_udf272;
/* 1119 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF273;
/* 1120 */   private scala.Function1 project_catalystConverter273;
/* 1121 */   private scala.Function1 project_converter273;
/* 1122 */   private scala.Function1 project_udf273;
/* 1123 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF274;
/* 1124 */   private scala.Function1 project_catalystConverter274;
/* 1125 */   private scala.Function1 project_converter274;
/* 1126 */   private scala.Function1 project_udf274;
/* 1127 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF275;
/* 1128 */   private scala.Function1 project_catalystConverter275;
/* 1129 */   private scala.Function1 project_converter275;
/* 1130 */   private scala.Function1 project_udf275;
/* 1131 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF276;
/* 1132 */   private scala.Function1 project_catalystConverter276;
/* 1133 */   private scala.Function1 project_converter276;
/* 1134 */   private scala.Function1 project_udf276;
/* 1135 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF277;
/* 1136 */   private scala.Function1 project_catalystConverter277;
/* 1137 */   private scala.Function1 project_converter277;
/* 1138 */   private scala.Function1 project_udf277;
/* 1139 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF278;
/* 1140 */   private scala.Function1 project_catalystConverter278;
/* 1141 */   private scala.Function1 project_converter278;
/* 1142 */   private scala.Function1 project_udf278;
/* 1143 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF279;
/* 1144 */   private scala.Function1 project_catalystConverter279;
/* 1145 */   private scala.Function1 project_converter279;
/* 1146 */   private scala.Function1 project_udf279;
/* 1147 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF280;
/* 1148 */   private scala.Function1 project_catalystConverter280;
/* 1149 */   private scala.Function1 project_converter280;
/* 1150 */   private scala.Function1 project_udf280;
/* 1151 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF281;
/* 1152 */   private scala.Function1 project_catalystConverter281;
/* 1153 */   private scala.Function1 project_converter281;
/* 1154 */   private scala.Function1 project_udf281;
/* 1155 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF282;
/* 1156 */   private scala.Function1 project_catalystConverter282;
/* 1157 */   private scala.Function1 project_converter282;
/* 1158 */   private scala.Function1 project_udf282;
/* 1159 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF283;
/* 1160 */   private scala.Function1 project_catalystConverter283;
/* 1161 */   private scala.Function1 project_converter283;
/* 1162 */   private scala.Function1 project_udf283;
/* 1163 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF284;
/* 1164 */   private scala.Function1 project_catalystConverter284;
/* 1165 */   private scala.Function1 project_converter284;
/* 1166 */   private scala.Function1 project_udf284;
/* 1167 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF285;
/* 1168 */   private scala.Function1 project_catalystConverter285;
/* 1169 */   private scala.Function1 project_converter285;
/* 1170 */   private scala.Function1 project_udf285;
/* 1171 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF286;
/* 1172 */   private scala.Function1 project_catalystConverter286;
/* 1173 */   private scala.Function1 project_converter286;
/* 1174 */   private scala.Function1 project_udf286;
/* 1175 */   private Object[] project_values5;
/* 1176 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF287;
/* 1177 */   private scala.Function1 project_catalystConverter287;
/* 1178 */   private scala.Function1 project_converter287;
/* 1179 */   private scala.Function1 project_udf287;
/* 1180 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF288;
/* 1181 */   private scala.Function1 project_catalystConverter288;
/* 1182 */   private scala.Function1 project_converter288;
/* 1183 */   private scala.Function1 project_udf288;
/* 1184 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF289;
/* 1185 */   private scala.Function1 project_catalystConverter289;
/* 1186 */   private scala.Function1 project_converter289;
/* 1187 */   private scala.Function1 project_udf289;
/* 1188 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF290;
/* 1189 */   private scala.Function1 project_catalystConverter290;
/* 1190 */   private scala.Function1 project_converter290;
/* 1191 */   private scala.Function1 project_udf290;
/* 1192 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF291;
/* 1193 */   private scala.Function1 project_catalystConverter291;
/* 1194 */   private scala.Function1 project_converter291;
/* 1195 */   private scala.Function1 project_udf291;
/* 1196 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF292;
/* 1197 */   private scala.Function1 project_catalystConverter292;
/* 1198 */   private scala.Function1 project_converter292;
/* 1199 */   private scala.Function1 project_udf292;
/* 1200 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF293;
/* 1201 */   private scala.Function1 project_catalystConverter293;
/* 1202 */   private scala.Function1 project_converter293;
/* 1203 */   private scala.Function1 project_udf293;
/* 1204 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF294;
/* 1205 */   private scala.Function1 project_catalystConverter294;
/* 1206 */   private scala.Function1 project_converter294;
/* 1207 */   private scala.Function1 project_udf294;
/* 1208 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF295;
/* 1209 */   private scala.Function1 project_catalystConverter295;
/* 1210 */   private scala.Function1 project_converter295;
/* 1211 */   private scala.Function1 project_udf295;
/* 1212 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF296;
/* 1213 */   private scala.Function1 project_catalystConverter296;
/* 1214 */   private scala.Function1 project_converter296;
/* 1215 */   private scala.Function1 project_udf296;
/* 1216 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF297;
/* 1217 */   private scala.Function1 project_catalystConverter297;
/* 1218 */   private scala.Function1 project_converter297;
/* 1219 */   private scala.Function1 project_udf297;
/* 1220 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF298;
/* 1221 */   private scala.Function1 project_catalystConverter298;
/* 1222 */   private scala.Function1 project_converter298;
/* 1223 */   private scala.Function1 project_udf298;
/* 1224 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF299;
/* 1225 */   private scala.Function1 project_catalystConverter299;
/* 1226 */   private scala.Function1 project_converter299;
/* 1227 */   private scala.Function1 project_udf299;
/* 1228 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF300;
/* 1229 */   private scala.Function1 project_catalystConverter300;
/* 1230 */   private scala.Function1 project_converter300;
/* 1231 */   private scala.Function1 project_udf300;
/* 1232 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF301;
/* 1233 */   private scala.Function1 project_catalystConverter301;
/* 1234 */   private scala.Function1 project_converter301;
/* 1235 */   private scala.Function1 project_udf301;
/* 1236 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF302;
/* 1237 */   private scala.Function1 project_catalystConverter302;
/* 1238 */   private scala.Function1 project_converter302;
/* 1239 */   private scala.Function1 project_udf302;
/* 1240 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF303;
/* 1241 */   private scala.Function1 project_catalystConverter303;
/* 1242 */   private scala.Function1 project_converter303;
/* 1243 */   private scala.Function1 project_udf303;
/* 1244 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF304;
/* 1245 */   private scala.Function1 project_catalystConverter304;
/* 1246 */   private scala.Function1 project_converter304;
/* 1247 */   private scala.Function1 project_udf304;
/* 1248 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF305;
/* 1249 */   private scala.Function1 project_catalystConverter305;
/* 1250 */   private scala.Function1 project_converter305;
/* 1251 */   private scala.Function1 project_udf305;
/* 1252 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF306;
/* 1253 */   private scala.Function1 project_catalystConverter306;
/* 1254 */   private scala.Function1 project_converter306;
/* 1255 */   private scala.Function1 project_udf306;
/* 1256 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF307;
/* 1257 */   private scala.Function1 project_catalystConverter307;
/* 1258 */   private scala.Function1 project_converter307;
/* 1259 */   private scala.Function1 project_udf307;
/* 1260 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF308;
/* 1261 */   private scala.Function1 project_catalystConverter308;
/* 1262 */   private scala.Function1 project_converter308;
/* 1263 */   private scala.Function1 project_udf308;
/* 1264 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF309;
/* 1265 */   private scala.Function1 project_catalystConverter309;
/* 1266 */   private scala.Function1 project_converter309;
/* 1267 */   private scala.Function1 project_udf309;
/* 1268 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF310;
/* 1269 */   private scala.Function1 project_catalystConverter310;
/* 1270 */   private scala.Function1 project_converter310;
/* 1271 */   private scala.Function1 project_udf310;
/* 1272 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF311;
/* 1273 */   private scala.Function1 project_catalystConverter311;
/* 1274 */   private scala.Function1 project_converter311;
/* 1275 */   private scala.Function1 project_udf311;
/* 1276 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF312;
/* 1277 */   private scala.Function1 project_catalystConverter312;
/* 1278 */   private scala.Function1 project_converter312;
/* 1279 */   private scala.Function1 project_udf312;
/* 1280 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF313;
/* 1281 */   private scala.Function1 project_catalystConverter313;
/* 1282 */   private scala.Function1 project_converter313;
/* 1283 */   private scala.Function1 project_udf313;
/* 1284 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF314;
/* 1285 */   private scala.Function1 project_catalystConverter314;
/* 1286 */   private scala.Function1 project_converter314;
/* 1287 */   private scala.Function1 project_udf314;
/* 1288 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF315;
/* 1289 */   private scala.Function1 project_catalystConverter315;
/* 1290 */   private scala.Function1 project_converter315;
/* 1291 */   private scala.Function1 project_udf315;
/* 1292 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF316;
/* 1293 */   private scala.Function1 project_catalystConverter316;
/* 1294 */   private scala.Function1 project_converter316;
/* 1295 */   private scala.Function1 project_udf316;
/* 1296 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF317;
/* 1297 */   private scala.Function1 project_catalystConverter317;
/* 1298 */   private scala.Function1 project_converter317;
/* 1299 */   private scala.Function1 project_udf317;
/* 1300 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF318;
/* 1301 */   private scala.Function1 project_catalystConverter318;
/* 1302 */   private scala.Function1 project_converter318;
/* 1303 */   private scala.Function1 project_udf318;
/* 1304 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF319;
/* 1305 */   private scala.Function1 project_catalystConverter319;
/* 1306 */   private scala.Function1 project_converter319;
/* 1307 */   private scala.Function1 project_udf319;
/* 1308 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF320;
/* 1309 */   private scala.Function1 project_catalystConverter320;
/* 1310 */   private scala.Function1 project_converter320;
/* 1311 */   private scala.Function1 project_udf320;
/* 1312 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF321;
/* 1313 */   private scala.Function1 project_catalystConverter321;
/* 1314 */   private scala.Function1 project_converter321;
/* 1315 */   private scala.Function1 project_udf321;
/* 1316 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF322;
/* 1317 */   private scala.Function1 project_catalystConverter322;
/* 1318 */   private scala.Function1 project_converter322;
/* 1319 */   private scala.Function1 project_udf322;
/* 1320 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF323;
/* 1321 */   private scala.Function1 project_catalystConverter323;
/* 1322 */   private scala.Function1 project_converter323;
/* 1323 */   private scala.Function1 project_udf323;
/* 1324 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF324;
/* 1325 */   private scala.Function1 project_catalystConverter324;
/* 1326 */   private scala.Function1 project_converter324;
/* 1327 */   private scala.Function1 project_udf324;
/* 1328 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF325;
/* 1329 */   private scala.Function1 project_catalystConverter325;
/* 1330 */   private scala.Function1 project_converter325;
/* 1331 */   private scala.Function1 project_udf325;
/* 1332 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF326;
/* 1333 */   private scala.Function1 project_catalystConverter326;
/* 1334 */   private scala.Function1 project_converter326;
/* 1335 */   private scala.Function1 project_udf326;
/* 1336 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF327;
/* 1337 */   private scala.Function1 project_catalystConverter327;
/* 1338 */   private scala.Function1 project_converter327;
/* 1339 */   private scala.Function1 project_udf327;
/* 1340 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF328;
/* 1341 */   private scala.Function1 project_catalystConverter328;
/* 1342 */   private scala.Function1 project_converter328;
/* 1343 */   private scala.Function1 project_udf328;
/* 1344 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF329;
/* 1345 */   private scala.Function1 project_catalystConverter329;
/* 1346 */   private scala.Function1 project_converter329;
/* 1347 */   private scala.Function1 project_udf329;
/* 1348 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF330;
/* 1349 */   private scala.Function1 project_catalystConverter330;
/* 1350 */   private scala.Function1 project_converter330;
/* 1351 */   private scala.Function1 project_udf330;
/* 1352 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF331;
/* 1353 */   private scala.Function1 project_catalystConverter331;
/* 1354 */   private scala.Function1 project_converter331;
/* 1355 */   private scala.Function1 project_udf331;
/* 1356 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF332;
/* 1357 */   private scala.Function1 project_catalystConverter332;
/* 1358 */   private scala.Function1 project_converter332;
/* 1359 */   private scala.Function1 project_udf332;
/* 1360 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF333;
/* 1361 */   private scala.Function1 project_catalystConverter333;
/* 1362 */   private scala.Function1 project_converter333;
/* 1363 */   private scala.Function1 project_udf333;
/* 1364 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF334;
/* 1365 */   private scala.Function1 project_catalystConverter334;
/* 1366 */   private scala.Function1 project_converter334;
/* 1367 */   private scala.Function1 project_udf334;
/* 1368 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF335;
/* 1369 */   private scala.Function1 project_catalystConverter335;
/* 1370 */   private scala.Function1 project_converter335;
/* 1371 */   private scala.Function1 project_udf335;
/* 1372 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF336;
/* 1373 */   private scala.Function1 project_catalystConverter336;
/* 1374 */   private scala.Function1 project_converter336;
/* 1375 */   private scala.Function1 project_udf336;
/* 1376 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF337;
/* 1377 */   private scala.Function1 project_catalystConverter337;
/* 1378 */   private scala.Function1 project_converter337;
/* 1379 */   private scala.Function1 project_udf337;
/* 1380 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF338;
/* 1381 */   private scala.Function1 project_catalystConverter338;
/* 1382 */   private scala.Function1 project_converter338;
/* 1383 */   private scala.Function1 project_udf338;
/* 1384 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF339;
/* 1385 */   private scala.Function1 project_catalystConverter339;
/* 1386 */   private scala.Function1 project_converter339;
/* 1387 */   private scala.Function1 project_udf339;
/* 1388 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF340;
/* 1389 */   private scala.Function1 project_catalystConverter340;
/* 1390 */   private scala.Function1 project_converter340;
/* 1391 */   private scala.Function1 project_udf340;
/* 1392 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF341;
/* 1393 */   private scala.Function1 project_catalystConverter341;
/* 1394 */   private scala.Function1 project_converter341;
/* 1395 */   private scala.Function1 project_converter342;
/* 1396 */   private scala.Function2 project_udf341;
/* 1397 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF342;
/* 1398 */   private scala.Function1 project_catalystConverter342;
/* 1399 */   private scala.Function1 project_converter343;
/* 1400 */   private scala.Function1 project_udf342;
/* 1401 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF343;
/* 1402 */   private scala.Function1 project_catalystConverter343;
/* 1403 */   private scala.Function1 project_converter344;
/* 1404 */   private scala.Function1 project_udf343;
/* 1405 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF344;
/* 1406 */   private scala.Function1 project_catalystConverter344;
/* 1407 */   private scala.Function1 project_converter345;
/* 1408 */   private scala.Function1 project_udf344;
/* 1409 */   private Object[] project_values6;
/* 1410 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF345;
/* 1411 */   private scala.Function1 project_catalystConverter345;
/* 1412 */   private scala.Function1 project_converter346;
/* 1413 */   private scala.Function1 project_udf345;
/* 1414 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF346;
/* 1415 */   private scala.Function1 project_catalystConverter346;
/* 1416 */   private scala.Function1 project_converter347;
/* 1417 */   private scala.Function1 project_udf346;
/* 1418 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF347;
/* 1419 */   private scala.Function1 project_catalystConverter347;
/* 1420 */   private scala.Function1 project_converter348;
/* 1421 */   private scala.Function1 project_udf347;
/* 1422 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF348;
/* 1423 */   private scala.Function1 project_catalystConverter348;
/* 1424 */   private scala.Function1 project_converter349;
/* 1425 */   private scala.Function1 project_udf348;
/* 1426 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF349;
/* 1427 */   private scala.Function1 project_catalystConverter349;
/* 1428 */   private scala.Function1 project_converter350;
/* 1429 */   private scala.Function1 project_udf349;
/* 1430 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF350;
/* 1431 */   private scala.Function1 project_catalystConverter350;
/* 1432 */   private scala.Function1 project_converter351;
/* 1433 */   private scala.Function1 project_udf350;
/* 1434 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF351;
/* 1435 */   private scala.Function1 project_catalystConverter351;
/* 1436 */   private scala.Function1 project_converter352;
/* 1437 */   private scala.Function1 project_udf351;
/* 1438 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF352;
/* 1439 */   private scala.Function1 project_catalystConverter352;
/* 1440 */   private scala.Function1 project_converter353;
/* 1441 */   private scala.Function1 project_udf352;
/* 1442 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF353;
/* 1443 */   private scala.Function1 project_catalystConverter353;
/* 1444 */   private scala.Function1 project_converter354;
/* 1445 */   private scala.Function1 project_udf353;
/* 1446 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF354;
/* 1447 */   private scala.Function1 project_catalystConverter354;
/* 1448 */   private scala.Function1 project_converter355;
/* 1449 */   private scala.Function1 project_udf354;
/* 1450 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF355;
/* 1451 */   private scala.Function1 project_catalystConverter355;
/* 1452 */   private scala.Function1 project_converter356;
/* 1453 */   private scala.Function1 project_udf355;
/* 1454 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF356;
/* 1455 */   private scala.Function1 project_catalystConverter356;
/* 1456 */   private scala.Function1 project_converter357;
/* 1457 */   private scala.Function1 project_udf356;
/* 1458 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF357;
/* 1459 */   private scala.Function1 project_catalystConverter357;
/* 1460 */   private scala.Function1 project_converter358;
/* 1461 */   private scala.Function1 project_udf357;
/* 1462 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF358;
/* 1463 */   private scala.Function1 project_catalystConverter358;
/* 1464 */   private scala.Function1 project_converter359;
/* 1465 */   private scala.Function1 project_udf358;
/* 1466 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF359;
/* 1467 */   private scala.Function1 project_catalystConverter359;
/* 1468 */   private scala.Function1 project_converter360;
/* 1469 */   private scala.Function1 project_udf359;
/* 1470 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF360;
/* 1471 */   private scala.Function1 project_catalystConverter360;
/* 1472 */   private scala.Function1 project_converter361;
/* 1473 */   private scala.Function1 project_udf360;
/* 1474 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF361;
/* 1475 */   private scala.Function1 project_catalystConverter361;
/* 1476 */   private scala.Function1 project_converter362;
/* 1477 */   private scala.Function1 project_udf361;
/* 1478 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF362;
/* 1479 */   private scala.Function1 project_catalystConverter362;
/* 1480 */   private scala.Function1 project_converter363;
/* 1481 */   private scala.Function1 project_udf362;
/* 1482 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF363;
/* 1483 */   private scala.Function1 project_catalystConverter363;
/* 1484 */   private scala.Function1 project_converter364;
/* 1485 */   private scala.Function1 project_udf363;
/* 1486 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF364;
/* 1487 */   private scala.Function1 project_catalystConverter364;
/* 1488 */   private scala.Function1 project_converter365;
/* 1489 */   private scala.Function1 project_udf364;
/* 1490 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF365;
/* 1491 */   private scala.Function1 project_catalystConverter365;
/* 1492 */   private scala.Function1 project_converter366;
/* 1493 */   private scala.Function1 project_udf365;
/* 1494 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF366;
/* 1495 */   private scala.Function1 project_catalystConverter366;
/* 1496 */   private scala.Function1 project_converter367;
/* 1497 */   private scala.Function1 project_udf366;
/* 1498 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF367;
/* 1499 */   private scala.Function1 project_catalystConverter367;
/* 1500 */   private scala.Function1 project_converter368;
/* 1501 */   private scala.Function1 project_udf367;
/* 1502 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF368;
/* 1503 */   private scala.Function1 project_catalystConverter368;
/* 1504 */   private scala.Function1 project_converter369;
/* 1505 */   private scala.Function1 project_udf368;
/* 1506 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF369;
/* 1507 */   private scala.Function1 project_catalystConverter369;
/* 1508 */   private scala.Function1 project_converter370;
/* 1509 */   private scala.Function1 project_udf369;
/* 1510 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF370;
/* 1511 */   private scala.Function1 project_catalystConverter370;
/* 1512 */   private scala.Function1 project_converter371;
/* 1513 */   private scala.Function1 project_udf370;
/* 1514 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF371;
/* 1515 */   private scala.Function1 project_catalystConverter371;
/* 1516 */   private scala.Function1 project_converter372;
/* 1517 */   private scala.Function1 project_udf371;
/* 1518 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF372;
/* 1519 */   private scala.Function1 project_catalystConverter372;
/* 1520 */   private scala.Function1 project_converter373;
/* 1521 */   private scala.Function1 project_udf372;
/* 1522 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF373;
/* 1523 */   private scala.Function1 project_catalystConverter373;
/* 1524 */   private scala.Function1 project_converter374;
/* 1525 */   private scala.Function1 project_udf373;
/* 1526 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF374;
/* 1527 */   private scala.Function1 project_catalystConverter374;
/* 1528 */   private scala.Function1 project_converter375;
/* 1529 */   private scala.Function1 project_udf374;
/* 1530 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF375;
/* 1531 */   private scala.Function1 project_catalystConverter375;
/* 1532 */   private scala.Function1 project_converter376;
/* 1533 */   private scala.Function1 project_udf375;
/* 1534 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF376;
/* 1535 */   private scala.Function1 project_catalystConverter376;
/* 1536 */   private scala.Function1 project_converter377;
/* 1537 */   private scala.Function1 project_udf376;
/* 1538 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF377;
/* 1539 */   private scala.Function1 project_catalystConverter377;
/* 1540 */   private scala.Function1 project_converter378;
/* 1541 */   private scala.Function1 project_udf377;
/* 1542 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF378;
/* 1543 */   private scala.Function1 project_catalystConverter378;
/* 1544 */   private scala.Function1 project_converter379;
/* 1545 */   private scala.Function1 project_udf378;
/* 1546 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF379;
/* 1547 */   private scala.Function1 project_catalystConverter379;
/* 1548 */   private scala.Function1 project_converter380;
/* 1549 */   private scala.Function1 project_udf379;
/* 1550 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF380;
/* 1551 */   private scala.Function1 project_catalystConverter380;
/* 1552 */   private scala.Function1 project_converter381;
/* 1553 */   private scala.Function1 project_udf380;
/* 1554 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF381;
/* 1555 */   private scala.Function1 project_catalystConverter381;
/* 1556 */   private scala.Function1 project_converter382;
/* 1557 */   private scala.Function1 project_udf381;
/* 1558 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF382;
/* 1559 */   private scala.Function1 project_catalystConverter382;
/* 1560 */   private scala.Function1 project_converter383;
/* 1561 */   private scala.Function1 project_udf382;
/* 1562 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF383;
/* 1563 */   private scala.Function1 project_catalystConverter383;
/* 1564 */   private scala.Function1 project_converter384;
/* 1565 */   private scala.Function1 project_udf383;
/* 1566 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF384;
/* 1567 */   private scala.Function1 project_catalystConverter384;
/* 1568 */   private scala.Function1 project_converter385;
/* 1569 */   private scala.Function1 project_udf384;
/* 1570 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF385;
/* 1571 */   private scala.Function1 project_catalystConverter385;
/* 1572 */   private scala.Function1 project_converter386;
/* 1573 */   private scala.Function1 project_udf385;
/* 1574 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF386;
/* 1575 */   private scala.Function1 project_catalystConverter386;
/* 1576 */   private scala.Function1 project_converter387;
/* 1577 */   private scala.Function1 project_udf386;
/* 1578 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF387;
/* 1579 */   private scala.Function1 project_catalystConverter387;
/* 1580 */   private scala.Function1 project_converter388;
/* 1581 */   private scala.Function1 project_udf387;
/* 1582 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF388;
/* 1583 */   private scala.Function1 project_catalystConverter388;
/* 1584 */   private scala.Function1 project_converter389;
/* 1585 */   private scala.Function1 project_udf388;
/* 1586 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF389;
/* 1587 */   private scala.Function1 project_catalystConverter389;
/* 1588 */   private scala.Function1 project_converter390;
/* 1589 */   private scala.Function1 project_udf389;
/* 1590 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF390;
/* 1591 */   private scala.Function1 project_catalystConverter390;
/* 1592 */   private scala.Function1 project_converter391;
/* 1593 */   private scala.Function1 project_udf390;
/* 1594 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF391;
/* 1595 */   private scala.Function1 project_catalystConverter391;
/* 1596 */   private scala.Function1 project_converter392;
/* 1597 */   private scala.Function1 project_udf391;
/* 1598 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF392;
/* 1599 */   private scala.Function1 project_catalystConverter392;
/* 1600 */   private scala.Function1 project_converter393;
/* 1601 */   private scala.Function1 project_udf392;
/* 1602 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF393;
/* 1603 */   private scala.Function1 project_catalystConverter393;
/* 1604 */   private scala.Function1 project_converter394;
/* 1605 */   private scala.Function1 project_udf393;
/* 1606 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF394;
/* 1607 */   private scala.Function1 project_catalystConverter394;
/* 1608 */   private scala.Function1 project_converter395;
/* 1609 */   private scala.Function1 project_udf394;
/* 1610 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF395;
/* 1611 */   private scala.Function1 project_catalystConverter395;
/* 1612 */   private scala.Function1 project_converter396;
/* 1613 */   private scala.Function1 project_udf395;
/* 1614 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF396;
/* 1615 */   private scala.Function1 project_catalystConverter396;
/* 1616 */   private scala.Function1 project_converter397;
/* 1617 */   private scala.Function1 project_udf396;
/* 1618 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF397;
/* 1619 */   private scala.Function1 project_catalystConverter397;
/* 1620 */   private scala.Function1 project_converter398;
/* 1621 */   private scala.Function1 project_udf397;
/* 1622 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF398;
/* 1623 */   private scala.Function1 project_catalystConverter398;
/* 1624 */   private scala.Function1 project_converter399;
/* 1625 */   private scala.Function1 project_udf398;
/* 1626 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF399;
/* 1627 */   private scala.Function1 project_catalystConverter399;
/* 1628 */   private scala.Function1 project_converter400;
/* 1629 */   private scala.Function1 project_converter401;
/* 1630 */   private scala.Function2 project_udf399;
/* 1631 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF400;
/* 1632 */   private scala.Function1 project_catalystConverter400;
/* 1633 */   private scala.Function1 project_converter402;
/* 1634 */   private scala.Function1 project_udf400;
/* 1635 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF401;
/* 1636 */   private scala.Function1 project_catalystConverter401;
/* 1637 */   private scala.Function1 project_converter403;
/* 1638 */   private scala.Function1 project_udf401;
/* 1639 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF402;
/* 1640 */   private scala.Function1 project_catalystConverter402;
/* 1641 */   private scala.Function1 project_converter404;
/* 1642 */   private scala.Function1 project_udf402;
/* 1643 */   private Object[] project_values7;
/* 1644 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF403;
/* 1645 */   private scala.Function1 project_catalystConverter403;
/* 1646 */   private scala.Function1 project_converter405;
/* 1647 */   private scala.Function1 project_udf403;
/* 1648 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF404;
/* 1649 */   private scala.Function1 project_catalystConverter404;
/* 1650 */   private scala.Function1 project_converter406;
/* 1651 */   private scala.Function1 project_udf404;
/* 1652 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF405;
/* 1653 */   private scala.Function1 project_catalystConverter405;
/* 1654 */   private scala.Function1 project_converter407;
/* 1655 */   private scala.Function1 project_udf405;
/* 1656 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF406;
/* 1657 */   private scala.Function1 project_catalystConverter406;
/* 1658 */   private scala.Function1 project_converter408;
/* 1659 */   private scala.Function1 project_udf406;
/* 1660 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF407;
/* 1661 */   private scala.Function1 project_catalystConverter407;
/* 1662 */   private scala.Function1 project_converter409;
/* 1663 */   private scala.Function1 project_udf407;
/* 1664 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF408;
/* 1665 */   private scala.Function1 project_catalystConverter408;
/* 1666 */   private scala.Function1 project_converter410;
/* 1667 */   private scala.Function1 project_udf408;
/* 1668 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF409;
/* 1669 */   private scala.Function1 project_catalystConverter409;
/* 1670 */   private scala.Function1 project_converter411;
/* 1671 */   private scala.Function1 project_udf409;
/* 1672 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF410;
/* 1673 */   private scala.Function1 project_catalystConverter410;
/* 1674 */   private scala.Function1 project_converter412;
/* 1675 */   private scala.Function1 project_udf410;
/* 1676 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF411;
/* 1677 */   private scala.Function1 project_catalystConverter411;
/* 1678 */   private scala.Function1 project_converter413;
/* 1679 */   private scala.Function1 project_udf411;
/* 1680 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF412;
/* 1681 */   private scala.Function1 project_catalystConverter412;
/* 1682 */   private scala.Function1 project_converter414;
/* 1683 */   private scala.Function1 project_udf412;
/* 1684 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF413;
/* 1685 */   private scala.Function1 project_catalystConverter413;
/* 1686 */   private scala.Function1 project_converter415;
/* 1687 */   private scala.Function1 project_udf413;
/* 1688 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF414;
/* 1689 */   private scala.Function1 project_catalystConverter414;
/* 1690 */   private scala.Function1 project_converter416;
/* 1691 */   private scala.Function1 project_udf414;
/* 1692 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF415;
/* 1693 */   private scala.Function1 project_catalystConverter415;
/* 1694 */   private scala.Function1 project_converter417;
/* 1695 */   private scala.Function1 project_udf415;
/* 1696 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF416;
/* 1697 */   private scala.Function1 project_catalystConverter416;
/* 1698 */   private scala.Function1 project_converter418;
/* 1699 */   private scala.Function1 project_udf416;
/* 1700 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF417;
/* 1701 */   private scala.Function1 project_catalystConverter417;
/* 1702 */   private scala.Function1 project_converter419;
/* 1703 */   private scala.Function1 project_udf417;
/* 1704 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF418;
/* 1705 */   private scala.Function1 project_catalystConverter418;
/* 1706 */   private scala.Function1 project_converter420;
/* 1707 */   private scala.Function1 project_udf418;
/* 1708 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF419;
/* 1709 */   private scala.Function1 project_catalystConverter419;
/* 1710 */   private scala.Function1 project_converter421;
/* 1711 */   private scala.Function1 project_udf419;
/* 1712 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF420;
/* 1713 */   private scala.Function1 project_catalystConverter420;
/* 1714 */   private scala.Function1 project_converter422;
/* 1715 */   private scala.Function1 project_udf420;
/* 1716 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF421;
/* 1717 */   private scala.Function1 project_catalystConverter421;
/* 1718 */   private scala.Function1 project_converter423;
/* 1719 */   private scala.Function1 project_udf421;
/* 1720 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF422;
/* 1721 */   private scala.Function1 project_catalystConverter422;
/* 1722 */   private scala.Function1 project_converter424;
/* 1723 */   private scala.Function1 project_udf422;
/* 1724 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF423;
/* 1725 */   private scala.Function1 project_catalystConverter423;
/* 1726 */   private scala.Function1 project_converter425;
/* 1727 */   private scala.Function1 project_udf423;
/* 1728 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF424;
/* 1729 */   private scala.Function1 project_catalystConverter424;
/* 1730 */   private scala.Function1 project_converter426;
/* 1731 */   private scala.Function1 project_udf424;
/* 1732 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF425;
/* 1733 */   private scala.Function1 project_catalystConverter425;
/* 1734 */   private scala.Function1 project_converter427;
/* 1735 */   private scala.Function1 project_udf425;
/* 1736 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF426;
/* 1737 */   private scala.Function1 project_catalystConverter426;
/* 1738 */   private scala.Function1 project_converter428;
/* 1739 */   private scala.Function1 project_udf426;
/* 1740 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF427;
/* 1741 */   private scala.Function1 project_catalystConverter427;
/* 1742 */   private scala.Function1 project_converter429;
/* 1743 */   private scala.Function1 project_udf427;
/* 1744 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF428;
/* 1745 */   private scala.Function1 project_catalystConverter428;
/* 1746 */   private scala.Function1 project_converter430;
/* 1747 */   private scala.Function1 project_udf428;
/* 1748 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF429;
/* 1749 */   private scala.Function1 project_catalystConverter429;
/* 1750 */   private scala.Function1 project_converter431;
/* 1751 */   private scala.Function1 project_udf429;
/* 1752 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF430;
/* 1753 */   private scala.Function1 project_catalystConverter430;
/* 1754 */   private scala.Function1 project_converter432;
/* 1755 */   private scala.Function1 project_udf430;
/* 1756 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF431;
/* 1757 */   private scala.Function1 project_catalystConverter431;
/* 1758 */   private scala.Function1 project_converter433;
/* 1759 */   private scala.Function1 project_udf431;
/* 1760 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF432;
/* 1761 */   private scala.Function1 project_catalystConverter432;
/* 1762 */   private scala.Function1 project_converter434;
/* 1763 */   private scala.Function1 project_udf432;
/* 1764 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF433;
/* 1765 */   private scala.Function1 project_catalystConverter433;
/* 1766 */   private scala.Function1 project_converter435;
/* 1767 */   private scala.Function1 project_udf433;
/* 1768 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF434;
/* 1769 */   private scala.Function1 project_catalystConverter434;
/* 1770 */   private scala.Function1 project_converter436;
/* 1771 */   private scala.Function1 project_udf434;
/* 1772 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF435;
/* 1773 */   private scala.Function1 project_catalystConverter435;
/* 1774 */   private scala.Function1 project_converter437;
/* 1775 */   private scala.Function1 project_udf435;
/* 1776 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF436;
/* 1777 */   private scala.Function1 project_catalystConverter436;
/* 1778 */   private scala.Function1 project_converter438;
/* 1779 */   private scala.Function1 project_udf436;
/* 1780 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF437;
/* 1781 */   private scala.Function1 project_catalystConverter437;
/* 1782 */   private scala.Function1 project_converter439;
/* 1783 */   private scala.Function1 project_udf437;
/* 1784 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF438;
/* 1785 */   private scala.Function1 project_catalystConverter438;
/* 1786 */   private scala.Function1 project_converter440;
/* 1787 */   private scala.Function1 project_udf438;
/* 1788 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF439;
/* 1789 */   private scala.Function1 project_catalystConverter439;
/* 1790 */   private scala.Function1 project_converter441;
/* 1791 */   private scala.Function1 project_udf439;
/* 1792 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF440;
/* 1793 */   private scala.Function1 project_catalystConverter440;
/* 1794 */   private scala.Function1 project_converter442;
/* 1795 */   private scala.Function1 project_udf440;
/* 1796 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF441;
/* 1797 */   private scala.Function1 project_catalystConverter441;
/* 1798 */   private scala.Function1 project_converter443;
/* 1799 */   private scala.Function1 project_udf441;
/* 1800 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF442;
/* 1801 */   private scala.Function1 project_catalystConverter442;
/* 1802 */   private scala.Function1 project_converter444;
/* 1803 */   private scala.Function1 project_udf442;
/* 1804 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF443;
/* 1805 */   private scala.Function1 project_catalystConverter443;
/* 1806 */   private scala.Function1 project_converter445;
/* 1807 */   private scala.Function1 project_udf443;
/* 1808 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF444;
/* 1809 */   private scala.Function1 project_catalystConverter444;
/* 1810 */   private scala.Function1 project_converter446;
/* 1811 */   private scala.Function1 project_udf444;
/* 1812 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF445;
/* 1813 */   private scala.Function1 project_catalystConverter445;
/* 1814 */   private scala.Function1 project_converter447;
/* 1815 */   private scala.Function1 project_udf445;
/* 1816 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF446;
/* 1817 */   private scala.Function1 project_catalystConverter446;
/* 1818 */   private scala.Function1 project_converter448;
/* 1819 */   private scala.Function1 project_udf446;
/* 1820 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF447;
/* 1821 */   private scala.Function1 project_catalystConverter447;
/* 1822 */   private scala.Function1 project_converter449;
/* 1823 */   private scala.Function1 project_udf447;
/* 1824 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF448;
/* 1825 */   private scala.Function1 project_catalystConverter448;
/* 1826 */   private scala.Function1 project_converter450;
/* 1827 */   private scala.Function1 project_udf448;
/* 1828 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF449;
/* 1829 */   private scala.Function1 project_catalystConverter449;
/* 1830 */   private scala.Function1 project_converter451;
/* 1831 */   private scala.Function1 project_udf449;
/* 1832 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF450;
/* 1833 */   private scala.Function1 project_catalystConverter450;
/* 1834 */   private scala.Function1 project_converter452;
/* 1835 */   private scala.Function1 project_udf450;
/* 1836 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF451;
/* 1837 */   private scala.Function1 project_catalystConverter451;
/* 1838 */   private scala.Function1 project_converter453;
/* 1839 */   private scala.Function1 project_udf451;
/* 1840 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF452;
/* 1841 */   private scala.Function1 project_catalystConverter452;
/* 1842 */   private scala.Function1 project_converter454;
/* 1843 */   private scala.Function1 project_udf452;
/* 1844 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF453;
/* 1845 */   private scala.Function1 project_catalystConverter453;
/* 1846 */   private scala.Function1 project_converter455;
/* 1847 */   private scala.Function1 project_udf453;
/* 1848 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF454;
/* 1849 */   private scala.Function1 project_catalystConverter454;
/* 1850 */   private scala.Function1 project_converter456;
/* 1851 */   private scala.Function1 project_udf454;
/* 1852 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF455;
/* 1853 */   private scala.Function1 project_catalystConverter455;
/* 1854 */   private scala.Function1 project_converter457;
/* 1855 */   private scala.Function1 project_udf455;
/* 1856 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF456;
/* 1857 */   private scala.Function1 project_catalystConverter456;
/* 1858 */   private scala.Function1 project_converter458;
/* 1859 */   private scala.Function1 project_udf456;
/* 1860 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF457;
/* 1861 */   private scala.Function1 project_catalystConverter457;
/* 1862 */   private scala.Function1 project_converter459;
/* 1863 */   private scala.Function1 project_converter460;
/* 1864 */   private scala.Function2 project_udf457;
/* 1865 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF458;
/* 1866 */   private scala.Function1 project_catalystConverter458;
/* 1867 */   private scala.Function1 project_converter461;
/* 1868 */   private scala.Function1 project_udf458;
/* 1869 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF459;
/* 1870 */   private scala.Function1 project_catalystConverter459;
/* 1871 */   private scala.Function1 project_converter462;
/* 1872 */   private scala.Function1 project_udf459;
/* 1873 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF460;
/* 1874 */   private scala.Function1 project_catalystConverter460;
/* 1875 */   private scala.Function1 project_converter463;
/* 1876 */   private scala.Function1 project_udf460;
/* 1877 */   private Object[] project_values8;
/* 1878 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF461;
/* 1879 */   private scala.Function1 project_catalystConverter461;
/* 1880 */   private scala.Function1 project_converter464;
/* 1881 */   private scala.Function1 project_udf461;
/* 1882 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF462;
/* 1883 */   private scala.Function1 project_catalystConverter462;
/* 1884 */   private scala.Function1 project_converter465;
/* 1885 */   private scala.Function1 project_udf462;
/* 1886 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF463;
/* 1887 */   private scala.Function1 project_catalystConverter463;
/* 1888 */   private scala.Function1 project_converter466;
/* 1889 */   private scala.Function1 project_udf463;
/* 1890 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF464;
/* 1891 */   private scala.Function1 project_catalystConverter464;
/* 1892 */   private scala.Function1 project_converter467;
/* 1893 */   private scala.Function1 project_udf464;
/* 1894 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF465;
/* 1895 */   private scala.Function1 project_catalystConverter465;
/* 1896 */   private scala.Function1 project_converter468;
/* 1897 */   private scala.Function1 project_udf465;
/* 1898 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF466;
/* 1899 */   private scala.Function1 project_catalystConverter466;
/* 1900 */   private scala.Function1 project_converter469;
/* 1901 */   private scala.Function1 project_udf466;
/* 1902 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF467;
/* 1903 */   private scala.Function1 project_catalystConverter467;
/* 1904 */   private scala.Function1 project_converter470;
/* 1905 */   private scala.Function1 project_udf467;
/* 1906 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF468;
/* 1907 */   private scala.Function1 project_catalystConverter468;
/* 1908 */   private scala.Function1 project_converter471;
/* 1909 */   private scala.Function1 project_udf468;
/* 1910 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF469;
/* 1911 */   private scala.Function1 project_catalystConverter469;
/* 1912 */   private scala.Function1 project_converter472;
/* 1913 */   private scala.Function1 project_udf469;
/* 1914 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF470;
/* 1915 */   private scala.Function1 project_catalystConverter470;
/* 1916 */   private scala.Function1 project_converter473;
/* 1917 */   private scala.Function1 project_udf470;
/* 1918 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF471;
/* 1919 */   private scala.Function1 project_catalystConverter471;
/* 1920 */   private scala.Function1 project_converter474;
/* 1921 */   private scala.Function1 project_udf471;
/* 1922 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF472;
/* 1923 */   private scala.Function1 project_catalystConverter472;
/* 1924 */   private scala.Function1 project_converter475;
/* 1925 */   private scala.Function1 project_udf472;
/* 1926 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF473;
/* 1927 */   private scala.Function1 project_catalystConverter473;
/* 1928 */   private scala.Function1 project_converter476;
/* 1929 */   private scala.Function1 project_udf473;
/* 1930 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF474;
/* 1931 */   private scala.Function1 project_catalystConverter474;
/* 1932 */   private scala.Function1 project_converter477;
/* 1933 */   private scala.Function1 project_udf474;
/* 1934 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF475;
/* 1935 */   private scala.Function1 project_catalystConverter475;
/* 1936 */   private scala.Function1 project_converter478;
/* 1937 */   private scala.Function1 project_udf475;
/* 1938 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF476;
/* 1939 */   private scala.Function1 project_catalystConverter476;
/* 1940 */   private scala.Function1 project_converter479;
/* 1941 */   private scala.Function1 project_udf476;
/* 1942 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF477;
/* 1943 */   private scala.Function1 project_catalystConverter477;
/* 1944 */   private scala.Function1 project_converter480;
/* 1945 */   private scala.Function1 project_udf477;
/* 1946 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF478;
/* 1947 */   private scala.Function1 project_catalystConverter478;
/* 1948 */   private scala.Function1 project_converter481;
/* 1949 */   private scala.Function1 project_udf478;
/* 1950 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF479;
/* 1951 */   private scala.Function1 project_catalystConverter479;
/* 1952 */   private scala.Function1 project_converter482;
/* 1953 */   private scala.Function1 project_udf479;
/* 1954 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF480;
/* 1955 */   private scala.Function1 project_catalystConverter480;
/* 1956 */   private scala.Function1 project_converter483;
/* 1957 */   private scala.Function1 project_udf480;
/* 1958 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF481;
/* 1959 */   private scala.Function1 project_catalystConverter481;
/* 1960 */   private scala.Function1 project_converter484;
/* 1961 */   private scala.Function1 project_udf481;
/* 1962 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF482;
/* 1963 */   private scala.Function1 project_catalystConverter482;
/* 1964 */   private scala.Function1 project_converter485;
/* 1965 */   private scala.Function1 project_udf482;
/* 1966 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF483;
/* 1967 */   private scala.Function1 project_catalystConverter483;
/* 1968 */   private scala.Function1 project_converter486;
/* 1969 */   private scala.Function1 project_udf483;
/* 1970 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF484;
/* 1971 */   private scala.Function1 project_catalystConverter484;
/* 1972 */   private scala.Function1 project_converter487;
/* 1973 */   private scala.Function1 project_udf484;
/* 1974 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF485;
/* 1975 */   private scala.Function1 project_catalystConverter485;
/* 1976 */   private scala.Function1 project_converter488;
/* 1977 */   private scala.Function1 project_udf485;
/* 1978 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF486;
/* 1979 */   private scala.Function1 project_catalystConverter486;
/* 1980 */   private scala.Function1 project_converter489;
/* 1981 */   private scala.Function1 project_udf486;
/* 1982 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF487;
/* 1983 */   private scala.Function1 project_catalystConverter487;
/* 1984 */   private scala.Function1 project_converter490;
/* 1985 */   private scala.Function1 project_udf487;
/* 1986 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF488;
/* 1987 */   private scala.Function1 project_catalystConverter488;
/* 1988 */   private scala.Function1 project_converter491;
/* 1989 */   private scala.Function1 project_udf488;
/* 1990 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF489;
/* 1991 */   private scala.Function1 project_catalystConverter489;
/* 1992 */   private scala.Function1 project_converter492;
/* 1993 */   private scala.Function1 project_udf489;
/* 1994 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF490;
/* 1995 */   private scala.Function1 project_catalystConverter490;
/* 1996 */   private scala.Function1 project_converter493;
/* 1997 */   private scala.Function1 project_udf490;
/* 1998 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF491;
/* 1999 */   private scala.Function1 project_catalystConverter491;
/* 2000 */   private scala.Function1 project_converter494;
/* 2001 */   private scala.Function1 project_udf491;
/* 2002 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF492;
/* 2003 */   private scala.Function1 project_catalystConverter492;
/* 2004 */   private scala.Function1 project_converter495;
/* 2005 */   private scala.Function1 project_udf492;
/* 2006 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF493;
/* 2007 */   private scala.Function1 project_catalystConverter493;
/* 2008 */   private scala.Function1 project_converter496;
/* 2009 */   private scala.Function1 project_udf493;
/* 2010 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF494;
/* 2011 */   private scala.Function1 project_catalystConverter494;
/* 2012 */   private scala.Function1 project_converter497;
/* 2013 */   private scala.Function1 project_udf494;
/* 2014 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF495;
/* 2015 */   private scala.Function1 project_catalystConverter495;
/* 2016 */   private scala.Function1 project_converter498;
/* 2017 */   private scala.Function1 project_udf495;
/* 2018 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF496;
/* 2019 */   private scala.Function1 project_catalystConverter496;
/* 2020 */   private scala.Function1 project_converter499;
/* 2021 */   private scala.Function1 project_udf496;
/* 2022 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF497;
/* 2023 */   private scala.Function1 project_catalystConverter497;
/* 2024 */   private scala.Function1 project_converter500;
/* 2025 */   private scala.Function1 project_udf497;
/* 2026 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF498;
/* 2027 */   private scala.Function1 project_catalystConverter498;
/* 2028 */   private scala.Function1 project_converter501;
/* 2029 */   private scala.Function1 project_udf498;
/* 2030 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF499;
/* 2031 */   private scala.Function1 project_catalystConverter499;
/* 2032 */   private scala.Function1 project_converter502;
/* 2033 */   private scala.Function1 project_udf499;
/* 2034 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF500;
/* 2035 */   private scala.Function1 project_catalystConverter500;
/* 2036 */   private scala.Function1 project_converter503;
/* 2037 */   private scala.Function1 project_udf500;
/* 2038 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF501;
/* 2039 */   private scala.Function1 project_catalystConverter501;
/* 2040 */   private scala.Function1 project_converter504;
/* 2041 */   private scala.Function1 project_udf501;
/* 2042 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF502;
/* 2043 */   private scala.Function1 project_catalystConverter502;
/* 2044 */   private scala.Function1 project_converter505;
/* 2045 */   private scala.Function1 project_udf502;
/* 2046 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF503;
/* 2047 */   private scala.Function1 project_catalystConverter503;
/* 2048 */   private scala.Function1 project_converter506;
/* 2049 */   private scala.Function1 project_udf503;
/* 2050 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF504;
/* 2051 */   private scala.Function1 project_catalystConverter504;
/* 2052 */   private scala.Function1 project_converter507;
/* 2053 */   private scala.Function1 project_udf504;
/* 2054 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF505;
/* 2055 */   private scala.Function1 project_catalystConverter505;
/* 2056 */   private scala.Function1 project_converter508;
/* 2057 */   private scala.Function1 project_udf505;
/* 2058 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF506;
/* 2059 */   private scala.Function1 project_catalystConverter506;
/* 2060 */   private scala.Function1 project_converter509;
/* 2061 */   private scala.Function1 project_udf506;
/* 2062 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF507;
/* 2063 */   private scala.Function1 project_catalystConverter507;
/* 2064 */   private scala.Function1 project_converter510;
/* 2065 */   private scala.Function1 project_udf507;
/* 2066 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF508;
/* 2067 */   private scala.Function1 project_catalystConverter508;
/* 2068 */   private scala.Function1 project_converter511;
/* 2069 */   private scala.Function1 project_udf508;
/* 2070 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF509;
/* 2071 */   private scala.Function1 project_catalystConverter509;
/* 2072 */   private scala.Function1 project_converter512;
/* 2073 */   private scala.Function1 project_udf509;
/* 2074 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF510;
/* 2075 */   private scala.Function1 project_catalystConverter510;
/* 2076 */   private scala.Function1 project_converter513;
/* 2077 */   private scala.Function1 project_udf510;
/* 2078 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF511;
/* 2079 */   private scala.Function1 project_catalystConverter511;
/* 2080 */   private scala.Function1 project_converter514;
/* 2081 */   private scala.Function1 project_udf511;
/* 2082 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF512;
/* 2083 */   private scala.Function1 project_catalystConverter512;
/* 2084 */   private scala.Function1 project_converter515;
/* 2085 */   private scala.Function1 project_udf512;
/* 2086 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF513;
/* 2087 */   private scala.Function1 project_catalystConverter513;
/* 2088 */   private scala.Function1 project_converter516;
/* 2089 */   private scala.Function1 project_udf513;
/* 2090 */   private org.apache.spark.sql.catalyst.expressions.ScalaUDF project_scalaUDF514;
/* 2091 */   private scala.Function1 project_catalystConverter514;
/* 2092 */   private scala.Function1 project_converter517;
/* 2093 */   private scala.Function1 project_udf514;
/* 2094 */   private UnsafeRow project_result515;
/* 2095 */   private org.apache.spark.sql.catalyst.expressions.codegen.BufferHolder project_holder;
/* 2096 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter project_rowWriter;
/* 2097 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter project_rowWriter1;
/* 2098 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeArrayWriter project_arrayWriter;
/* 2099 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeArrayWriter project_arrayWriter1;
/* 2100 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter project_rowWriter2;
/* 2101 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeArrayWriter project_arrayWriter2;
/* 2102 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeArrayWriter project_arrayWriter3;
/* 2103 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter project_rowWriter3;
/* 2104 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeArrayWriter project_arrayWriter4;
/* 2105 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeArrayWriter project_arrayWriter5;
/* 2106 */
/* 2107 */   public GeneratedIterator(Object[] references) {
/* 2108 */     this.references = references;
/* 2109 */   }
/* 2110 */
/* 2111 */   public void init(int index, scala.collection.Iterator[] inputs) {
/* 2112 */     partitionIndex = index;
/* 2113 */     this.inputs = inputs;
/* 2114 */     wholestagecodegen_init_0();
/* 2115 */     wholestagecodegen_init_1();
/* 2116 */     wholestagecodegen_init_2();
/* 2117 */     wholestagecodegen_init_3();
/* 2118 */     wholestagecodegen_init_4();
/* 2119 */     wholestagecodegen_init_5();
/* 2120 */     wholestagecodegen_init_6();
/* 2121 */     wholestagecodegen_init_7();
/* 2122 */     wholestagecodegen_init_8();
/* 2123 */     wholestagecodegen_init_9();
/* 2124 */     wholestagecodegen_init_10();
/* 2125 */     wholestagecodegen_init_11();
/* 2126 */     wholestagecodegen_init_12();
/* 2127 */     wholestagecodegen_init_13();
/* 2128 */     wholestagecodegen_init_14();
/* 2129 */     wholestagecodegen_init_15();
/* 2130 */     wholestagecodegen_init_16();
/* 2131 */     wholestagecodegen_init_17();
/* 2132 */     wholestagecodegen_init_18();
/* 2133 */     wholestagecodegen_init_19();
/* 2134 */     wholestagecodegen_init_20();
/* 2135 */     wholestagecodegen_init_21();
/* 2136 */     wholestagecodegen_init_22();
/* 2137 */     wholestagecodegen_init_23();
/* 2138 */     wholestagecodegen_init_24();
/* 2139 */     wholestagecodegen_init_25();
/* 2140 */     wholestagecodegen_init_26();
/* 2141 */     wholestagecodegen_init_27();
/* 2142 */     wholestagecodegen_init_28();
/* 2143 */     wholestagecodegen_init_29();
/* 2144 */     wholestagecodegen_init_30();
/* 2145 */     wholestagecodegen_init_31();
/* 2146 */     wholestagecodegen_init_32();
/* 2147 */     wholestagecodegen_init_33();
/* 2148 */     wholestagecodegen_init_34();
/* 2149 */     wholestagecodegen_init_35();
/* 2150 */     wholestagecodegen_init_36();
/* 2151 */     wholestagecodegen_init_37();
/* 2152 */     wholestagecodegen_init_38();
/* 2153 */     wholestagecodegen_init_39();
/* 2154 */     wholestagecodegen_init_40();
/* 2155 */     wholestagecodegen_init_41();
/* 2156 */     wholestagecodegen_init_42();
/* 2157 */     wholestagecodegen_init_43();
/* 2158 */     wholestagecodegen_init_44();
/* 2159 */     wholestagecodegen_init_45();
/* 2160 */     wholestagecodegen_init_46();
/* 2161 */     wholestagecodegen_init_47();
/* 2162 */     wholestagecodegen_init_48();
/* 2163 */     wholestagecodegen_init_49();
/* 2164 */     wholestagecodegen_init_50();
/* 2165 */     wholestagecodegen_init_51();
/* 2166 */     wholestagecodegen_init_52();
/* 2167 */     wholestagecodegen_init_53();
/* 2168 */     wholestagecodegen_init_54();
/* 2169 */     wholestagecodegen_init_55();
/* 2170 */     wholestagecodegen_init_56();
/* 2171 */     wholestagecodegen_init_57();
/* 2172 */     wholestagecodegen_init_58();
/* 2173 */     wholestagecodegen_init_59();
/* 2174 */     wholestagecodegen_init_60();
/* 2175 */     wholestagecodegen_init_61();
/* 2176 */     wholestagecodegen_init_62();
/* 2177 */     wholestagecodegen_init_63();
/* 2178 */     wholestagecodegen_init_64();
/* 2179 */     wholestagecodegen_init_65();
/* 2180 */     wholestagecodegen_init_66();
/* 2181 */     wholestagecodegen_init_67();
/* 2182 */     wholestagecodegen_init_68();
/* 2183 */     wholestagecodegen_init_69();
/* 2184 */     wholestagecodegen_init_70();
/* 2185 */     wholestagecodegen_init_71();
/* 2186 */     wholestagecodegen_init_72();
/* 2187 */     wholestagecodegen_init_73();
/* 2188 */     wholestagecodegen_init_74();
/* 2189 */     wholestagecodegen_init_75();
/* 2190 */     wholestagecodegen_init_76();
/* 2191 */     wholestagecodegen_init_77();
/* 2192 */     wholestagecodegen_init_78();
/* 2193 */     wholestagecodegen_init_79();
/* 2194 */     wholestagecodegen_init_80();
/* 2195 */     wholestagecodegen_init_81();
/* 2196 */     wholestagecodegen_init_82();
/* 2197 */     wholestagecodegen_init_83();
/* 2198 */     wholestagecodegen_init_84();
/* 2199 */     wholestagecodegen_init_85();
/* 2200 */     wholestagecodegen_init_86();
/* 2201 */     wholestagecodegen_init_87();
/* 2202 */     wholestagecodegen_init_88();
/* 2203 */     wholestagecodegen_init_89();
/* 2204 */     wholestagecodegen_init_90();
/* 2205 */     wholestagecodegen_init_91();
/* 2206 */     wholestagecodegen_init_92();
/* 2207 */     wholestagecodegen_init_93();
/* 2208 */     wholestagecodegen_init_94();
/* 2209 */     wholestagecodegen_init_95();
/* 2210 */     wholestagecodegen_init_96();
/* 2211 */     wholestagecodegen_init_97();
/* 2212 */     wholestagecodegen_init_98();
/* 2213 */     wholestagecodegen_init_99();
/* 2214 */     wholestagecodegen_init_100();
/* 2215 */     wholestagecodegen_init_101();
/* 2216 */     wholestagecodegen_init_102();
/* 2217 */     wholestagecodegen_init_103();
/* 2218 */     wholestagecodegen_init_104();
/* 2219 */     wholestagecodegen_init_105();
/* 2220 */     wholestagecodegen_init_106();
/* 2221 */     wholestagecodegen_init_107();
/* 2222 */     wholestagecodegen_init_108();
/* 2223 */     wholestagecodegen_init_109();
/* 2224 */     wholestagecodegen_init_110();
/* 2225 */     wholestagecodegen_init_111();
/* 2226 */     wholestagecodegen_init_112();
/* 2227 */     wholestagecodegen_init_113();
/* 2228 */     wholestagecodegen_init_114();
/* 2229 */     wholestagecodegen_init_115();
/* 2230 */     wholestagecodegen_init_116();
/* 2231 */     wholestagecodegen_init_117();
/* 2232 */     wholestagecodegen_init_118();
/* 2233 */     wholestagecodegen_init_119();
/* 2234 */     wholestagecodegen_init_120();
/* 2235 */     wholestagecodegen_init_121();
/* 2236 */     wholestagecodegen_init_122();
/* 2237 */     wholestagecodegen_init_123();
/* 2238 */     wholestagecodegen_init_124();
/* 2239 */     wholestagecodegen_init_125();
/* 2240 */     wholestagecodegen_init_126();
/* 2241 */     wholestagecodegen_init_127();
/* 2242 */     wholestagecodegen_init_128();
/* 2243 */     wholestagecodegen_init_129();
/* 2244 */     wholestagecodegen_init_130();
/* 2245 */     wholestagecodegen_init_131();
/* 2246 */     wholestagecodegen_init_132();
/* 2247 */     wholestagecodegen_init_133();
/* 2248 */     wholestagecodegen_init_134();
/* 2249 */     wholestagecodegen_init_135();
/* 2250 */     wholestagecodegen_init_136();
/* 2251 */     wholestagecodegen_init_137();
/* 2252 */     wholestagecodegen_init_138();
/* 2253 */     wholestagecodegen_init_139();
/* 2254 */     wholestagecodegen_init_140();
/* 2255 */     wholestagecodegen_init_141();
/* 2256 */     wholestagecodegen_init_142();
/* 2257 */     wholestagecodegen_init_143();
/* 2258 */     wholestagecodegen_init_144();
/* 2259 */     wholestagecodegen_init_145();
/* 2260 */     wholestagecodegen_init_146();
/* 2261 */     wholestagecodegen_init_147();
/* 2262 */     wholestagecodegen_init_148();
/* 2263 */     wholestagecodegen_init_149();
/* 2264 */     wholestagecodegen_init_150();
/* 2265 */     wholestagecodegen_init_151();
/* 2266 */     wholestagecodegen_init_152();
/* 2267 */     wholestagecodegen_init_153();
/* 2268 */     wholestagecodegen_init_154();
/* 2269 */     wholestagecodegen_init_155();
/* 2270 */     wholestagecodegen_init_156();
/* 2271 */     wholestagecodegen_init_157();
/* 2272 */     wholestagecodegen_init_158();
/* 2273 */     wholestagecodegen_init_159();
/* 2274 */     wholestagecodegen_init_160();
/* 2275 */     wholestagecodegen_init_161();
/* 2276 */     wholestagecodegen_init_162();
/* 2277 */     wholestagecodegen_init_163();
/* 2278 */     wholestagecodegen_init_164();
/* 2279 */     wholestagecodegen_init_165();
/* 2280 */     wholestagecodegen_init_166();
/* 2281 */     wholestagecodegen_init_167();
/* 2282 */     wholestagecodegen_init_168();
/* 2283 */     wholestagecodegen_init_169();
/* 2284 */     wholestagecodegen_init_170();
/* 2285 */     wholestagecodegen_init_171();
/* 2286 */     wholestagecodegen_init_172();
/* 2287 */     wholestagecodegen_init_173();
/* 2288 */     wholestagecodegen_init_174();
/* 2289 */     wholestagecodegen_init_175();
/* 2290 */     wholestagecodegen_init_176();
/* 2291 */     wholestagecodegen_init_177();
/* 2292 */     wholestagecodegen_init_178();
/* 2293 */     wholestagecodegen_init_179();
/* 2294 */     wholestagecodegen_init_180();
/* 2295 */     wholestagecodegen_init_181();
/* 2296 */     wholestagecodegen_init_182();
/* 2297 */     wholestagecodegen_init_183();
/* 2298 */     wholestagecodegen_init_184();
/* 2299 */     wholestagecodegen_init_185();
/* 2300 */     wholestagecodegen_init_186();
/* 2301 */     wholestagecodegen_init_187();
/* 2302 */     wholestagecodegen_init_188();
/* 2303 */     wholestagecodegen_init_189();
/* 2304 */     wholestagecodegen_init_190();
/* 2305 */     wholestagecodegen_init_191();
/* 2306 */     wholestagecodegen_init_192();
/* 2307 */     wholestagecodegen_init_193();
/* 2308 */     wholestagecodegen_init_194();
/* 2309 */     wholestagecodegen_init_195();
/* 2310 */     wholestagecodegen_init_196();
/* 2311 */     wholestagecodegen_init_197();
/* 2312 */     wholestagecodegen_init_198();
/* 2313 */     wholestagecodegen_init_199();
/* 2314 */     wholestagecodegen_init_200();
/* 2315 */     wholestagecodegen_init_201();
/* 2316 */     wholestagecodegen_init_202();
/* 2317 */     wholestagecodegen_init_203();
/* 2318 */     wholestagecodegen_init_204();
/* 2319 */     wholestagecodegen_init_205();
/* 2320 */     wholestagecodegen_init_206();
/* 2321 */     wholestagecodegen_init_207();
/* 2322 */     wholestagecodegen_init_208();
/* 2323 */     wholestagecodegen_init_209();
/* 2324 */     wholestagecodegen_init_210();
/* 2325 */     wholestagecodegen_init_211();
/* 2326 */     wholestagecodegen_init_212();
/* 2327 */     wholestagecodegen_init_213();
/* 2328 */     wholestagecodegen_init_214();
/* 2329 */     wholestagecodegen_init_215();
/* 2330 */     wholestagecodegen_init_216();
/* 2331 */     wholestagecodegen_init_217();
/* 2332 */     wholestagecodegen_init_218();
/* 2333 */     wholestagecodegen_init_219();
/* 2334 */     wholestagecodegen_init_220();
/* 2335 */     wholestagecodegen_init_221();
/* 2336 */     wholestagecodegen_init_222();
/* 2337 */     wholestagecodegen_init_223();
/* 2338 */     wholestagecodegen_init_224();
/* 2339 */     wholestagecodegen_init_225();
/* 2340 */     wholestagecodegen_init_226();
/* 2341 */     wholestagecodegen_init_227();
/* 2342 */     wholestagecodegen_init_228();
/* 2343 */     wholestagecodegen_init_229();
/* 2344 */     wholestagecodegen_init_230();
/* 2345 */     wholestagecodegen_init_231();
/* 2346 */     wholestagecodegen_init_232();
/* 2347 */     wholestagecodegen_init_233();
/* 2348 */     wholestagecodegen_init_234();
/* 2349 */     wholestagecodegen_init_235();
/* 2350 */     wholestagecodegen_init_236();
/* 2351 */     wholestagecodegen_init_237();
/* 2352 */     wholestagecodegen_init_238();
/* 2353 */     wholestagecodegen_init_239();
/* 2354 */     wholestagecodegen_init_240();
/* 2355 */     wholestagecodegen_init_241();
/* 2356 */     wholestagecodegen_init_242();
/* 2357 */     wholestagecodegen_init_243();
/* 2358 */     wholestagecodegen_init_244();
/* 2359 */     wholestagecodegen_init_245();
/* 2360 */     wholestagecodegen_init_246();
/* 2361 */     wholestagecodegen_init_247();
/* 2362 */     wholestagecodegen_init_248();
/* 2363 */     wholestagecodegen_init_249();
/* 2364 */     wholestagecodegen_init_250();
/* 2365 */     wholestagecodegen_init_251();
/* 2366 */     wholestagecodegen_init_252();
/* 2367 */     wholestagecodegen_init_253();
/* 2368 */     wholestagecodegen_init_254();
/* 2369 */     wholestagecodegen_init_255();
/* 2370 */     wholestagecodegen_init_256();
/* 2371 */     wholestagecodegen_init_257();
/* 2372 */     wholestagecodegen_init_258();
/* 2373 */     wholestagecodegen_init_259();
/* 2374 */     wholestagecodegen_init_260();
/* 2375 */     wholestagecodegen_init_261();
/* 2376 */
/* 2377 */   }
/* 2378 */
/* 2379 */   private void wholestagecodegen_init_19() {
/* 2380 */     this.project_udf35 = (scala.Function1)project_scalaUDF35.userDefinedFunc();
/* 2381 */     this.project_scalaUDF36 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[41];
/* 2382 */     this.project_catalystConverter36 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF36.dataType());
/* 2383 */     this.project_converter36 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[41]).getChildren().apply(0))).dataType());
/* 2384 */     this.project_udf36 = (scala.Function1)project_scalaUDF36.userDefinedFunc();
/* 2385 */     this.project_scalaUDF37 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[42];
/* 2386 */     this.project_catalystConverter37 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF37.dataType());
/* 2387 */     this.project_converter37 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[42]).getChildren().apply(0))).dataType());
/* 2388 */
/* 2389 */   }
/* 2390 */
/* 2391 */   private void wholestagecodegen_init_147() {
/* 2392 */     this.project_udf291 = (scala.Function1)project_scalaUDF291.userDefinedFunc();
/* 2393 */     this.project_scalaUDF292 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[297];
/* 2394 */     this.project_catalystConverter292 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF292.dataType());
/* 2395 */     this.project_converter292 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[297]).getChildren().apply(0))).dataType());
/* 2396 */     this.project_udf292 = (scala.Function1)project_scalaUDF292.userDefinedFunc();
/* 2397 */     this.project_scalaUDF293 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[298];
/* 2398 */     this.project_catalystConverter293 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF293.dataType());
/* 2399 */     this.project_converter293 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[298]).getChildren().apply(0))).dataType());
/* 2400 */
/* 2401 */   }
/* 2402 */
/* 2403 */   private void wholestagecodegen_init_174() {
/* 2404 */     this.project_udf344 = (scala.Function1)project_scalaUDF344.userDefinedFunc();
/* 2405 */     this.project_values6 = null;
/* 2406 */     this.project_scalaUDF345 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[350];
/* 2407 */     this.project_catalystConverter345 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF345.dataType());
/* 2408 */     this.project_converter346 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[350]).getChildren().apply(0))).dataType());
/* 2409 */     this.project_udf345 = (scala.Function1)project_scalaUDF345.userDefinedFunc();
/* 2410 */     this.project_scalaUDF346 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[351];
/* 2411 */     this.project_catalystConverter346 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF346.dataType());
/* 2412 */     this.project_converter347 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[351]).getChildren().apply(0))).dataType());
/* 2413 */
/* 2414 */   }
/* 2415 */
/* 2416 */   private void wholestagecodegen_init_72() {
/* 2417 */     this.project_udf141 = (scala.Function1)project_scalaUDF141.userDefinedFunc();
/* 2418 */     this.project_scalaUDF142 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[147];
/* 2419 */     this.project_catalystConverter142 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF142.dataType());
/* 2420 */     this.project_converter142 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[147]).getChildren().apply(0))).dataType());
/* 2421 */     this.project_udf142 = (scala.Function1)project_scalaUDF142.userDefinedFunc();
/* 2422 */     this.project_scalaUDF143 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[148];
/* 2423 */     this.project_catalystConverter143 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF143.dataType());
/* 2424 */     this.project_converter143 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[148]).getChildren().apply(0))).dataType());
/* 2425 */
/* 2426 */   }
/* 2427 */
/* 2428 */   private void wholestagecodegen_init_132() {
/* 2429 */     this.project_udf261 = (scala.Function1)project_scalaUDF261.userDefinedFunc();
/* 2430 */     this.project_scalaUDF262 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[267];
/* 2431 */     this.project_catalystConverter262 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF262.dataType());
/* 2432 */     this.project_converter262 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[267]).getChildren().apply(0))).dataType());
/* 2433 */     this.project_udf262 = (scala.Function1)project_scalaUDF262.userDefinedFunc();
/* 2434 */     this.project_scalaUDF263 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[268];
/* 2435 */     this.project_catalystConverter263 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF263.dataType());
/* 2436 */     this.project_converter263 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[268]).getChildren().apply(0))).dataType());
/* 2437 */
/* 2438 */   }
/* 2439 */
/* 2440 */   private void wholestagecodegen_init_9() {
/* 2441 */     this.project_udf15 = (scala.Function1)project_scalaUDF15.userDefinedFunc();
/* 2442 */     this.project_scalaUDF16 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[21];
/* 2443 */     this.project_catalystConverter16 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF16.dataType());
/* 2444 */     this.project_converter16 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[21]).getChildren().apply(0))).dataType());
/* 2445 */     this.project_udf16 = (scala.Function1)project_scalaUDF16.userDefinedFunc();
/* 2446 */     this.project_scalaUDF17 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[22];
/* 2447 */     this.project_catalystConverter17 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF17.dataType());
/* 2448 */     this.project_converter17 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[22]).getChildren().apply(0))).dataType());
/* 2449 */
/* 2450 */   }
/* 2451 */
/* 2452 */   private void wholestagecodegen_init_168() {
/* 2453 */     this.project_udf333 = (scala.Function1)project_scalaUDF333.userDefinedFunc();
/* 2454 */     this.project_scalaUDF334 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[339];
/* 2455 */     this.project_catalystConverter334 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF334.dataType());
/* 2456 */     this.project_converter334 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[339]).getChildren().apply(0))).dataType());
/* 2457 */     this.project_udf334 = (scala.Function1)project_scalaUDF334.userDefinedFunc();
/* 2458 */     this.project_scalaUDF335 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[340];
/* 2459 */     this.project_catalystConverter335 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF335.dataType());
/* 2460 */     this.project_converter335 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[340]).getChildren().apply(0))).dataType());
/* 2461 */
/* 2462 */   }
/* 2463 */
/* 2464 */   private void wholestagecodegen_init_93() {
/* 2465 */     this.project_udf183 = (scala.Function1)project_scalaUDF183.userDefinedFunc();
/* 2466 */     this.project_scalaUDF184 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[189];
/* 2467 */     this.project_catalystConverter184 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF184.dataType());
/* 2468 */     this.project_converter184 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[189]).getChildren().apply(0))).dataType());
/* 2469 */     this.project_udf184 = (scala.Function1)project_scalaUDF184.userDefinedFunc();
/* 2470 */     this.project_scalaUDF185 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[190];
/* 2471 */     this.project_catalystConverter185 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF185.dataType());
/* 2472 */     this.project_converter185 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[190]).getChildren().apply(0))).dataType());
/* 2473 */
/* 2474 */   }
/* 2475 */
/* 2476 */   private void wholestagecodegen_init_87() {
/* 2477 */     this.project_udf171 = (scala.Function1)project_scalaUDF171.userDefinedFunc();
/* 2478 */     this.project_values3 = null;
/* 2479 */     this.project_scalaUDF172 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[177];
/* 2480 */     this.project_catalystConverter172 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF172.dataType());
/* 2481 */     this.project_converter172 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[177]).getChildren().apply(0))).dataType());
/* 2482 */     this.project_udf172 = (scala.Function1)project_scalaUDF172.userDefinedFunc();
/* 2483 */     this.project_scalaUDF173 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[178];
/* 2484 */     this.project_catalystConverter173 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF173.dataType());
/* 2485 */     this.project_converter173 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[178]).getChildren().apply(0))).dataType());
/* 2486 */
/* 2487 */   }
/* 2488 */
/* 2489 */   private void wholestagecodegen_init_0() {
/* 2490 */     sort_needToSort = true;
/* 2491 */     this.sort_plan = (org.apache.spark.sql.execution.SortExec) references[0];
/* 2492 */     sort_sorter = sort_plan.createSorter();
/* 2493 */     sort_metrics = org.apache.spark.TaskContext.get().taskMetrics();
/* 2494 */
/* 2495 */     inputadapter_input = inputs[0];
/* 2496 */     this.sort_peakMemory = (org.apache.spark.sql.execution.metric.SQLMetric) references[1];
/* 2497 */     this.sort_spillSize = (org.apache.spark.sql.execution.metric.SQLMetric) references[2];
/* 2498 */     this.sort_sortTime = (org.apache.spark.sql.execution.metric.SQLMetric) references[3];
/* 2499 */     this.sample_numOutputRows = (org.apache.spark.sql.execution.metric.SQLMetric) references[4];
/* 2500 */     sample_sampler = new org.apache.spark.util.random.BernoulliCellSampler<UnsafeRow>(0.7, 1.0, false);
/* 2501 */     sample_sampler.setSeed(1099L + partitionIndex);
/* 2502 */     sample_result = new UnsafeRow(28);
/* 2503 */     this.sample_holder = new org.apache.spark.sql.catalyst.expressions.codegen.BufferHolder(sample_result, 608);
/* 2504 */     this.sample_rowWriter = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(sample_holder, 28);
/* 2505 */     this.project_scalaUDF = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[5];
/* 2506 */
/* 2507 */   }
/* 2508 */
/* 2509 */   private void wholestagecodegen_init_10() {
/* 2510 */     this.project_udf17 = (scala.Function1)project_scalaUDF17.userDefinedFunc();
/* 2511 */     this.project_scalaUDF18 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[23];
/* 2512 */     this.project_catalystConverter18 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF18.dataType());
/* 2513 */     this.project_converter18 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[23]).getChildren().apply(0))).dataType());
/* 2514 */     this.project_udf18 = (scala.Function1)project_scalaUDF18.userDefinedFunc();
/* 2515 */     this.project_scalaUDF19 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[24];
/* 2516 */     this.project_catalystConverter19 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF19.dataType());
/* 2517 */     this.project_converter19 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[24]).getChildren().apply(0))).dataType());
/* 2518 */
/* 2519 */   }
/* 2520 */
/* 2521 */   private void wholestagecodegen_init_153() {
/* 2522 */     this.project_udf303 = (scala.Function1)project_scalaUDF303.userDefinedFunc();
/* 2523 */     this.project_scalaUDF304 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[309];
/* 2524 */     this.project_catalystConverter304 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF304.dataType());
/* 2525 */     this.project_converter304 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[309]).getChildren().apply(0))).dataType());
/* 2526 */     this.project_udf304 = (scala.Function1)project_scalaUDF304.userDefinedFunc();
/* 2527 */     this.project_scalaUDF305 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[310];
/* 2528 */     this.project_catalystConverter305 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF305.dataType());
/* 2529 */     this.project_converter305 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[310]).getChildren().apply(0))).dataType());
/* 2530 */
/* 2531 */   }
/* 2532 */
/* 2533 */   private void wholestagecodegen_init_180() {
/* 2534 */     this.project_udf356 = (scala.Function1)project_scalaUDF356.userDefinedFunc();
/* 2535 */     this.project_scalaUDF357 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[362];
/* 2536 */     this.project_catalystConverter357 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF357.dataType());
/* 2537 */     this.project_converter358 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[362]).getChildren().apply(0))).dataType());
/* 2538 */     this.project_udf357 = (scala.Function1)project_scalaUDF357.userDefinedFunc();
/* 2539 */     this.project_scalaUDF358 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[363];
/* 2540 */     this.project_catalystConverter358 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF358.dataType());
/* 2541 */     this.project_converter359 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[363]).getChildren().apply(0))).dataType());
/* 2542 */
/* 2543 */   }
/* 2544 */
/* 2545 */   private void wholestagecodegen_init_252() {
/* 2546 */     this.project_udf498 = (scala.Function1)project_scalaUDF498.userDefinedFunc();
/* 2547 */     this.project_scalaUDF499 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[504];
/* 2548 */     this.project_catalystConverter499 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF499.dataType());
/* 2549 */     this.project_converter502 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[504]).getChildren().apply(0))).dataType());
/* 2550 */     this.project_udf499 = (scala.Function1)project_scalaUDF499.userDefinedFunc();
/* 2551 */     this.project_scalaUDF500 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[505];
/* 2552 */     this.project_catalystConverter500 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF500.dataType());
/* 2553 */     this.project_converter503 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[505]).getChildren().apply(0))).dataType());
/* 2554 */
/* 2555 */   }
/* 2556 */
/* 2557 */   private void wholestagecodegen_init_231() {
/* 2558 */     this.project_converter460 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[462]).getChildren().apply(1))).dataType());
/* 2559 */     this.project_udf457 = (scala.Function2)project_scalaUDF457.userDefinedFunc();
/* 2560 */     this.project_scalaUDF458 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[463];
/* 2561 */     this.project_catalystConverter458 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF458.dataType());
/* 2562 */     this.project_converter461 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[463]).getChildren().apply(0))).dataType());
/* 2563 */     this.project_udf458 = (scala.Function1)project_scalaUDF458.userDefinedFunc();
/* 2564 */     this.project_scalaUDF459 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[464];
/* 2565 */
/* 2566 */   }
/* 2567 */
/* 2568 */   private void wholestagecodegen_init_246() {
/* 2569 */     this.project_udf486 = (scala.Function1)project_scalaUDF486.userDefinedFunc();
/* 2570 */     this.project_scalaUDF487 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[492];
/* 2571 */     this.project_catalystConverter487 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF487.dataType());
/* 2572 */     this.project_converter490 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[492]).getChildren().apply(0))).dataType());
/* 2573 */     this.project_udf487 = (scala.Function1)project_scalaUDF487.userDefinedFunc();
/* 2574 */     this.project_scalaUDF488 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[493];
/* 2575 */     this.project_catalystConverter488 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF488.dataType());
/* 2576 */     this.project_converter491 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[493]).getChildren().apply(0))).dataType());
/* 2577 */
/* 2578 */   }
/* 2579 */
/* 2580 */   private void wholestagecodegen_init_261() {
/* 2581 */     this.project_arrayWriter4 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeArrayWriter();
/* 2582 */     this.project_arrayWriter5 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeArrayWriter();
/* 2583 */
/* 2584 */   }
/* 2585 */
/* 2586 */   private void wholestagecodegen_init_255() {
/* 2587 */     this.project_udf504 = (scala.Function1)project_scalaUDF504.userDefinedFunc();
/* 2588 */     this.project_scalaUDF505 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[510];
/* 2589 */     this.project_catalystConverter505 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF505.dataType());
/* 2590 */     this.project_converter508 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[510]).getChildren().apply(0))).dataType());
/* 2591 */     this.project_udf505 = (scala.Function1)project_scalaUDF505.userDefinedFunc();
/* 2592 */     this.project_scalaUDF506 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[511];
/* 2593 */     this.project_catalystConverter506 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF506.dataType());
/* 2594 */     this.project_converter509 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[511]).getChildren().apply(0))).dataType());
/* 2595 */
/* 2596 */   }
/* 2597 */
/* 2598 */   private void wholestagecodegen_init_114() {
/* 2599 */     this.project_udf225 = (scala.Function1)project_scalaUDF225.userDefinedFunc();
/* 2600 */     this.project_scalaUDF226 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[231];
/* 2601 */     this.project_catalystConverter226 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF226.dataType());
/* 2602 */     this.project_converter226 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[231]).getChildren().apply(0))).dataType());
/* 2603 */     this.project_udf226 = (scala.Function1)project_scalaUDF226.userDefinedFunc();
/* 2604 */     this.project_scalaUDF227 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[232];
/* 2605 */     this.project_catalystConverter227 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF227.dataType());
/* 2606 */     this.project_converter227 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[232]).getChildren().apply(0))).dataType());
/* 2607 */
/* 2608 */   }
/* 2609 */
/* 2610 */   private void wholestagecodegen_init_120() {
/* 2611 */     this.project_udf237 = (scala.Function1)project_scalaUDF237.userDefinedFunc();
/* 2612 */     this.project_scalaUDF238 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[243];
/* 2613 */     this.project_catalystConverter238 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF238.dataType());
/* 2614 */     this.project_converter238 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[243]).getChildren().apply(0))).dataType());
/* 2615 */     this.project_udf238 = (scala.Function1)project_scalaUDF238.userDefinedFunc();
/* 2616 */     this.project_scalaUDF239 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[244];
/* 2617 */     this.project_catalystConverter239 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF239.dataType());
/* 2618 */     this.project_converter239 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[244]).getChildren().apply(0))).dataType());
/* 2619 */
/* 2620 */   }
/* 2621 */
/* 2622 */   private void wholestagecodegen_init_213() {
/* 2623 */     this.project_udf421 = (scala.Function1)project_scalaUDF421.userDefinedFunc();
/* 2624 */     this.project_scalaUDF422 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[427];
/* 2625 */     this.project_catalystConverter422 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF422.dataType());
/* 2626 */     this.project_converter424 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[427]).getChildren().apply(0))).dataType());
/* 2627 */     this.project_udf422 = (scala.Function1)project_scalaUDF422.userDefinedFunc();
/* 2628 */     this.project_scalaUDF423 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[428];
/* 2629 */     this.project_catalystConverter423 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF423.dataType());
/* 2630 */     this.project_converter425 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[428]).getChildren().apply(0))).dataType());
/* 2631 */
/* 2632 */   }
/* 2633 */
/* 2634 */   private void wholestagecodegen_init_228() {
/* 2635 */     this.project_udf451 = (scala.Function1)project_scalaUDF451.userDefinedFunc();
/* 2636 */     this.project_scalaUDF452 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[457];
/* 2637 */     this.project_catalystConverter452 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF452.dataType());
/* 2638 */     this.project_converter454 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[457]).getChildren().apply(0))).dataType());
/* 2639 */     this.project_udf452 = (scala.Function1)project_scalaUDF452.userDefinedFunc();
/* 2640 */     this.project_scalaUDF453 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[458];
/* 2641 */     this.project_catalystConverter453 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF453.dataType());
/* 2642 */     this.project_converter455 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[458]).getChildren().apply(0))).dataType());
/* 2643 */
/* 2644 */   }
/* 2645 */
/* 2646 */   private void wholestagecodegen_init_75() {
/* 2647 */     this.project_udf147 = (scala.Function1)project_scalaUDF147.userDefinedFunc();
/* 2648 */     this.project_scalaUDF148 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[153];
/* 2649 */     this.project_catalystConverter148 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF148.dataType());
/* 2650 */     this.project_converter148 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[153]).getChildren().apply(0))).dataType());
/* 2651 */     this.project_udf148 = (scala.Function1)project_scalaUDF148.userDefinedFunc();
/* 2652 */     this.project_scalaUDF149 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[154];
/* 2653 */     this.project_catalystConverter149 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF149.dataType());
/* 2654 */     this.project_converter149 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[154]).getChildren().apply(0))).dataType());
/* 2655 */
/* 2656 */   }
/* 2657 */
/* 2658 */   private void wholestagecodegen_init_135() {
/* 2659 */     this.project_udf267 = (scala.Function1)project_scalaUDF267.userDefinedFunc();
/* 2660 */     this.project_scalaUDF268 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[273];
/* 2661 */     this.project_catalystConverter268 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF268.dataType());
/* 2662 */     this.project_converter268 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[273]).getChildren().apply(0))).dataType());
/* 2663 */     this.project_udf268 = (scala.Function1)project_scalaUDF268.userDefinedFunc();
/* 2664 */     this.project_scalaUDF269 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[274];
/* 2665 */     this.project_catalystConverter269 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF269.dataType());
/* 2666 */     this.project_converter269 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[274]).getChildren().apply(0))).dataType());
/* 2667 */
/* 2668 */   }
/* 2669 */
/* 2670 */   private void wholestagecodegen_init_234() {
/* 2671 */     this.project_udf462 = (scala.Function1)project_scalaUDF462.userDefinedFunc();
/* 2672 */     this.project_scalaUDF463 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[468];
/* 2673 */     this.project_catalystConverter463 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF463.dataType());
/* 2674 */     this.project_converter466 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[468]).getChildren().apply(0))).dataType());
/* 2675 */     this.project_udf463 = (scala.Function1)project_scalaUDF463.userDefinedFunc();
/* 2676 */     this.project_scalaUDF464 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[469];
/* 2677 */     this.project_catalystConverter464 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF464.dataType());
/* 2678 */     this.project_converter467 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[469]).getChildren().apply(0))).dataType());
/* 2679 */
/* 2680 */   }
/* 2681 */
/* 2682 */   private void wholestagecodegen_init_141() {
/* 2683 */     this.project_udf279 = (scala.Function1)project_scalaUDF279.userDefinedFunc();
/* 2684 */     this.project_scalaUDF280 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[285];
/* 2685 */     this.project_catalystConverter280 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF280.dataType());
/* 2686 */     this.project_converter280 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[285]).getChildren().apply(0))).dataType());
/* 2687 */     this.project_udf280 = (scala.Function1)project_scalaUDF280.userDefinedFunc();
/* 2688 */     this.project_scalaUDF281 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[286];
/* 2689 */     this.project_catalystConverter281 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF281.dataType());
/* 2690 */     this.project_converter281 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[286]).getChildren().apply(0))).dataType());
/* 2691 */
/* 2692 */   }
/* 2693 */
/* 2694 */   private void wholestagecodegen_init_60() {
/* 2695 */     this.project_udf117 = (scala.Function1)project_scalaUDF117.userDefinedFunc();
/* 2696 */     this.project_scalaUDF118 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[123];
/* 2697 */     this.project_catalystConverter118 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF118.dataType());
/* 2698 */     this.project_converter118 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[123]).getChildren().apply(0))).dataType());
/* 2699 */     this.project_udf118 = (scala.Function1)project_scalaUDF118.userDefinedFunc();
/* 2700 */     this.project_scalaUDF119 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[124];
/* 2701 */     this.project_catalystConverter119 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF119.dataType());
/* 2702 */     this.project_converter119 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[124]).getChildren().apply(0))).dataType());
/* 2703 */
/* 2704 */   }
/* 2705 */
/* 2706 */   private void wholestagecodegen_init_69() {
/* 2707 */     this.project_udf135 = (scala.Function1)project_scalaUDF135.userDefinedFunc();
/* 2708 */     this.project_scalaUDF136 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[141];
/* 2709 */     this.project_catalystConverter136 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF136.dataType());
/* 2710 */     this.project_converter136 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[141]).getChildren().apply(0))).dataType());
/* 2711 */     this.project_udf136 = (scala.Function1)project_scalaUDF136.userDefinedFunc();
/* 2712 */     this.project_scalaUDF137 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[142];
/* 2713 */     this.project_catalystConverter137 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF137.dataType());
/* 2714 */     this.project_converter137 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[142]).getChildren().apply(0))).dataType());
/* 2715 */
/* 2716 */   }
/* 2717 */
/* 2718 */   private void wholestagecodegen_init_240() {
/* 2719 */     this.project_udf474 = (scala.Function1)project_scalaUDF474.userDefinedFunc();
/* 2720 */     this.project_scalaUDF475 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[480];
/* 2721 */     this.project_catalystConverter475 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF475.dataType());
/* 2722 */     this.project_converter478 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[480]).getChildren().apply(0))).dataType());
/* 2723 */     this.project_udf475 = (scala.Function1)project_scalaUDF475.userDefinedFunc();
/* 2724 */     this.project_scalaUDF476 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[481];
/* 2725 */     this.project_catalystConverter476 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF476.dataType());
/* 2726 */     this.project_converter479 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[481]).getChildren().apply(0))).dataType());
/* 2727 */
/* 2728 */   }
/* 2729 */
/* 2730 */   private void wholestagecodegen_init_249() {
/* 2731 */     this.project_udf492 = (scala.Function1)project_scalaUDF492.userDefinedFunc();
/* 2732 */     this.project_scalaUDF493 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[498];
/* 2733 */     this.project_catalystConverter493 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF493.dataType());
/* 2734 */     this.project_converter496 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[498]).getChildren().apply(0))).dataType());
/* 2735 */     this.project_udf493 = (scala.Function1)project_scalaUDF493.userDefinedFunc();
/* 2736 */     this.project_scalaUDF494 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[499];
/* 2737 */     this.project_catalystConverter494 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF494.dataType());
/* 2738 */     this.project_converter497 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[499]).getChildren().apply(0))).dataType());
/* 2739 */
/* 2740 */   }
/* 2741 */
/* 2742 */   private void wholestagecodegen_init_96() {
/* 2743 */     this.project_udf189 = (scala.Function1)project_scalaUDF189.userDefinedFunc();
/* 2744 */     this.project_scalaUDF190 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[195];
/* 2745 */     this.project_catalystConverter190 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF190.dataType());
/* 2746 */     this.project_converter190 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[195]).getChildren().apply(0))).dataType());
/* 2747 */     this.project_udf190 = (scala.Function1)project_scalaUDF190.userDefinedFunc();
/* 2748 */     this.project_scalaUDF191 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[196];
/* 2749 */     this.project_catalystConverter191 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF191.dataType());
/* 2750 */     this.project_converter191 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[196]).getChildren().apply(0))).dataType());
/* 2751 */
/* 2752 */   }
/* 2753 */
/* 2754 */   private void wholestagecodegen_init_129() {
/* 2755 */     this.project_udf255 = (scala.Function1)project_scalaUDF255.userDefinedFunc();
/* 2756 */     this.project_scalaUDF256 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[261];
/* 2757 */     this.project_catalystConverter256 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF256.dataType());
/* 2758 */     this.project_converter256 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[261]).getChildren().apply(0))).dataType());
/* 2759 */     this.project_udf256 = (scala.Function1)project_scalaUDF256.userDefinedFunc();
/* 2760 */     this.project_scalaUDF257 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[262];
/* 2761 */     this.project_catalystConverter257 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF257.dataType());
/* 2762 */     this.project_converter257 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[262]).getChildren().apply(0))).dataType());
/* 2763 */
/* 2764 */   }
/* 2765 */
/* 2766 */   private void wholestagecodegen_init_162() {
/* 2767 */     this.project_udf321 = (scala.Function1)project_scalaUDF321.userDefinedFunc();
/* 2768 */     this.project_scalaUDF322 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[327];
/* 2769 */     this.project_catalystConverter322 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF322.dataType());
/* 2770 */     this.project_converter322 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[327]).getChildren().apply(0))).dataType());
/* 2771 */     this.project_udf322 = (scala.Function1)project_scalaUDF322.userDefinedFunc();
/* 2772 */     this.project_scalaUDF323 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[328];
/* 2773 */     this.project_catalystConverter323 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF323.dataType());
/* 2774 */     this.project_converter323 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[328]).getChildren().apply(0))).dataType());
/* 2775 */
/* 2776 */   }
/* 2777 */
/* 2778 */   private void wholestagecodegen_init_3() {
/* 2779 */     this.project_udf3 = (scala.Function1)project_scalaUDF3.userDefinedFunc();
/* 2780 */     this.project_scalaUDF4 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[9];
/* 2781 */     this.project_catalystConverter4 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF4.dataType());
/* 2782 */     this.project_converter4 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[9]).getChildren().apply(0))).dataType());
/* 2783 */     this.project_udf4 = (scala.Function1)project_scalaUDF4.userDefinedFunc();
/* 2784 */     this.project_scalaUDF5 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[10];
/* 2785 */     this.project_catalystConverter5 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF5.dataType());
/* 2786 */     this.project_converter5 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[10]).getChildren().apply(0))).dataType());
/* 2787 */
/* 2788 */   }
/* 2789 */
/* 2790 */   private void wholestagecodegen_init_156() {
/* 2791 */     this.project_udf309 = (scala.Function1)project_scalaUDF309.userDefinedFunc();
/* 2792 */     this.project_scalaUDF310 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[315];
/* 2793 */     this.project_catalystConverter310 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF310.dataType());
/* 2794 */     this.project_converter310 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[315]).getChildren().apply(0))).dataType());
/* 2795 */     this.project_udf310 = (scala.Function1)project_scalaUDF310.userDefinedFunc();
/* 2796 */     this.project_scalaUDF311 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[316];
/* 2797 */     this.project_catalystConverter311 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF311.dataType());
/* 2798 */     this.project_converter311 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[316]).getChildren().apply(0))).dataType());
/* 2799 */
/* 2800 */   }
/* 2801 */
/* 2802 */   private void wholestagecodegen_init_81() {
/* 2803 */     this.project_udf159 = (scala.Function1)project_scalaUDF159.userDefinedFunc();
/* 2804 */     this.project_scalaUDF160 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[165];
/* 2805 */     this.project_catalystConverter160 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF160.dataType());
/* 2806 */     this.project_converter160 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[165]).getChildren().apply(0))).dataType());
/* 2807 */     this.project_udf160 = (scala.Function1)project_scalaUDF160.userDefinedFunc();
/* 2808 */     this.project_scalaUDF161 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[166];
/* 2809 */     this.project_catalystConverter161 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF161.dataType());
/* 2810 */     this.project_converter161 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[166]).getChildren().apply(0))).dataType());
/* 2811 */
/* 2812 */   }
/* 2813 */
/* 2814 */   private void wholestagecodegen_init_54() {
/* 2815 */     this.project_udf105 = (scala.Function1)project_scalaUDF105.userDefinedFunc();
/* 2816 */     this.project_scalaUDF106 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[111];
/* 2817 */     this.project_catalystConverter106 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF106.dataType());
/* 2818 */     this.project_converter106 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[111]).getChildren().apply(0))).dataType());
/* 2819 */     this.project_udf106 = (scala.Function1)project_scalaUDF106.userDefinedFunc();
/* 2820 */     this.project_scalaUDF107 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[112];
/* 2821 */     this.project_catalystConverter107 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF107.dataType());
/* 2822 */     this.project_converter107 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[112]).getChildren().apply(0))).dataType());
/* 2823 */
/* 2824 */   }
/* 2825 */
/* 2826 */   private void wholestagecodegen_init_138() {
/* 2827 */     this.project_udf273 = (scala.Function1)project_scalaUDF273.userDefinedFunc();
/* 2828 */     this.project_scalaUDF274 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[279];
/* 2829 */     this.project_catalystConverter274 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF274.dataType());
/* 2830 */     this.project_converter274 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[279]).getChildren().apply(0))).dataType());
/* 2831 */     this.project_udf274 = (scala.Function1)project_scalaUDF274.userDefinedFunc();
/* 2832 */     this.project_scalaUDF275 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[280];
/* 2833 */     this.project_catalystConverter275 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF275.dataType());
/* 2834 */     this.project_converter275 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[280]).getChildren().apply(0))).dataType());
/* 2835 */
/* 2836 */   }
/* 2837 */
/* 2838 */   private void wholestagecodegen_init_36() {
/* 2839 */     this.project_udf69 = (scala.Function1)project_scalaUDF69.userDefinedFunc();
/* 2840 */     this.project_scalaUDF70 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[75];
/* 2841 */     this.project_catalystConverter70 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF70.dataType());
/* 2842 */     this.project_converter70 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[75]).getChildren().apply(0))).dataType());
/* 2843 */     this.project_udf70 = (scala.Function1)project_scalaUDF70.userDefinedFunc();
/* 2844 */     this.project_scalaUDF71 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[76];
/* 2845 */     this.project_catalystConverter71 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF71.dataType());
/* 2846 */     this.project_converter71 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[76]).getChildren().apply(0))).dataType());
/* 2847 */
/* 2848 */   }
/* 2849 */
/* 2850 */   private void wholestagecodegen_init_237() {
/* 2851 */     this.project_udf468 = (scala.Function1)project_scalaUDF468.userDefinedFunc();
/* 2852 */     this.project_scalaUDF469 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[474];
/* 2853 */     this.project_catalystConverter469 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF469.dataType());
/* 2854 */     this.project_converter472 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[474]).getChildren().apply(0))).dataType());
/* 2855 */     this.project_udf469 = (scala.Function1)project_scalaUDF469.userDefinedFunc();
/* 2856 */     this.project_scalaUDF470 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[475];
/* 2857 */     this.project_catalystConverter470 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF470.dataType());
/* 2858 */     this.project_converter473 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[475]).getChildren().apply(0))).dataType());
/* 2859 */
/* 2860 */   }
/* 2861 */
/* 2862 */   private void wholestagecodegen_init_84() {
/* 2863 */     this.project_udf165 = (scala.Function1)project_scalaUDF165.userDefinedFunc();
/* 2864 */     this.project_scalaUDF166 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[171];
/* 2865 */     this.project_catalystConverter166 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF166.dataType());
/* 2866 */     this.project_converter166 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[171]).getChildren().apply(0))).dataType());
/* 2867 */     this.project_udf166 = (scala.Function1)project_scalaUDF166.userDefinedFunc();
/* 2868 */     this.project_scalaUDF167 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[172];
/* 2869 */     this.project_catalystConverter167 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF167.dataType());
/* 2870 */     this.project_converter167 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[172]).getChildren().apply(0))).dataType());
/* 2871 */
/* 2872 */   }
/* 2873 */
/* 2874 */   private void wholestagecodegen_init_123() {
/* 2875 */     this.project_udf243 = (scala.Function1)project_scalaUDF243.userDefinedFunc();
/* 2876 */     this.project_scalaUDF244 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[249];
/* 2877 */     this.project_catalystConverter244 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF244.dataType());
/* 2878 */     this.project_converter244 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[249]).getChildren().apply(0))).dataType());
/* 2879 */     this.project_udf244 = (scala.Function1)project_scalaUDF244.userDefinedFunc();
/* 2880 */     this.project_scalaUDF245 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[250];
/* 2881 */     this.project_catalystConverter245 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF245.dataType());
/* 2882 */     this.project_converter245 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[250]).getChildren().apply(0))).dataType());
/* 2883 */
/* 2884 */   }
/* 2885 */
/* 2886 */   private void wholestagecodegen_init_42() {
/* 2887 */     this.project_udf81 = (scala.Function1)project_scalaUDF81.userDefinedFunc();
/* 2888 */     this.project_scalaUDF82 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[87];
/* 2889 */     this.project_catalystConverter82 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF82.dataType());
/* 2890 */     this.project_converter82 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[87]).getChildren().apply(0))).dataType());
/* 2891 */     this.project_udf82 = (scala.Function1)project_scalaUDF82.userDefinedFunc();
/* 2892 */     this.project_scalaUDF83 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[88];
/* 2893 */     this.project_catalystConverter83 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF83.dataType());
/* 2894 */     this.project_converter83 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[88]).getChildren().apply(0))).dataType());
/* 2895 */
/* 2896 */   }
/* 2897 */
/* 2898 */   private void wholestagecodegen_init_57() {
/* 2899 */     this.project_udf111 = (scala.Function1)project_scalaUDF111.userDefinedFunc();
/* 2900 */     this.project_scalaUDF112 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[117];
/* 2901 */     this.project_catalystConverter112 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF112.dataType());
/* 2902 */     this.project_converter112 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[117]).getChildren().apply(0))).dataType());
/* 2903 */     this.project_udf112 = (scala.Function1)project_scalaUDF112.userDefinedFunc();
/* 2904 */     this.project_scalaUDF113 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[118];
/* 2905 */     this.project_catalystConverter113 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF113.dataType());
/* 2906 */     this.project_converter113 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[118]).getChildren().apply(0))).dataType());
/* 2907 */
/* 2908 */   }
/* 2909 */
/* 2910 */   private void wholestagecodegen_init_222() {
/* 2911 */     this.project_udf439 = (scala.Function1)project_scalaUDF439.userDefinedFunc();
/* 2912 */     this.project_scalaUDF440 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[445];
/* 2913 */     this.project_catalystConverter440 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF440.dataType());
/* 2914 */     this.project_converter442 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[445]).getChildren().apply(0))).dataType());
/* 2915 */     this.project_udf440 = (scala.Function1)project_scalaUDF440.userDefinedFunc();
/* 2916 */     this.project_scalaUDF441 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[446];
/* 2917 */     this.project_catalystConverter441 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF441.dataType());
/* 2918 */     this.project_converter443 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[446]).getChildren().apply(0))).dataType());
/* 2919 */
/* 2920 */   }
/* 2921 */
/* 2922 */   private void wholestagecodegen_init_117() {
/* 2923 */     this.project_udf231 = (scala.Function1)project_scalaUDF231.userDefinedFunc();
/* 2924 */     this.project_scalaUDF232 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[237];
/* 2925 */     this.project_catalystConverter232 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF232.dataType());
/* 2926 */     this.project_converter232 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[237]).getChildren().apply(0))).dataType());
/* 2927 */     this.project_udf232 = (scala.Function1)project_scalaUDF232.userDefinedFunc();
/* 2928 */     this.project_scalaUDF233 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[238];
/* 2929 */     this.project_catalystConverter233 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF233.dataType());
/* 2930 */     this.project_converter233 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[238]).getChildren().apply(0))).dataType());
/* 2931 */
/* 2932 */   }
/* 2933 */
/* 2934 */   private void wholestagecodegen_init_216() {
/* 2935 */     this.project_udf427 = (scala.Function1)project_scalaUDF427.userDefinedFunc();
/* 2936 */     this.project_scalaUDF428 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[433];
/* 2937 */     this.project_catalystConverter428 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF428.dataType());
/* 2938 */     this.project_converter430 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[433]).getChildren().apply(0))).dataType());
/* 2939 */     this.project_udf428 = (scala.Function1)project_scalaUDF428.userDefinedFunc();
/* 2940 */     this.project_scalaUDF429 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[434];
/* 2941 */     this.project_catalystConverter429 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF429.dataType());
/* 2942 */     this.project_converter431 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[434]).getChildren().apply(0))).dataType());
/* 2943 */
/* 2944 */   }
/* 2945 */
/* 2946 */   private void wholestagecodegen_init_144() {
/* 2947 */     this.project_udf285 = (scala.Function1)project_scalaUDF285.userDefinedFunc();
/* 2948 */     this.project_scalaUDF286 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[291];
/* 2949 */     this.project_catalystConverter286 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF286.dataType());
/* 2950 */     this.project_converter286 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[291]).getChildren().apply(0))).dataType());
/* 2951 */     this.project_udf286 = (scala.Function1)project_scalaUDF286.userDefinedFunc();
/* 2952 */     this.project_values5 = null;
/* 2953 */     this.project_scalaUDF287 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[292];
/* 2954 */     this.project_catalystConverter287 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF287.dataType());
/* 2955 */     this.project_converter287 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[292]).getChildren().apply(0))).dataType());
/* 2956 */
/* 2957 */   }
/* 2958 */
/* 2959 */   private void wholestagecodegen_init_243() {
/* 2960 */     this.project_udf480 = (scala.Function1)project_scalaUDF480.userDefinedFunc();
/* 2961 */     this.project_scalaUDF481 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[486];
/* 2962 */     this.project_catalystConverter481 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF481.dataType());
/* 2963 */     this.project_converter484 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[486]).getChildren().apply(0))).dataType());
/* 2964 */     this.project_udf481 = (scala.Function1)project_scalaUDF481.userDefinedFunc();
/* 2965 */     this.project_scalaUDF482 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[487];
/* 2966 */     this.project_catalystConverter482 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF482.dataType());
/* 2967 */     this.project_converter485 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[487]).getChildren().apply(0))).dataType());
/* 2968 */
/* 2969 */   }
/* 2970 */
/* 2971 */   private void wholestagecodegen_init_102() {
/* 2972 */     this.project_udf201 = (scala.Function1)project_scalaUDF201.userDefinedFunc();
/* 2973 */     this.project_scalaUDF202 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[207];
/* 2974 */     this.project_catalystConverter202 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF202.dataType());
/* 2975 */     this.project_converter202 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[207]).getChildren().apply(0))).dataType());
/* 2976 */     this.project_udf202 = (scala.Function1)project_scalaUDF202.userDefinedFunc();
/* 2977 */     this.project_scalaUDF203 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[208];
/* 2978 */     this.project_catalystConverter203 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF203.dataType());
/* 2979 */     this.project_converter203 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[208]).getChildren().apply(0))).dataType());
/* 2980 */
/* 2981 */   }
/* 2982 */
/* 2983 */   private void wholestagecodegen_init_201() {
/* 2984 */     this.project_udf398 = (scala.Function1)project_scalaUDF398.userDefinedFunc();
/* 2985 */     this.project_scalaUDF399 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[404];
/* 2986 */     this.project_catalystConverter399 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF399.dataType());
/* 2987 */     this.project_converter400 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[404]).getChildren().apply(0))).dataType());
/* 2988 */     this.project_converter401 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[404]).getChildren().apply(1))).dataType());
/* 2989 */     this.project_udf399 = (scala.Function2)project_scalaUDF399.userDefinedFunc();
/* 2990 */     this.project_scalaUDF400 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[405];
/* 2991 */
/* 2992 */   }
/* 2993 */
/* 2994 */   private void wholestagecodegen_init_78() {
/* 2995 */     this.project_udf153 = (scala.Function1)project_scalaUDF153.userDefinedFunc();
/* 2996 */     this.project_scalaUDF154 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[159];
/* 2997 */     this.project_catalystConverter154 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF154.dataType());
/* 2998 */     this.project_converter154 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[159]).getChildren().apply(0))).dataType());
/* 2999 */     this.project_udf154 = (scala.Function1)project_scalaUDF154.userDefinedFunc();
/* 3000 */     this.project_scalaUDF155 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[160];
/* 3001 */     this.project_catalystConverter155 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF155.dataType());
/* 3002 */     this.project_converter155 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[160]).getChildren().apply(0))).dataType());
/* 3003 */
/* 3004 */   }
/* 3005 */
/* 3006 */   private void wholestagecodegen_init_191() {
/* 3007 */     this.project_udf378 = (scala.Function1)project_scalaUDF378.userDefinedFunc();
/* 3008 */     this.project_scalaUDF379 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[384];
/* 3009 */     this.project_catalystConverter379 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF379.dataType());
/* 3010 */     this.project_converter380 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[384]).getChildren().apply(0))).dataType());
/* 3011 */     this.project_udf379 = (scala.Function1)project_scalaUDF379.userDefinedFunc();
/* 3012 */     this.project_scalaUDF380 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[385];
/* 3013 */     this.project_catalystConverter380 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF380.dataType());
/* 3014 */     this.project_converter381 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[385]).getChildren().apply(0))).dataType());
/* 3015 */
/* 3016 */   }
/* 3017 */
/* 3018 */   private void wholestagecodegen_init_63() {
/* 3019 */     this.project_udf123 = (scala.Function1)project_scalaUDF123.userDefinedFunc();
/* 3020 */     this.project_scalaUDF124 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[129];
/* 3021 */     this.project_catalystConverter124 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF124.dataType());
/* 3022 */     this.project_converter124 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[129]).getChildren().apply(0))).dataType());
/* 3023 */     this.project_udf124 = (scala.Function1)project_scalaUDF124.userDefinedFunc();
/* 3024 */     this.project_scalaUDF125 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[130];
/* 3025 */     this.project_catalystConverter125 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF125.dataType());
/* 3026 */     this.project_converter125 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[130]).getChildren().apply(0))).dataType());
/* 3027 */
/* 3028 */   }
/* 3029 */
/* 3030 */   private void wholestagecodegen_init_225() {
/* 3031 */     this.project_udf445 = (scala.Function1)project_scalaUDF445.userDefinedFunc();
/* 3032 */     this.project_scalaUDF446 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[451];
/* 3033 */     this.project_catalystConverter446 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF446.dataType());
/* 3034 */     this.project_converter448 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[451]).getChildren().apply(0))).dataType());
/* 3035 */     this.project_udf446 = (scala.Function1)project_scalaUDF446.userDefinedFunc();
/* 3036 */     this.project_scalaUDF447 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[452];
/* 3037 */     this.project_catalystConverter447 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF447.dataType());
/* 3038 */     this.project_converter449 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[452]).getChildren().apply(0))).dataType());
/* 3039 */
/* 3040 */   }
/* 3041 */
/* 3042 */   private void wholestagecodegen_init_105() {
/* 3043 */     this.project_udf207 = (scala.Function1)project_scalaUDF207.userDefinedFunc();
/* 3044 */     this.project_scalaUDF208 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[213];
/* 3045 */     this.project_catalystConverter208 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF208.dataType());
/* 3046 */     this.project_converter208 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[213]).getChildren().apply(0))).dataType());
/* 3047 */     this.project_udf208 = (scala.Function1)project_scalaUDF208.userDefinedFunc();
/* 3048 */     this.project_scalaUDF209 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[214];
/* 3049 */     this.project_catalystConverter209 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF209.dataType());
/* 3050 */     this.project_converter209 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[214]).getChildren().apply(0))).dataType());
/* 3051 */
/* 3052 */   }
/* 3053 */
/* 3054 */   private void wholestagecodegen_init_18() {
/* 3055 */     this.project_udf33 = (scala.Function1)project_scalaUDF33.userDefinedFunc();
/* 3056 */     this.project_scalaUDF34 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[39];
/* 3057 */     this.project_catalystConverter34 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF34.dataType());
/* 3058 */     this.project_converter34 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[39]).getChildren().apply(0))).dataType());
/* 3059 */     this.project_udf34 = (scala.Function1)project_scalaUDF34.userDefinedFunc();
/* 3060 */     this.project_scalaUDF35 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[40];
/* 3061 */     this.project_catalystConverter35 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF35.dataType());
/* 3062 */     this.project_converter35 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[40]).getChildren().apply(0))).dataType());
/* 3063 */
/* 3064 */   }
/* 3065 */
/* 3066 */   private void wholestagecodegen_init_194() {
/* 3067 */     this.project_udf384 = (scala.Function1)project_scalaUDF384.userDefinedFunc();
/* 3068 */     this.project_scalaUDF385 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[390];
/* 3069 */     this.project_catalystConverter385 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF385.dataType());
/* 3070 */     this.project_converter386 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[390]).getChildren().apply(0))).dataType());
/* 3071 */     this.project_udf385 = (scala.Function1)project_scalaUDF385.userDefinedFunc();
/* 3072 */     this.project_scalaUDF386 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[391];
/* 3073 */     this.project_catalystConverter386 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF386.dataType());
/* 3074 */     this.project_converter387 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[391]).getChildren().apply(0))).dataType());
/* 3075 */
/* 3076 */   }
/* 3077 */
/* 3078 */   private void wholestagecodegen_init_51() {
/* 3079 */     this.project_udf99 = (scala.Function1)project_scalaUDF99.userDefinedFunc();
/* 3080 */     this.project_scalaUDF100 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[105];
/* 3081 */     this.project_catalystConverter100 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF100.dataType());
/* 3082 */     this.project_converter100 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[105]).getChildren().apply(0))).dataType());
/* 3083 */     this.project_udf100 = (scala.Function1)project_scalaUDF100.userDefinedFunc();
/* 3084 */     this.project_scalaUDF101 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[106];
/* 3085 */     this.project_catalystConverter101 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF101.dataType());
/* 3086 */     this.project_converter101 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[106]).getChildren().apply(0))).dataType());
/* 3087 */
/* 3088 */   }
/* 3089 */
/* 3090 */   private void wholestagecodegen_init_45() {
/* 3091 */     this.project_udf87 = (scala.Function1)project_scalaUDF87.userDefinedFunc();
/* 3092 */     this.project_scalaUDF88 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[93];
/* 3093 */     this.project_catalystConverter88 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF88.dataType());
/* 3094 */     this.project_converter88 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[93]).getChildren().apply(0))).dataType());
/* 3095 */     this.project_udf88 = (scala.Function1)project_scalaUDF88.userDefinedFunc();
/* 3096 */     this.project_scalaUDF89 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[94];
/* 3097 */     this.project_catalystConverter89 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF89.dataType());
/* 3098 */     this.project_converter89 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[94]).getChildren().apply(0))).dataType());
/* 3099 */
/* 3100 */   }
/* 3101 */
/* 3102 */   private void wholestagecodegen_init_111() {
/* 3103 */     this.project_udf219 = (scala.Function1)project_scalaUDF219.userDefinedFunc();
/* 3104 */     this.project_scalaUDF220 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[225];
/* 3105 */     this.project_catalystConverter220 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF220.dataType());
/* 3106 */     this.project_converter220 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[225]).getChildren().apply(0))).dataType());
/* 3107 */     this.project_udf220 = (scala.Function1)project_scalaUDF220.userDefinedFunc();
/* 3108 */     this.project_scalaUDF221 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[226];
/* 3109 */     this.project_catalystConverter221 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF221.dataType());
/* 3110 */     this.project_converter221 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[226]).getChildren().apply(0))).dataType());
/* 3111 */
/* 3112 */   }
/* 3113 */
/* 3114 */   private void wholestagecodegen_init_126() {
/* 3115 */     this.project_udf249 = (scala.Function1)project_scalaUDF249.userDefinedFunc();
/* 3116 */     this.project_scalaUDF250 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[255];
/* 3117 */     this.project_catalystConverter250 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF250.dataType());
/* 3118 */     this.project_converter250 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[255]).getChildren().apply(0))).dataType());
/* 3119 */     this.project_udf250 = (scala.Function1)project_scalaUDF250.userDefinedFunc();
/* 3120 */     this.project_scalaUDF251 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[256];
/* 3121 */     this.project_catalystConverter251 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF251.dataType());
/* 3122 */     this.project_converter251 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[256]).getChildren().apply(0))).dataType());
/* 3123 */
/* 3124 */   }
/* 3125 */
/* 3126 */   private void wholestagecodegen_init_39() {
/* 3127 */     this.project_udf75 = (scala.Function1)project_scalaUDF75.userDefinedFunc();
/* 3128 */     this.project_scalaUDF76 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[81];
/* 3129 */     this.project_catalystConverter76 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF76.dataType());
/* 3130 */     this.project_converter76 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[81]).getChildren().apply(0))).dataType());
/* 3131 */     this.project_udf76 = (scala.Function1)project_scalaUDF76.userDefinedFunc();
/* 3132 */     this.project_scalaUDF77 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[82];
/* 3133 */     this.project_catalystConverter77 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF77.dataType());
/* 3134 */     this.project_converter77 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[82]).getChildren().apply(0))).dataType());
/* 3135 */
/* 3136 */   }
/* 3137 */
/* 3138 */   private void wholestagecodegen_init_219() {
/* 3139 */     this.project_udf433 = (scala.Function1)project_scalaUDF433.userDefinedFunc();
/* 3140 */     this.project_scalaUDF434 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[439];
/* 3141 */     this.project_catalystConverter434 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF434.dataType());
/* 3142 */     this.project_converter436 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[439]).getChildren().apply(0))).dataType());
/* 3143 */     this.project_udf434 = (scala.Function1)project_scalaUDF434.userDefinedFunc();
/* 3144 */     this.project_scalaUDF435 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[440];
/* 3145 */     this.project_catalystConverter435 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF435.dataType());
/* 3146 */     this.project_converter437 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[440]).getChildren().apply(0))).dataType());
/* 3147 */
/* 3148 */   }
/* 3149 */
/* 3150 */   private void wholestagecodegen_init_188() {
/* 3151 */     this.project_udf372 = (scala.Function1)project_scalaUDF372.userDefinedFunc();
/* 3152 */     this.project_scalaUDF373 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[378];
/* 3153 */     this.project_catalystConverter373 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF373.dataType());
/* 3154 */     this.project_converter374 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[378]).getChildren().apply(0))).dataType());
/* 3155 */     this.project_udf373 = (scala.Function1)project_scalaUDF373.userDefinedFunc();
/* 3156 */     this.project_scalaUDF374 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[379];
/* 3157 */     this.project_catalystConverter374 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF374.dataType());
/* 3158 */     this.project_converter375 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[379]).getChildren().apply(0))).dataType());
/* 3159 */
/* 3160 */   }
/* 3161 */
/* 3162 */   private void wholestagecodegen_init_66() {
/* 3163 */     this.project_udf129 = (scala.Function1)project_scalaUDF129.userDefinedFunc();
/* 3164 */     this.project_scalaUDF130 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[135];
/* 3165 */     this.project_catalystConverter130 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF130.dataType());
/* 3166 */     this.project_converter130 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[135]).getChildren().apply(0))).dataType());
/* 3167 */     this.project_udf130 = (scala.Function1)project_scalaUDF130.userDefinedFunc();
/* 3168 */     this.project_scalaUDF131 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[136];
/* 3169 */     this.project_catalystConverter131 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF131.dataType());
/* 3170 */     this.project_converter131 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[136]).getChildren().apply(0))).dataType());
/* 3171 */
/* 3172 */   }
/* 3173 */
/* 3174 */   private void wholestagecodegen_init_24() {
/* 3175 */     this.project_udf45 = (scala.Function1)project_scalaUDF45.userDefinedFunc();
/* 3176 */     this.project_scalaUDF46 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[51];
/* 3177 */     this.project_catalystConverter46 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF46.dataType());
/* 3178 */     this.project_converter46 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[51]).getChildren().apply(0))).dataType());
/* 3179 */     this.project_udf46 = (scala.Function1)project_scalaUDF46.userDefinedFunc();
/* 3180 */     this.project_scalaUDF47 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[52];
/* 3181 */     this.project_catalystConverter47 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF47.dataType());
/* 3182 */     this.project_converter47 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[52]).getChildren().apply(0))).dataType());
/* 3183 */
/* 3184 */   }
/* 3185 */
/* 3186 */   private void wholestagecodegen_init_30() {
/* 3187 */     this.project_udf57 = (scala.Function1)project_scalaUDF57.userDefinedFunc();
/* 3188 */     this.project_values1 = null;
/* 3189 */     this.project_scalaUDF58 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[63];
/* 3190 */     this.project_catalystConverter58 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF58.dataType());
/* 3191 */     this.project_converter58 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[63]).getChildren().apply(0))).dataType());
/* 3192 */     this.project_udf58 = (scala.Function1)project_scalaUDF58.userDefinedFunc();
/* 3193 */     this.project_scalaUDF59 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[64];
/* 3194 */     this.project_catalystConverter59 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF59.dataType());
/* 3195 */     this.project_converter59 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[64]).getChildren().apply(0))).dataType());
/* 3196 */
/* 3197 */   }
/* 3198 */
/* 3199 */   private void wholestagecodegen_init_173() {
/* 3200 */     this.project_catalystConverter343 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF343.dataType());
/* 3201 */     this.project_converter344 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[348]).getChildren().apply(0))).dataType());
/* 3202 */     this.project_udf343 = (scala.Function1)project_scalaUDF343.userDefinedFunc();
/* 3203 */     this.project_scalaUDF344 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[349];
/* 3204 */     this.project_catalystConverter344 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF344.dataType());
/* 3205 */     this.project_converter345 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[349]).getChildren().apply(0))).dataType());
/* 3206 */
/* 3207 */   }
/* 3208 */
/* 3209 */   private void wholestagecodegen_init_210() {
/* 3210 */     this.project_udf415 = (scala.Function1)project_scalaUDF415.userDefinedFunc();
/* 3211 */     this.project_scalaUDF416 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[421];
/* 3212 */     this.project_catalystConverter416 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF416.dataType());
/* 3213 */     this.project_converter418 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[421]).getChildren().apply(0))).dataType());
/* 3214 */     this.project_udf416 = (scala.Function1)project_scalaUDF416.userDefinedFunc();
/* 3215 */     this.project_scalaUDF417 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[422];
/* 3216 */     this.project_catalystConverter417 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF417.dataType());
/* 3217 */     this.project_converter419 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[422]).getChildren().apply(0))).dataType());
/* 3218 */
/* 3219 */   }
/* 3220 */
/* 3221 */   private void wholestagecodegen_init_204() {
/* 3222 */     this.project_udf403 = (scala.Function1)project_scalaUDF403.userDefinedFunc();
/* 3223 */     this.project_scalaUDF404 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[409];
/* 3224 */     this.project_catalystConverter404 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF404.dataType());
/* 3225 */     this.project_converter406 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[409]).getChildren().apply(0))).dataType());
/* 3226 */     this.project_udf404 = (scala.Function1)project_scalaUDF404.userDefinedFunc();
/* 3227 */     this.project_scalaUDF405 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[410];
/* 3228 */     this.project_catalystConverter405 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF405.dataType());
/* 3229 */     this.project_converter407 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[410]).getChildren().apply(0))).dataType());
/* 3230 */
/* 3231 */   }
/* 3232 */
/* 3233 */   private void wholestagecodegen_init_176() {
/* 3234 */     this.project_udf348 = (scala.Function1)project_scalaUDF348.userDefinedFunc();
/* 3235 */     this.project_scalaUDF349 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[354];
/* 3236 */     this.project_catalystConverter349 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF349.dataType());
/* 3237 */     this.project_converter350 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[354]).getChildren().apply(0))).dataType());
/* 3238 */     this.project_udf349 = (scala.Function1)project_scalaUDF349.userDefinedFunc();
/* 3239 */     this.project_scalaUDF350 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[355];
/* 3240 */     this.project_catalystConverter350 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF350.dataType());
/* 3241 */     this.project_converter351 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[355]).getChildren().apply(0))).dataType());
/* 3242 */
/* 3243 */   }
/* 3244 */
/* 3245 */   private void wholestagecodegen_init_33() {
/* 3246 */     this.project_udf63 = (scala.Function1)project_scalaUDF63.userDefinedFunc();
/* 3247 */     this.project_scalaUDF64 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[69];
/* 3248 */     this.project_catalystConverter64 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF64.dataType());
/* 3249 */     this.project_converter64 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[69]).getChildren().apply(0))).dataType());
/* 3250 */     this.project_udf64 = (scala.Function1)project_scalaUDF64.userDefinedFunc();
/* 3251 */     this.project_scalaUDF65 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[70];
/* 3252 */     this.project_catalystConverter65 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF65.dataType());
/* 3253 */     this.project_converter65 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[70]).getChildren().apply(0))).dataType());
/* 3254 */
/* 3255 */   }
/* 3256 */
/* 3257 */   private void wholestagecodegen_init_254() {
/* 3258 */     this.project_udf502 = (scala.Function1)project_scalaUDF502.userDefinedFunc();
/* 3259 */     this.project_scalaUDF503 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[508];
/* 3260 */     this.project_catalystConverter503 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF503.dataType());
/* 3261 */     this.project_converter506 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[508]).getChildren().apply(0))).dataType());
/* 3262 */     this.project_udf503 = (scala.Function1)project_scalaUDF503.userDefinedFunc();
/* 3263 */     this.project_scalaUDF504 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[509];
/* 3264 */     this.project_catalystConverter504 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF504.dataType());
/* 3265 */     this.project_converter507 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[509]).getChildren().apply(0))).dataType());
/* 3266 */
/* 3267 */   }
/* 3268 */
/* 3269 */   private void wholestagecodegen_init_207() {
/* 3270 */     this.project_udf409 = (scala.Function1)project_scalaUDF409.userDefinedFunc();
/* 3271 */     this.project_scalaUDF410 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[415];
/* 3272 */     this.project_catalystConverter410 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF410.dataType());
/* 3273 */     this.project_converter412 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[415]).getChildren().apply(0))).dataType());
/* 3274 */     this.project_udf410 = (scala.Function1)project_scalaUDF410.userDefinedFunc();
/* 3275 */     this.project_scalaUDF411 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[416];
/* 3276 */     this.project_catalystConverter411 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF411.dataType());
/* 3277 */     this.project_converter413 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[416]).getChildren().apply(0))).dataType());
/* 3278 */
/* 3279 */   }
/* 3280 */
/* 3281 */   private void wholestagecodegen_init_161() {
/* 3282 */     this.project_udf319 = (scala.Function1)project_scalaUDF319.userDefinedFunc();
/* 3283 */     this.project_scalaUDF320 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[325];
/* 3284 */     this.project_catalystConverter320 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF320.dataType());
/* 3285 */     this.project_converter320 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[325]).getChildren().apply(0))).dataType());
/* 3286 */     this.project_udf320 = (scala.Function1)project_scalaUDF320.userDefinedFunc();
/* 3287 */     this.project_scalaUDF321 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[326];
/* 3288 */     this.project_catalystConverter321 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF321.dataType());
/* 3289 */     this.project_converter321 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[326]).getChildren().apply(0))).dataType());
/* 3290 */
/* 3291 */   }
/* 3292 */
/* 3293 */   private void wholestagecodegen_init_260() {
/* 3294 */     this.project_udf514 = (scala.Function1)project_scalaUDF514.userDefinedFunc();
/* 3295 */     project_result515 = new UnsafeRow(37);
/* 3296 */     this.project_holder = new org.apache.spark.sql.catalyst.expressions.codegen.BufferHolder(project_result515, 736);
/* 3297 */     this.project_rowWriter = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(project_holder, 37);
/* 3298 */     this.project_rowWriter1 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(project_holder, 4);
/* 3299 */     this.project_arrayWriter = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeArrayWriter();
/* 3300 */     this.project_arrayWriter1 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeArrayWriter();
/* 3301 */     this.project_rowWriter2 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(project_holder, 4);
/* 3302 */     this.project_arrayWriter2 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeArrayWriter();
/* 3303 */     this.project_arrayWriter3 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeArrayWriter();
/* 3304 */     this.project_rowWriter3 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(project_holder, 4);
/* 3305 */
/* 3306 */   }
/* 3307 */
/* 3308 */   private void wholestagecodegen_init_12() {
/* 3309 */     this.project_udf21 = (scala.Function1)project_scalaUDF21.userDefinedFunc();
/* 3310 */     this.project_scalaUDF22 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[27];
/* 3311 */     this.project_catalystConverter22 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF22.dataType());
/* 3312 */     this.project_converter22 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[27]).getChildren().apply(0))).dataType());
/* 3313 */     this.project_udf22 = (scala.Function1)project_scalaUDF22.userDefinedFunc();
/* 3314 */     this.project_scalaUDF23 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[28];
/* 3315 */     this.project_catalystConverter23 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF23.dataType());
/* 3316 */     this.project_converter23 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[28]).getChildren().apply(0))).dataType());
/* 3317 */
/* 3318 */   }
/* 3319 */
/* 3320 */   private void wholestagecodegen_init_155() {
/* 3321 */     this.project_udf307 = (scala.Function1)project_scalaUDF307.userDefinedFunc();
/* 3322 */     this.project_scalaUDF308 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[313];
/* 3323 */     this.project_catalystConverter308 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF308.dataType());
/* 3324 */     this.project_converter308 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[313]).getChildren().apply(0))).dataType());
/* 3325 */     this.project_udf308 = (scala.Function1)project_scalaUDF308.userDefinedFunc();
/* 3326 */     this.project_scalaUDF309 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[314];
/* 3327 */     this.project_catalystConverter309 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF309.dataType());
/* 3328 */     this.project_converter309 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[314]).getChildren().apply(0))).dataType());
/* 3329 */
/* 3330 */   }
/* 3331 */
/* 3332 */   private void wholestagecodegen_init_182() {
/* 3333 */     this.project_udf360 = (scala.Function1)project_scalaUDF360.userDefinedFunc();
/* 3334 */     this.project_scalaUDF361 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[366];
/* 3335 */     this.project_catalystConverter361 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF361.dataType());
/* 3336 */     this.project_converter362 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[366]).getChildren().apply(0))).dataType());
/* 3337 */     this.project_udf361 = (scala.Function1)project_scalaUDF361.userDefinedFunc();
/* 3338 */     this.project_scalaUDF362 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[367];
/* 3339 */     this.project_catalystConverter362 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF362.dataType());
/* 3340 */     this.project_converter363 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[367]).getChildren().apply(0))).dataType());
/* 3341 */
/* 3342 */   }
/* 3343 */
/* 3344 */   private void wholestagecodegen_init_27() {
/* 3345 */     this.project_udf51 = (scala.Function1)project_scalaUDF51.userDefinedFunc();
/* 3346 */     this.project_scalaUDF52 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[57];
/* 3347 */     this.project_catalystConverter52 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF52.dataType());
/* 3348 */     this.project_converter52 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[57]).getChildren().apply(0))).dataType());
/* 3349 */     this.project_udf52 = (scala.Function1)project_scalaUDF52.userDefinedFunc();
/* 3350 */     this.project_scalaUDF53 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[58];
/* 3351 */     this.project_catalystConverter53 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF53.dataType());
/* 3352 */     this.project_converter53 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[58]).getChildren().apply(0))).dataType());
/* 3353 */
/* 3354 */   }
/* 3355 */
/* 3356 */   private void wholestagecodegen_init_197() {
/* 3357 */     this.project_udf390 = (scala.Function1)project_scalaUDF390.userDefinedFunc();
/* 3358 */     this.project_scalaUDF391 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[396];
/* 3359 */     this.project_catalystConverter391 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF391.dataType());
/* 3360 */     this.project_converter392 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[396]).getChildren().apply(0))).dataType());
/* 3361 */     this.project_udf391 = (scala.Function1)project_scalaUDF391.userDefinedFunc();
/* 3362 */     this.project_scalaUDF392 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[397];
/* 3363 */     this.project_catalystConverter392 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF392.dataType());
/* 3364 */     this.project_converter393 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[397]).getChildren().apply(0))).dataType());
/* 3365 */
/* 3366 */   }
/* 3367 */
/* 3368 */   private void wholestagecodegen_init_48() {
/* 3369 */     this.project_udf93 = (scala.Function1)project_scalaUDF93.userDefinedFunc();
/* 3370 */     this.project_scalaUDF94 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[99];
/* 3371 */     this.project_catalystConverter94 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF94.dataType());
/* 3372 */     this.project_converter94 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[99]).getChildren().apply(0))).dataType());
/* 3373 */     this.project_udf94 = (scala.Function1)project_scalaUDF94.userDefinedFunc();
/* 3374 */     this.project_scalaUDF95 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[100];
/* 3375 */     this.project_catalystConverter95 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF95.dataType());
/* 3376 */     this.project_converter95 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[100]).getChildren().apply(0))).dataType());
/* 3377 */
/* 3378 */   }
/* 3379 */
/* 3380 */   private void wholestagecodegen_init_108() {
/* 3381 */     this.project_udf213 = (scala.Function1)project_scalaUDF213.userDefinedFunc();
/* 3382 */     this.project_scalaUDF214 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[219];
/* 3383 */     this.project_catalystConverter214 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF214.dataType());
/* 3384 */     this.project_converter214 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[219]).getChildren().apply(0))).dataType());
/* 3385 */     this.project_udf214 = (scala.Function1)project_scalaUDF214.userDefinedFunc();
/* 3386 */     this.project_scalaUDF215 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[220];
/* 3387 */     this.project_catalystConverter215 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF215.dataType());
/* 3388 */     this.project_converter215 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[220]).getChildren().apply(0))).dataType());
/* 3389 */
/* 3390 */   }
/* 3391 */
/* 3392 */   private void wholestagecodegen_init_15() {
/* 3393 */     this.project_udf27 = (scala.Function1)project_scalaUDF27.userDefinedFunc();
/* 3394 */     this.project_scalaUDF28 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[33];
/* 3395 */     this.project_catalystConverter28 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF28.dataType());
/* 3396 */     this.project_converter28 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[33]).getChildren().apply(0))).dataType());
/* 3397 */     this.project_udf28 = (scala.Function1)project_scalaUDF28.userDefinedFunc();
/* 3398 */     this.project_scalaUDF29 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[34];
/* 3399 */     this.project_catalystConverter29 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF29.dataType());
/* 3400 */     this.project_converter29 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[34]).getChildren().apply(0))).dataType());
/* 3401 */
/* 3402 */   }
/* 3403 */
/* 3404 */   private void wholestagecodegen_init_179() {
/* 3405 */     this.project_udf354 = (scala.Function1)project_scalaUDF354.userDefinedFunc();
/* 3406 */     this.project_scalaUDF355 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[360];
/* 3407 */     this.project_catalystConverter355 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF355.dataType());
/* 3408 */     this.project_converter356 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[360]).getChildren().apply(0))).dataType());
/* 3409 */     this.project_udf355 = (scala.Function1)project_scalaUDF355.userDefinedFunc();
/* 3410 */     this.project_scalaUDF356 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[361];
/* 3411 */     this.project_catalystConverter356 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF356.dataType());
/* 3412 */     this.project_converter357 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[361]).getChildren().apply(0))).dataType());
/* 3413 */
/* 3414 */   }
/* 3415 */
/* 3416 */   private void wholestagecodegen_init_185() {
/* 3417 */     this.project_udf366 = (scala.Function1)project_scalaUDF366.userDefinedFunc();
/* 3418 */     this.project_scalaUDF367 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[372];
/* 3419 */     this.project_catalystConverter367 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF367.dataType());
/* 3420 */     this.project_converter368 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[372]).getChildren().apply(0))).dataType());
/* 3421 */     this.project_udf367 = (scala.Function1)project_scalaUDF367.userDefinedFunc();
/* 3422 */     this.project_scalaUDF368 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[373];
/* 3423 */     this.project_catalystConverter368 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF368.dataType());
/* 3424 */     this.project_converter369 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[373]).getChildren().apply(0))).dataType());
/* 3425 */
/* 3426 */   }
/* 3427 */
/* 3428 */   private void wholestagecodegen_init_83() {
/* 3429 */     this.project_udf163 = (scala.Function1)project_scalaUDF163.userDefinedFunc();
/* 3430 */     this.project_scalaUDF164 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[169];
/* 3431 */     this.project_catalystConverter164 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF164.dataType());
/* 3432 */     this.project_converter164 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[169]).getChildren().apply(0))).dataType());
/* 3433 */     this.project_udf164 = (scala.Function1)project_scalaUDF164.userDefinedFunc();
/* 3434 */     this.project_scalaUDF165 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[170];
/* 3435 */     this.project_catalystConverter165 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF165.dataType());
/* 3436 */     this.project_converter165 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[170]).getChildren().apply(0))).dataType());
/* 3437 */
/* 3438 */   }
/* 3439 */
/* 3440 */   private void wholestagecodegen_init_21() {
/* 3441 */     this.project_udf39 = (scala.Function1)project_scalaUDF39.userDefinedFunc();
/* 3442 */     this.project_scalaUDF40 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[45];
/* 3443 */     this.project_catalystConverter40 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF40.dataType());
/* 3444 */     this.project_converter40 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[45]).getChildren().apply(0))).dataType());
/* 3445 */     this.project_udf40 = (scala.Function1)project_scalaUDF40.userDefinedFunc();
/* 3446 */     this.project_scalaUDF41 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[46];
/* 3447 */     this.project_catalystConverter41 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF41.dataType());
/* 3448 */     this.project_converter41 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[46]).getChildren().apply(0))).dataType());
/* 3449 */
/* 3450 */   }
/* 3451 */
/* 3452 */   private void wholestagecodegen_init_137() {
/* 3453 */     this.project_udf271 = (scala.Function1)project_scalaUDF271.userDefinedFunc();
/* 3454 */     this.project_scalaUDF272 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[277];
/* 3455 */     this.project_catalystConverter272 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF272.dataType());
/* 3456 */     this.project_converter272 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[277]).getChildren().apply(0))).dataType());
/* 3457 */     this.project_udf272 = (scala.Function1)project_scalaUDF272.userDefinedFunc();
/* 3458 */     this.project_scalaUDF273 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[278];
/* 3459 */     this.project_catalystConverter273 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF273.dataType());
/* 3460 */     this.project_converter273 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[278]).getChildren().apply(0))).dataType());
/* 3461 */
/* 3462 */   }
/* 3463 */
/* 3464 */   private void wholestagecodegen_init_143() {
/* 3465 */     this.project_udf283 = (scala.Function1)project_scalaUDF283.userDefinedFunc();
/* 3466 */     this.project_scalaUDF284 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[289];
/* 3467 */     this.project_catalystConverter284 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF284.dataType());
/* 3468 */     this.project_converter284 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[289]).getChildren().apply(0))).dataType());
/* 3469 */     this.project_udf284 = (scala.Function1)project_scalaUDF284.userDefinedFunc();
/* 3470 */     this.project_scalaUDF285 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[290];
/* 3471 */     this.project_catalystConverter285 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF285.dataType());
/* 3472 */     this.project_converter285 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[290]).getChildren().apply(0))).dataType());
/* 3473 */
/* 3474 */   }
/* 3475 */
/* 3476 */   private void wholestagecodegen_init_170() {
/* 3477 */     this.project_udf337 = (scala.Function1)project_scalaUDF337.userDefinedFunc();
/* 3478 */     this.project_scalaUDF338 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[343];
/* 3479 */     this.project_catalystConverter338 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF338.dataType());
/* 3480 */     this.project_converter338 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[343]).getChildren().apply(0))).dataType());
/* 3481 */     this.project_udf338 = (scala.Function1)project_scalaUDF338.userDefinedFunc();
/* 3482 */     this.project_scalaUDF339 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[344];
/* 3483 */     this.project_catalystConverter339 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF339.dataType());
/* 3484 */     this.project_converter339 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[344]).getChildren().apply(0))).dataType());
/* 3485 */
/* 3486 */   }
/* 3487 */
/* 3488 */   private void wholestagecodegen_init_98() {
/* 3489 */     this.project_udf193 = (scala.Function1)project_scalaUDF193.userDefinedFunc();
/* 3490 */     this.project_scalaUDF194 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[199];
/* 3491 */     this.project_catalystConverter194 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF194.dataType());
/* 3492 */     this.project_converter194 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[199]).getChildren().apply(0))).dataType());
/* 3493 */     this.project_udf194 = (scala.Function1)project_scalaUDF194.userDefinedFunc();
/* 3494 */     this.project_scalaUDF195 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[200];
/* 3495 */     this.project_catalystConverter195 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF195.dataType());
/* 3496 */     this.project_converter195 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[200]).getChildren().apply(0))).dataType());
/* 3497 */
/* 3498 */   }
/* 3499 */
/* 3500 */   private void wholestagecodegen_init_5() {
/* 3501 */     this.project_udf7 = (scala.Function1)project_scalaUDF7.userDefinedFunc();
/* 3502 */     this.project_scalaUDF8 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[13];
/* 3503 */     this.project_catalystConverter8 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF8.dataType());
/* 3504 */     this.project_converter8 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[13]).getChildren().apply(0))).dataType());
/* 3505 */     this.project_udf8 = (scala.Function1)project_scalaUDF8.userDefinedFunc();
/* 3506 */     this.project_scalaUDF9 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[14];
/* 3507 */     this.project_catalystConverter9 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF9.dataType());
/* 3508 */     this.project_converter9 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[14]).getChildren().apply(0))).dataType());
/* 3509 */
/* 3510 */   }
/* 3511 */
/* 3512 */   private void wholestagecodegen_init_158() {
/* 3513 */     this.project_udf313 = (scala.Function1)project_scalaUDF313.userDefinedFunc();
/* 3514 */     this.project_scalaUDF314 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[319];
/* 3515 */     this.project_catalystConverter314 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF314.dataType());
/* 3516 */     this.project_converter314 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[319]).getChildren().apply(0))).dataType());
/* 3517 */     this.project_udf314 = (scala.Function1)project_scalaUDF314.userDefinedFunc();
/* 3518 */     this.project_scalaUDF315 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[320];
/* 3519 */     this.project_catalystConverter315 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF315.dataType());
/* 3520 */     this.project_converter315 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[320]).getChildren().apply(0))).dataType());
/* 3521 */
/* 3522 */   }
/* 3523 */
/* 3524 */   private void wholestagecodegen_init_164() {
/* 3525 */     this.project_udf325 = (scala.Function1)project_scalaUDF325.userDefinedFunc();
/* 3526 */     this.project_scalaUDF326 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[331];
/* 3527 */     this.project_catalystConverter326 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF326.dataType());
/* 3528 */     this.project_converter326 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[331]).getChildren().apply(0))).dataType());
/* 3529 */     this.project_udf326 = (scala.Function1)project_scalaUDF326.userDefinedFunc();
/* 3530 */     this.project_scalaUDF327 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[332];
/* 3531 */     this.project_catalystConverter327 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF327.dataType());
/* 3532 */     this.project_converter327 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[332]).getChildren().apply(0))).dataType());
/* 3533 */
/* 3534 */   }
/* 3535 */
/* 3536 */   private void wholestagecodegen_init_236() {
/* 3537 */     this.project_udf466 = (scala.Function1)project_scalaUDF466.userDefinedFunc();
/* 3538 */     this.project_scalaUDF467 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[472];
/* 3539 */     this.project_catalystConverter467 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF467.dataType());
/* 3540 */     this.project_converter470 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[472]).getChildren().apply(0))).dataType());
/* 3541 */     this.project_udf467 = (scala.Function1)project_scalaUDF467.userDefinedFunc();
/* 3542 */     this.project_scalaUDF468 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[473];
/* 3543 */     this.project_catalystConverter468 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF468.dataType());
/* 3544 */     this.project_converter471 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[473]).getChildren().apply(0))).dataType());
/* 3545 */
/* 3546 */   }
/* 3547 */
/* 3548 */   private void wholestagecodegen_init_242() {
/* 3549 */     this.project_udf478 = (scala.Function1)project_scalaUDF478.userDefinedFunc();
/* 3550 */     this.project_scalaUDF479 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[484];
/* 3551 */     this.project_catalystConverter479 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF479.dataType());
/* 3552 */     this.project_converter482 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[484]).getChildren().apply(0))).dataType());
/* 3553 */     this.project_udf479 = (scala.Function1)project_scalaUDF479.userDefinedFunc();
/* 3554 */     this.project_scalaUDF480 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[485];
/* 3555 */     this.project_catalystConverter480 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF480.dataType());
/* 3556 */     this.project_converter483 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[485]).getChildren().apply(0))).dataType());
/* 3557 */
/* 3558 */   }
/* 3559 */
/* 3560 */   private void wholestagecodegen_init_257() {
/* 3561 */     this.project_udf508 = (scala.Function1)project_scalaUDF508.userDefinedFunc();
/* 3562 */     this.project_scalaUDF509 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[514];
/* 3563 */     this.project_catalystConverter509 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF509.dataType());
/* 3564 */     this.project_converter512 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[514]).getChildren().apply(0))).dataType());
/* 3565 */     this.project_udf509 = (scala.Function1)project_scalaUDF509.userDefinedFunc();
/* 3566 */     this.project_scalaUDF510 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[515];
/* 3567 */     this.project_catalystConverter510 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF510.dataType());
/* 3568 */     this.project_converter513 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[515]).getChildren().apply(0))).dataType());
/* 3569 */
/* 3570 */   }
/* 3571 */
/* 3572 */   private void wholestagecodegen_init_125() {
/* 3573 */     this.project_udf247 = (scala.Function1)project_scalaUDF247.userDefinedFunc();
/* 3574 */     this.project_scalaUDF248 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[253];
/* 3575 */     this.project_catalystConverter248 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF248.dataType());
/* 3576 */     this.project_converter248 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[253]).getChildren().apply(0))).dataType());
/* 3577 */     this.project_udf248 = (scala.Function1)project_scalaUDF248.userDefinedFunc();
/* 3578 */     this.project_scalaUDF249 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[254];
/* 3579 */     this.project_catalystConverter249 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF249.dataType());
/* 3580 */     this.project_converter249 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[254]).getChildren().apply(0))).dataType());
/* 3581 */
/* 3582 */   }
/* 3583 */
/* 3584 */   private void wholestagecodegen_init_131() {
/* 3585 */     this.project_udf259 = (scala.Function1)project_scalaUDF259.userDefinedFunc();
/* 3586 */     this.project_scalaUDF260 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[265];
/* 3587 */     this.project_catalystConverter260 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF260.dataType());
/* 3588 */     this.project_converter260 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[265]).getChildren().apply(0))).dataType());
/* 3589 */     this.project_udf260 = (scala.Function1)project_scalaUDF260.userDefinedFunc();
/* 3590 */     this.project_scalaUDF261 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[266];
/* 3591 */     this.project_catalystConverter261 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF261.dataType());
/* 3592 */     this.project_converter261 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[266]).getChildren().apply(0))).dataType());
/* 3593 */
/* 3594 */   }
/* 3595 */
/* 3596 */   private void wholestagecodegen_init_224() {
/* 3597 */     this.project_udf443 = (scala.Function1)project_scalaUDF443.userDefinedFunc();
/* 3598 */     this.project_scalaUDF444 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[449];
/* 3599 */     this.project_catalystConverter444 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF444.dataType());
/* 3600 */     this.project_converter446 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[449]).getChildren().apply(0))).dataType());
/* 3601 */     this.project_udf444 = (scala.Function1)project_scalaUDF444.userDefinedFunc();
/* 3602 */     this.project_scalaUDF445 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[450];
/* 3603 */     this.project_catalystConverter445 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF445.dataType());
/* 3604 */     this.project_converter447 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[450]).getChildren().apply(0))).dataType());
/* 3605 */
/* 3606 */   }
/* 3607 */
/* 3608 */   private void wholestagecodegen_init_71() {
/* 3609 */     this.project_udf139 = (scala.Function1)project_scalaUDF139.userDefinedFunc();
/* 3610 */     this.project_scalaUDF140 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[145];
/* 3611 */     this.project_catalystConverter140 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF140.dataType());
/* 3612 */     this.project_converter140 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[145]).getChildren().apply(0))).dataType());
/* 3613 */     this.project_udf140 = (scala.Function1)project_scalaUDF140.userDefinedFunc();
/* 3614 */     this.project_scalaUDF141 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[146];
/* 3615 */     this.project_catalystConverter141 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF141.dataType());
/* 3616 */     this.project_converter141 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[146]).getChildren().apply(0))).dataType());
/* 3617 */
/* 3618 */   }
/* 3619 */
/* 3620 */   private void wholestagecodegen_init_251() {
/* 3621 */     this.project_udf496 = (scala.Function1)project_scalaUDF496.userDefinedFunc();
/* 3622 */     this.project_scalaUDF497 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[502];
/* 3623 */     this.project_catalystConverter497 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF497.dataType());
/* 3624 */     this.project_converter500 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[502]).getChildren().apply(0))).dataType());
/* 3625 */     this.project_udf497 = (scala.Function1)project_scalaUDF497.userDefinedFunc();
/* 3626 */     this.project_scalaUDF498 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[503];
/* 3627 */     this.project_catalystConverter498 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF498.dataType());
/* 3628 */     this.project_converter501 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[503]).getChildren().apply(0))).dataType());
/* 3629 */
/* 3630 */   }
/* 3631 */
/* 3632 */   private void wholestagecodegen_init_239() {
/* 3633 */     this.project_udf472 = (scala.Function1)project_scalaUDF472.userDefinedFunc();
/* 3634 */     this.project_scalaUDF473 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[478];
/* 3635 */     this.project_catalystConverter473 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF473.dataType());
/* 3636 */     this.project_converter476 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[478]).getChildren().apply(0))).dataType());
/* 3637 */     this.project_udf473 = (scala.Function1)project_scalaUDF473.userDefinedFunc();
/* 3638 */     this.project_scalaUDF474 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[479];
/* 3639 */     this.project_catalystConverter474 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF474.dataType());
/* 3640 */     this.project_converter477 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[479]).getChildren().apply(0))).dataType());
/* 3641 */
/* 3642 */   }
/* 3643 */
/* 3644 */   private void wholestagecodegen_init_218() {
/* 3645 */     this.project_udf431 = (scala.Function1)project_scalaUDF431.userDefinedFunc();
/* 3646 */     this.project_scalaUDF432 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[437];
/* 3647 */     this.project_catalystConverter432 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF432.dataType());
/* 3648 */     this.project_converter434 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[437]).getChildren().apply(0))).dataType());
/* 3649 */     this.project_udf432 = (scala.Function1)project_scalaUDF432.userDefinedFunc();
/* 3650 */     this.project_scalaUDF433 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[438];
/* 3651 */     this.project_catalystConverter433 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF433.dataType());
/* 3652 */     this.project_converter435 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[438]).getChildren().apply(0))).dataType());
/* 3653 */
/* 3654 */   }
/* 3655 */
/* 3656 */   private void wholestagecodegen_init_8() {
/* 3657 */     this.project_udf13 = (scala.Function1)project_scalaUDF13.userDefinedFunc();
/* 3658 */     this.project_scalaUDF14 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[19];
/* 3659 */     this.project_catalystConverter14 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF14.dataType());
/* 3660 */     this.project_converter14 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[19]).getChildren().apply(0))).dataType());
/* 3661 */     this.project_udf14 = (scala.Function1)project_scalaUDF14.userDefinedFunc();
/* 3662 */     this.project_scalaUDF15 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[20];
/* 3663 */     this.project_catalystConverter15 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF15.dataType());
/* 3664 */     this.project_converter15 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[20]).getChildren().apply(0))).dataType());
/* 3665 */
/* 3666 */   }
/* 3667 */
/* 3668 */   private void wholestagecodegen_init_119() {
/* 3669 */     this.project_udf235 = (scala.Function1)project_scalaUDF235.userDefinedFunc();
/* 3670 */     this.project_scalaUDF236 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[241];
/* 3671 */     this.project_catalystConverter236 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF236.dataType());
/* 3672 */     this.project_converter236 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[241]).getChildren().apply(0))).dataType());
/* 3673 */     this.project_udf236 = (scala.Function1)project_scalaUDF236.userDefinedFunc();
/* 3674 */     this.project_scalaUDF237 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[242];
/* 3675 */     this.project_catalystConverter237 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF237.dataType());
/* 3676 */     this.project_converter237 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[242]).getChildren().apply(0))).dataType());
/* 3677 */
/* 3678 */   }
/* 3679 */
/* 3680 */   private void wholestagecodegen_init_152() {
/* 3681 */     this.project_udf301 = (scala.Function1)project_scalaUDF301.userDefinedFunc();
/* 3682 */     this.project_scalaUDF302 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[307];
/* 3683 */     this.project_catalystConverter302 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF302.dataType());
/* 3684 */     this.project_converter302 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[307]).getChildren().apply(0))).dataType());
/* 3685 */     this.project_udf302 = (scala.Function1)project_scalaUDF302.userDefinedFunc();
/* 3686 */     this.project_scalaUDF303 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[308];
/* 3687 */     this.project_catalystConverter303 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF303.dataType());
/* 3688 */     this.project_converter303 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[308]).getChildren().apply(0))).dataType());
/* 3689 */
/* 3690 */   }
/* 3691 */
/* 3692 */   private void wholestagecodegen_init_146() {
/* 3693 */     this.project_udf289 = (scala.Function1)project_scalaUDF289.userDefinedFunc();
/* 3694 */     this.project_scalaUDF290 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[295];
/* 3695 */     this.project_catalystConverter290 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF290.dataType());
/* 3696 */     this.project_converter290 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[295]).getChildren().apply(0))).dataType());
/* 3697 */     this.project_udf290 = (scala.Function1)project_scalaUDF290.userDefinedFunc();
/* 3698 */     this.project_scalaUDF291 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[296];
/* 3699 */     this.project_catalystConverter291 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF291.dataType());
/* 3700 */     this.project_converter291 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[296]).getChildren().apply(0))).dataType());
/* 3701 */
/* 3702 */   }
/* 3703 */
/* 3704 */   private void wholestagecodegen_init_65() {
/* 3705 */     this.project_udf127 = (scala.Function1)project_scalaUDF127.userDefinedFunc();
/* 3706 */     this.project_scalaUDF128 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[133];
/* 3707 */     this.project_catalystConverter128 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF128.dataType());
/* 3708 */     this.project_converter128 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[133]).getChildren().apply(0))).dataType());
/* 3709 */     this.project_udf128 = (scala.Function1)project_scalaUDF128.userDefinedFunc();
/* 3710 */     this.project_scalaUDF129 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[134];
/* 3711 */     this.project_catalystConverter129 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF129.dataType());
/* 3712 */     this.project_converter129 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[134]).getChildren().apply(0))).dataType());
/* 3713 */
/* 3714 */   }
/* 3715 */
/* 3716 */   private void wholestagecodegen_init_245() {
/* 3717 */     this.project_udf484 = (scala.Function1)project_scalaUDF484.userDefinedFunc();
/* 3718 */     this.project_scalaUDF485 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[490];
/* 3719 */     this.project_catalystConverter485 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF485.dataType());
/* 3720 */     this.project_converter488 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[490]).getChildren().apply(0))).dataType());
/* 3721 */     this.project_udf485 = (scala.Function1)project_scalaUDF485.userDefinedFunc();
/* 3722 */     this.project_scalaUDF486 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[491];
/* 3723 */     this.project_catalystConverter486 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF486.dataType());
/* 3724 */     this.project_converter489 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[491]).getChildren().apply(0))).dataType());
/* 3725 */
/* 3726 */   }
/* 3727 */
/* 3728 */   private void wholestagecodegen_init_92() {
/* 3729 */     this.project_udf181 = (scala.Function1)project_scalaUDF181.userDefinedFunc();
/* 3730 */     this.project_scalaUDF182 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[187];
/* 3731 */     this.project_catalystConverter182 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF182.dataType());
/* 3732 */     this.project_converter182 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[187]).getChildren().apply(0))).dataType());
/* 3733 */     this.project_udf182 = (scala.Function1)project_scalaUDF182.userDefinedFunc();
/* 3734 */     this.project_scalaUDF183 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[188];
/* 3735 */     this.project_catalystConverter183 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF183.dataType());
/* 3736 */     this.project_converter183 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[188]).getChildren().apply(0))).dataType());
/* 3737 */
/* 3738 */   }
/* 3739 */
/* 3740 */   private void wholestagecodegen_init_167() {
/* 3741 */     this.project_udf331 = (scala.Function1)project_scalaUDF331.userDefinedFunc();
/* 3742 */     this.project_scalaUDF332 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[337];
/* 3743 */     this.project_catalystConverter332 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF332.dataType());
/* 3744 */     this.project_converter332 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[337]).getChildren().apply(0))).dataType());
/* 3745 */     this.project_udf332 = (scala.Function1)project_scalaUDF332.userDefinedFunc();
/* 3746 */     this.project_scalaUDF333 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[338];
/* 3747 */     this.project_catalystConverter333 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF333.dataType());
/* 3748 */     this.project_converter333 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[338]).getChildren().apply(0))).dataType());
/* 3749 */
/* 3750 */   }
/* 3751 */
/* 3752 */   private void wholestagecodegen_init_86() {
/* 3753 */     this.project_udf169 = (scala.Function1)project_scalaUDF169.userDefinedFunc();
/* 3754 */     this.project_scalaUDF170 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[175];
/* 3755 */     this.project_catalystConverter170 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF170.dataType());
/* 3756 */     this.project_converter170 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[175]).getChildren().apply(0))).dataType());
/* 3757 */     this.project_udf170 = (scala.Function1)project_scalaUDF170.userDefinedFunc();
/* 3758 */     this.project_scalaUDF171 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[176];
/* 3759 */     this.project_catalystConverter171 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF171.dataType());
/* 3760 */     this.project_converter171 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[176]).getChildren().apply(0))).dataType());
/* 3761 */
/* 3762 */   }
/* 3763 */
/* 3764 */   private void wholestagecodegen_init_230() {
/* 3765 */     this.project_udf455 = (scala.Function1)project_scalaUDF455.userDefinedFunc();
/* 3766 */     this.project_scalaUDF456 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[461];
/* 3767 */     this.project_catalystConverter456 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF456.dataType());
/* 3768 */     this.project_converter458 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[461]).getChildren().apply(0))).dataType());
/* 3769 */     this.project_udf456 = (scala.Function1)project_scalaUDF456.userDefinedFunc();
/* 3770 */     this.project_scalaUDF457 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[462];
/* 3771 */     this.project_catalystConverter457 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF457.dataType());
/* 3772 */     this.project_converter459 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[462]).getChildren().apply(0))).dataType());
/* 3773 */
/* 3774 */   }
/* 3775 */
/* 3776 */   private void wholestagecodegen_init_134() {
/* 3777 */     this.project_udf265 = (scala.Function1)project_scalaUDF265.userDefinedFunc();
/* 3778 */     this.project_scalaUDF266 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[271];
/* 3779 */     this.project_catalystConverter266 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF266.dataType());
/* 3780 */     this.project_converter266 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[271]).getChildren().apply(0))).dataType());
/* 3781 */     this.project_udf266 = (scala.Function1)project_scalaUDF266.userDefinedFunc();
/* 3782 */     this.project_scalaUDF267 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[272];
/* 3783 */     this.project_catalystConverter267 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF267.dataType());
/* 3784 */     this.project_converter267 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[272]).getChildren().apply(0))).dataType());
/* 3785 */
/* 3786 */   }
/* 3787 */
/* 3788 */   private void wholestagecodegen_init_212() {
/* 3789 */     this.project_udf419 = (scala.Function1)project_scalaUDF419.userDefinedFunc();
/* 3790 */     this.project_scalaUDF420 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[425];
/* 3791 */     this.project_catalystConverter420 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF420.dataType());
/* 3792 */     this.project_converter422 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[425]).getChildren().apply(0))).dataType());
/* 3793 */     this.project_udf420 = (scala.Function1)project_scalaUDF420.userDefinedFunc();
/* 3794 */     this.project_scalaUDF421 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[426];
/* 3795 */     this.project_catalystConverter421 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF421.dataType());
/* 3796 */     this.project_converter423 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[426]).getChildren().apply(0))).dataType());
/* 3797 */
/* 3798 */   }
/* 3799 */
/* 3800 */   private void wholestagecodegen_init_95() {
/* 3801 */     this.project_udf187 = (scala.Function1)project_scalaUDF187.userDefinedFunc();
/* 3802 */     this.project_scalaUDF188 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[193];
/* 3803 */     this.project_catalystConverter188 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF188.dataType());
/* 3804 */     this.project_converter188 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[193]).getChildren().apply(0))).dataType());
/* 3805 */     this.project_udf188 = (scala.Function1)project_scalaUDF188.userDefinedFunc();
/* 3806 */     this.project_scalaUDF189 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[194];
/* 3807 */     this.project_catalystConverter189 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF189.dataType());
/* 3808 */     this.project_converter189 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[194]).getChildren().apply(0))).dataType());
/* 3809 */
/* 3810 */   }
/* 3811 */
/* 3812 */   private void wholestagecodegen_init_107() {
/* 3813 */     this.project_udf211 = (scala.Function1)project_scalaUDF211.userDefinedFunc();
/* 3814 */     this.project_scalaUDF212 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[217];
/* 3815 */     this.project_catalystConverter212 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF212.dataType());
/* 3816 */     this.project_converter212 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[217]).getChildren().apply(0))).dataType());
/* 3817 */     this.project_udf212 = (scala.Function1)project_scalaUDF212.userDefinedFunc();
/* 3818 */     this.project_scalaUDF213 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[218];
/* 3819 */     this.project_catalystConverter213 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF213.dataType());
/* 3820 */     this.project_converter213 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[218]).getChildren().apply(0))).dataType());
/* 3821 */
/* 3822 */   }
/* 3823 */
/* 3824 */   private void wholestagecodegen_init_89() {
/* 3825 */     this.project_udf175 = (scala.Function1)project_scalaUDF175.userDefinedFunc();
/* 3826 */     this.project_scalaUDF176 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[181];
/* 3827 */     this.project_catalystConverter176 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF176.dataType());
/* 3828 */     this.project_converter176 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[181]).getChildren().apply(0))).dataType());
/* 3829 */     this.project_udf176 = (scala.Function1)project_scalaUDF176.userDefinedFunc();
/* 3830 */     this.project_scalaUDF177 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[182];
/* 3831 */     this.project_catalystConverter177 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF177.dataType());
/* 3832 */     this.project_converter177 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[182]).getChildren().apply(0))).dataType());
/* 3833 */
/* 3834 */   }
/* 3835 */
/* 3836 */   private void wholestagecodegen_init_128() {
/* 3837 */     this.project_udf253 = (scala.Function1)project_scalaUDF253.userDefinedFunc();
/* 3838 */     this.project_scalaUDF254 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[259];
/* 3839 */     this.project_catalystConverter254 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF254.dataType());
/* 3840 */     this.project_converter254 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[259]).getChildren().apply(0))).dataType());
/* 3841 */     this.project_udf254 = (scala.Function1)project_scalaUDF254.userDefinedFunc();
/* 3842 */     this.project_scalaUDF255 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[260];
/* 3843 */     this.project_catalystConverter255 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF255.dataType());
/* 3844 */     this.project_converter255 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[260]).getChildren().apply(0))).dataType());
/* 3845 */
/* 3846 */   }
/* 3847 */
/* 3848 */   private void wholestagecodegen_init_53() {
/* 3849 */     this.project_udf103 = (scala.Function1)project_scalaUDF103.userDefinedFunc();
/* 3850 */     this.project_scalaUDF104 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[109];
/* 3851 */     this.project_catalystConverter104 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF104.dataType());
/* 3852 */     this.project_converter104 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[109]).getChildren().apply(0))).dataType());
/* 3853 */     this.project_udf104 = (scala.Function1)project_scalaUDF104.userDefinedFunc();
/* 3854 */     this.project_scalaUDF105 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[110];
/* 3855 */     this.project_catalystConverter105 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF105.dataType());
/* 3856 */     this.project_converter105 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[110]).getChildren().apply(0))).dataType());
/* 3857 */
/* 3858 */   }
/* 3859 */
/* 3860 */   private void wholestagecodegen_init_47() {
/* 3861 */     this.project_udf91 = (scala.Function1)project_scalaUDF91.userDefinedFunc();
/* 3862 */     this.project_scalaUDF92 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[97];
/* 3863 */     this.project_catalystConverter92 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF92.dataType());
/* 3864 */     this.project_converter92 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[97]).getChildren().apply(0))).dataType());
/* 3865 */     this.project_udf92 = (scala.Function1)project_scalaUDF92.userDefinedFunc();
/* 3866 */     this.project_scalaUDF93 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[98];
/* 3867 */     this.project_catalystConverter93 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF93.dataType());
/* 3868 */     this.project_converter93 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[98]).getChildren().apply(0))).dataType());
/* 3869 */
/* 3870 */   }
/* 3871 */
/* 3872 */   private void wholestagecodegen_init_233() {
/* 3873 */     this.project_udf460 = (scala.Function1)project_scalaUDF460.userDefinedFunc();
/* 3874 */     this.project_values8 = null;
/* 3875 */     this.project_scalaUDF461 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[466];
/* 3876 */     this.project_catalystConverter461 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF461.dataType());
/* 3877 */     this.project_converter464 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[466]).getChildren().apply(0))).dataType());
/* 3878 */     this.project_udf461 = (scala.Function1)project_scalaUDF461.userDefinedFunc();
/* 3879 */     this.project_scalaUDF462 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[467];
/* 3880 */     this.project_catalystConverter462 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF462.dataType());
/* 3881 */     this.project_converter465 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[467]).getChildren().apply(0))).dataType());
/* 3882 */
/* 3883 */   }
/* 3884 */
/* 3885 */   private void wholestagecodegen_init_227() {
/* 3886 */     this.project_udf449 = (scala.Function1)project_scalaUDF449.userDefinedFunc();
/* 3887 */     this.project_scalaUDF450 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[455];
/* 3888 */     this.project_catalystConverter450 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF450.dataType());
/* 3889 */     this.project_converter452 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[455]).getChildren().apply(0))).dataType());
/* 3890 */     this.project_udf450 = (scala.Function1)project_scalaUDF450.userDefinedFunc();
/* 3891 */     this.project_scalaUDF451 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[456];
/* 3892 */     this.project_catalystConverter451 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF451.dataType());
/* 3893 */     this.project_converter453 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[456]).getChildren().apply(0))).dataType());
/* 3894 */
/* 3895 */   }
/* 3896 */
/* 3897 */   private void wholestagecodegen_init_80() {
/* 3898 */     this.project_udf157 = (scala.Function1)project_scalaUDF157.userDefinedFunc();
/* 3899 */     this.project_scalaUDF158 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[163];
/* 3900 */     this.project_catalystConverter158 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF158.dataType());
/* 3901 */     this.project_converter158 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[163]).getChildren().apply(0))).dataType());
/* 3902 */     this.project_udf158 = (scala.Function1)project_scalaUDF158.userDefinedFunc();
/* 3903 */     this.project_scalaUDF159 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[164];
/* 3904 */     this.project_catalystConverter159 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF159.dataType());
/* 3905 */     this.project_converter159 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[164]).getChildren().apply(0))).dataType());
/* 3906 */
/* 3907 */   }
/* 3908 */
/* 3909 */   private void wholestagecodegen_init_140() {
/* 3910 */     this.project_udf277 = (scala.Function1)project_scalaUDF277.userDefinedFunc();
/* 3911 */     this.project_scalaUDF278 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[283];
/* 3912 */     this.project_catalystConverter278 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF278.dataType());
/* 3913 */     this.project_converter278 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[283]).getChildren().apply(0))).dataType());
/* 3914 */     this.project_udf278 = (scala.Function1)project_scalaUDF278.userDefinedFunc();
/* 3915 */     this.project_scalaUDF279 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[284];
/* 3916 */     this.project_catalystConverter279 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF279.dataType());
/* 3917 */     this.project_converter279 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[284]).getChildren().apply(0))).dataType());
/* 3918 */
/* 3919 */   }
/* 3920 */
/* 3921 */   private void wholestagecodegen_init_149() {
/* 3922 */     this.project_udf295 = (scala.Function1)project_scalaUDF295.userDefinedFunc();
/* 3923 */     this.project_scalaUDF296 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[301];
/* 3924 */     this.project_catalystConverter296 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF296.dataType());
/* 3925 */     this.project_converter296 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[301]).getChildren().apply(0))).dataType());
/* 3926 */     this.project_udf296 = (scala.Function1)project_scalaUDF296.userDefinedFunc();
/* 3927 */     this.project_scalaUDF297 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[302];
/* 3928 */     this.project_catalystConverter297 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF297.dataType());
/* 3929 */     this.project_converter297 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[302]).getChildren().apply(0))).dataType());
/* 3930 */
/* 3931 */   }
/* 3932 */
/* 3933 */   private void wholestagecodegen_init_248() {
/* 3934 */     this.project_udf490 = (scala.Function1)project_scalaUDF490.userDefinedFunc();
/* 3935 */     this.project_scalaUDF491 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[496];
/* 3936 */     this.project_catalystConverter491 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF491.dataType());
/* 3937 */     this.project_converter494 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[496]).getChildren().apply(0))).dataType());
/* 3938 */     this.project_udf491 = (scala.Function1)project_scalaUDF491.userDefinedFunc();
/* 3939 */     this.project_scalaUDF492 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[497];
/* 3940 */     this.project_catalystConverter492 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF492.dataType());
/* 3941 */     this.project_converter495 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[497]).getChildren().apply(0))).dataType());
/* 3942 */
/* 3943 */   }
/* 3944 */
/* 3945 */   private void wholestagecodegen_init_113() {
/* 3946 */     this.project_udf223 = (scala.Function1)project_scalaUDF223.userDefinedFunc();
/* 3947 */     this.project_scalaUDF224 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[229];
/* 3948 */     this.project_catalystConverter224 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF224.dataType());
/* 3949 */     this.project_converter224 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[229]).getChildren().apply(0))).dataType());
/* 3950 */     this.project_udf224 = (scala.Function1)project_scalaUDF224.userDefinedFunc();
/* 3951 */     this.project_scalaUDF225 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[230];
/* 3952 */     this.project_catalystConverter225 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF225.dataType());
/* 3953 */     this.project_converter225 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[230]).getChildren().apply(0))).dataType());
/* 3954 */
/* 3955 */   }
/* 3956 */
/* 3957 */   private void wholestagecodegen_init_206() {
/* 3958 */     this.project_udf407 = (scala.Function1)project_scalaUDF407.userDefinedFunc();
/* 3959 */     this.project_scalaUDF408 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[413];
/* 3960 */     this.project_catalystConverter408 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF408.dataType());
/* 3961 */     this.project_converter410 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[413]).getChildren().apply(0))).dataType());
/* 3962 */     this.project_udf408 = (scala.Function1)project_scalaUDF408.userDefinedFunc();
/* 3963 */     this.project_scalaUDF409 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[414];
/* 3964 */     this.project_catalystConverter409 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF409.dataType());
/* 3965 */     this.project_converter411 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[414]).getChildren().apply(0))).dataType());
/* 3966 */
/* 3967 */   }
/* 3968 */
/* 3969 */   private void wholestagecodegen_init_2() {
/* 3970 */     this.project_udf1 = (scala.Function1)project_scalaUDF1.userDefinedFunc();
/* 3971 */     this.project_scalaUDF2 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[7];
/* 3972 */     this.project_catalystConverter2 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF2.dataType());
/* 3973 */     this.project_converter2 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[7]).getChildren().apply(0))).dataType());
/* 3974 */     this.project_udf2 = (scala.Function1)project_scalaUDF2.userDefinedFunc();
/* 3975 */     this.project_scalaUDF3 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[8];
/* 3976 */     this.project_catalystConverter3 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF3.dataType());
/* 3977 */     this.project_converter3 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[8]).getChildren().apply(0))).dataType());
/* 3978 */
/* 3979 */   }
/* 3980 */
/* 3981 */   private void wholestagecodegen_init_74() {
/* 3982 */     this.project_udf145 = (scala.Function1)project_scalaUDF145.userDefinedFunc();
/* 3983 */     this.project_scalaUDF146 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[151];
/* 3984 */     this.project_catalystConverter146 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF146.dataType());
/* 3985 */     this.project_converter146 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[151]).getChildren().apply(0))).dataType());
/* 3986 */     this.project_udf146 = (scala.Function1)project_scalaUDF146.userDefinedFunc();
/* 3987 */     this.project_scalaUDF147 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[152];
/* 3988 */     this.project_catalystConverter147 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF147.dataType());
/* 3989 */     this.project_converter147 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[152]).getChildren().apply(0))).dataType());
/* 3990 */
/* 3991 */   }
/* 3992 */
/* 3993 */   private void wholestagecodegen_init_68() {
/* 3994 */     this.project_udf133 = (scala.Function1)project_scalaUDF133.userDefinedFunc();
/* 3995 */     this.project_scalaUDF134 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[139];
/* 3996 */     this.project_catalystConverter134 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF134.dataType());
/* 3997 */     this.project_converter134 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[139]).getChildren().apply(0))).dataType());
/* 3998 */     this.project_udf134 = (scala.Function1)project_scalaUDF134.userDefinedFunc();
/* 3999 */     this.project_scalaUDF135 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[140];
/* 4000 */     this.project_catalystConverter135 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF135.dataType());
/* 4001 */     this.project_converter135 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[140]).getChildren().apply(0))).dataType());
/* 4002 */
/* 4003 */   }
/* 4004 */
/* 4005 */   private void wholestagecodegen_init_77() {
/* 4006 */     this.project_udf151 = (scala.Function1)project_scalaUDF151.userDefinedFunc();
/* 4007 */     this.project_scalaUDF152 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[157];
/* 4008 */     this.project_catalystConverter152 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF152.dataType());
/* 4009 */     this.project_converter152 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[157]).getChildren().apply(0))).dataType());
/* 4010 */     this.project_udf152 = (scala.Function1)project_scalaUDF152.userDefinedFunc();
/* 4011 */     this.project_scalaUDF153 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[158];
/* 4012 */     this.project_catalystConverter153 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF153.dataType());
/* 4013 */     this.project_converter153 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[158]).getChildren().apply(0))).dataType());
/* 4014 */
/* 4015 */   }
/* 4016 */
/* 4017 */   private void wholestagecodegen_init_41() {
/* 4018 */     this.project_udf79 = (scala.Function1)project_scalaUDF79.userDefinedFunc();
/* 4019 */     this.project_scalaUDF80 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[85];
/* 4020 */     this.project_catalystConverter80 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF80.dataType());
/* 4021 */     this.project_converter80 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[85]).getChildren().apply(0))).dataType());
/* 4022 */     this.project_udf80 = (scala.Function1)project_scalaUDF80.userDefinedFunc();
/* 4023 */     this.project_scalaUDF81 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[86];
/* 4024 */     this.project_catalystConverter81 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF81.dataType());
/* 4025 */     this.project_converter81 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[86]).getChildren().apply(0))).dataType());
/* 4026 */
/* 4027 */   }
/* 4028 */
/* 4029 */   private void wholestagecodegen_init_101() {
/* 4030 */     this.project_udf199 = (scala.Function1)project_scalaUDF199.userDefinedFunc();
/* 4031 */     this.project_scalaUDF200 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[205];
/* 4032 */     this.project_catalystConverter200 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF200.dataType());
/* 4033 */     this.project_converter200 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[205]).getChildren().apply(0))).dataType());
/* 4034 */     this.project_udf200 = (scala.Function1)project_scalaUDF200.userDefinedFunc();
/* 4035 */     this.project_scalaUDF201 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[206];
/* 4036 */     this.project_catalystConverter201 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF201.dataType());
/* 4037 */     this.project_converter201 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[206]).getChildren().apply(0))).dataType());
/* 4038 */
/* 4039 */   }
/* 4040 */
/* 4041 */   private void wholestagecodegen_init_29() {
/* 4042 */     this.project_udf55 = (scala.Function1)project_scalaUDF55.userDefinedFunc();
/* 4043 */     this.project_scalaUDF56 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[61];
/* 4044 */     this.project_catalystConverter56 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF56.dataType());
/* 4045 */     this.project_converter56 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[61]).getChildren().apply(0))).dataType());
/* 4046 */     this.project_udf56 = (scala.Function1)project_scalaUDF56.userDefinedFunc();
/* 4047 */     this.project_scalaUDF57 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[62];
/* 4048 */     this.project_catalystConverter57 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF57.dataType());
/* 4049 */     this.project_converter57 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[62]).getChildren().apply(0))).dataType());
/* 4050 */
/* 4051 */   }
/* 4052 */
/* 4053 */   private void wholestagecodegen_init_209() {
/* 4054 */     this.project_udf413 = (scala.Function1)project_scalaUDF413.userDefinedFunc();
/* 4055 */     this.project_scalaUDF414 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[419];
/* 4056 */     this.project_catalystConverter414 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF414.dataType());
/* 4057 */     this.project_converter416 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[419]).getChildren().apply(0))).dataType());
/* 4058 */     this.project_udf414 = (scala.Function1)project_scalaUDF414.userDefinedFunc();
/* 4059 */     this.project_scalaUDF415 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[420];
/* 4060 */     this.project_catalystConverter415 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF415.dataType());
/* 4061 */     this.project_converter417 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[420]).getChildren().apply(0))).dataType());
/* 4062 */
/* 4063 */   }
/* 4064 */
/* 4065 */   private void wholestagecodegen_init_62() {
/* 4066 */     this.project_udf121 = (scala.Function1)project_scalaUDF121.userDefinedFunc();
/* 4067 */     this.project_scalaUDF122 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[127];
/* 4068 */     this.project_catalystConverter122 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF122.dataType());
/* 4069 */     this.project_converter122 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[127]).getChildren().apply(0))).dataType());
/* 4070 */     this.project_udf122 = (scala.Function1)project_scalaUDF122.userDefinedFunc();
/* 4071 */     this.project_scalaUDF123 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[128];
/* 4072 */     this.project_catalystConverter123 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF123.dataType());
/* 4073 */     this.project_converter123 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[128]).getChildren().apply(0))).dataType());
/* 4074 */
/* 4075 */   }
/* 4076 */
/* 4077 */   private void wholestagecodegen_init_56() {
/* 4078 */     this.project_udf109 = (scala.Function1)project_scalaUDF109.userDefinedFunc();
/* 4079 */     this.project_scalaUDF110 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[115];
/* 4080 */     this.project_catalystConverter110 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF110.dataType());
/* 4081 */     this.project_converter110 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[115]).getChildren().apply(0))).dataType());
/* 4082 */     this.project_udf110 = (scala.Function1)project_scalaUDF110.userDefinedFunc();
/* 4083 */     this.project_scalaUDF111 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[116];
/* 4084 */     this.project_catalystConverter111 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF111.dataType());
/* 4085 */     this.project_converter111 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[116]).getChildren().apply(0))).dataType());
/* 4086 */
/* 4087 */   }
/* 4088 */
/* 4089 */   private void wholestagecodegen_init_221() {
/* 4090 */     this.project_udf437 = (scala.Function1)project_scalaUDF437.userDefinedFunc();
/* 4091 */     this.project_scalaUDF438 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[443];
/* 4092 */     this.project_catalystConverter438 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF438.dataType());
/* 4093 */     this.project_converter440 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[443]).getChildren().apply(0))).dataType());
/* 4094 */     this.project_udf438 = (scala.Function1)project_scalaUDF438.userDefinedFunc();
/* 4095 */     this.project_scalaUDF439 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[444];
/* 4096 */     this.project_catalystConverter439 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF439.dataType());
/* 4097 */     this.project_converter441 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[444]).getChildren().apply(0))).dataType());
/* 4098 */
/* 4099 */   }
/* 4100 */
/* 4101 */   private void wholestagecodegen_init_116() {
/* 4102 */     this.project_udf229 = (scala.Function1)project_scalaUDF229.userDefinedFunc();
/* 4103 */     this.project_scalaUDF230 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[235];
/* 4104 */     this.project_catalystConverter230 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF230.dataType());
/* 4105 */     this.project_converter230 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[235]).getChildren().apply(0))).dataType());
/* 4106 */     this.project_udf230 = (scala.Function1)project_scalaUDF230.userDefinedFunc();
/* 4107 */     this.project_scalaUDF231 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[236];
/* 4108 */     this.project_catalystConverter231 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF231.dataType());
/* 4109 */     this.project_converter231 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[236]).getChildren().apply(0))).dataType());
/* 4110 */
/* 4111 */   }
/* 4112 */
/* 4113 */   private void wholestagecodegen_init_122() {
/* 4114 */     this.project_udf241 = (scala.Function1)project_scalaUDF241.userDefinedFunc();
/* 4115 */     this.project_scalaUDF242 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[247];
/* 4116 */     this.project_catalystConverter242 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF242.dataType());
/* 4117 */     this.project_converter242 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[247]).getChildren().apply(0))).dataType());
/* 4118 */     this.project_udf242 = (scala.Function1)project_scalaUDF242.userDefinedFunc();
/* 4119 */     this.project_scalaUDF243 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[248];
/* 4120 */     this.project_catalystConverter243 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF243.dataType());
/* 4121 */     this.project_converter243 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[248]).getChildren().apply(0))).dataType());
/* 4122 */
/* 4123 */   }
/* 4124 */
/* 4125 */   private void wholestagecodegen_init_20() {
/* 4126 */     this.project_udf37 = (scala.Function1)project_scalaUDF37.userDefinedFunc();
/* 4127 */     this.project_scalaUDF38 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[43];
/* 4128 */     this.project_catalystConverter38 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF38.dataType());
/* 4129 */     this.project_converter38 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[43]).getChildren().apply(0))).dataType());
/* 4130 */     this.project_udf38 = (scala.Function1)project_scalaUDF38.userDefinedFunc();
/* 4131 */     this.project_scalaUDF39 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[44];
/* 4132 */     this.project_catalystConverter39 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF39.dataType());
/* 4133 */     this.project_converter39 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[44]).getChildren().apply(0))).dataType());
/* 4134 */
/* 4135 */   }
/* 4136 */
/* 4137 */   private void wholestagecodegen_init_184() {
/* 4138 */     this.project_udf364 = (scala.Function1)project_scalaUDF364.userDefinedFunc();
/* 4139 */     this.project_scalaUDF365 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[370];
/* 4140 */     this.project_catalystConverter365 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF365.dataType());
/* 4141 */     this.project_converter366 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[370]).getChildren().apply(0))).dataType());
/* 4142 */     this.project_udf365 = (scala.Function1)project_scalaUDF365.userDefinedFunc();
/* 4143 */     this.project_scalaUDF366 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[371];
/* 4144 */     this.project_catalystConverter366 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF366.dataType());
/* 4145 */     this.project_converter367 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[371]).getChildren().apply(0))).dataType());
/* 4146 */
/* 4147 */   }
/* 4148 */
/* 4149 */   private void wholestagecodegen_init_190() {
/* 4150 */     this.project_udf376 = (scala.Function1)project_scalaUDF376.userDefinedFunc();
/* 4151 */     this.project_scalaUDF377 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[382];
/* 4152 */     this.project_catalystConverter377 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF377.dataType());
/* 4153 */     this.project_converter378 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[382]).getChildren().apply(0))).dataType());
/* 4154 */     this.project_udf377 = (scala.Function1)project_scalaUDF377.userDefinedFunc();
/* 4155 */     this.project_scalaUDF378 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[383];
/* 4156 */     this.project_catalystConverter378 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF378.dataType());
/* 4157 */     this.project_converter379 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[383]).getChildren().apply(0))).dataType());
/* 4158 */
/* 4159 */   }
/* 4160 */
/* 4161 */   private void wholestagecodegen_init_199() {
/* 4162 */     this.project_udf394 = (scala.Function1)project_scalaUDF394.userDefinedFunc();
/* 4163 */     this.project_scalaUDF395 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[400];
/* 4164 */     this.project_catalystConverter395 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF395.dataType());
/* 4165 */     this.project_converter396 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[400]).getChildren().apply(0))).dataType());
/* 4166 */     this.project_udf395 = (scala.Function1)project_scalaUDF395.userDefinedFunc();
/* 4167 */     this.project_scalaUDF396 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[401];
/* 4168 */     this.project_catalystConverter396 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF396.dataType());
/* 4169 */     this.project_converter397 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[401]).getChildren().apply(0))).dataType());
/* 4170 */
/* 4171 */   }
/* 4172 */
/* 4173 */   private void wholestagecodegen_init_35() {
/* 4174 */     this.project_udf67 = (scala.Function1)project_scalaUDF67.userDefinedFunc();
/* 4175 */     this.project_scalaUDF68 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[73];
/* 4176 */     this.project_catalystConverter68 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF68.dataType());
/* 4177 */     this.project_converter68 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[73]).getChildren().apply(0))).dataType());
/* 4178 */     this.project_udf68 = (scala.Function1)project_scalaUDF68.userDefinedFunc();
/* 4179 */     this.project_scalaUDF69 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[74];
/* 4180 */     this.project_catalystConverter69 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF69.dataType());
/* 4181 */     this.project_converter69 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[74]).getChildren().apply(0))).dataType());
/* 4182 */
/* 4183 */   }
/* 4184 */
/* 4185 */   private void wholestagecodegen_init_200() {
/* 4186 */     this.project_udf396 = (scala.Function1)project_scalaUDF396.userDefinedFunc();
/* 4187 */     this.project_scalaUDF397 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[402];
/* 4188 */     this.project_catalystConverter397 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF397.dataType());
/* 4189 */     this.project_converter398 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[402]).getChildren().apply(0))).dataType());
/* 4190 */     this.project_udf397 = (scala.Function1)project_scalaUDF397.userDefinedFunc();
/* 4191 */     this.project_scalaUDF398 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[403];
/* 4192 */     this.project_catalystConverter398 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF398.dataType());
/* 4193 */     this.project_converter399 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[403]).getChildren().apply(0))).dataType());
/* 4194 */
/* 4195 */   }
/* 4196 */
/* 4197 */   private void wholestagecodegen_init_215() {
/* 4198 */     this.project_udf425 = (scala.Function1)project_scalaUDF425.userDefinedFunc();
/* 4199 */     this.project_scalaUDF426 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[431];
/* 4200 */     this.project_catalystConverter426 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF426.dataType());
/* 4201 */     this.project_converter428 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[431]).getChildren().apply(0))).dataType());
/* 4202 */     this.project_udf426 = (scala.Function1)project_scalaUDF426.userDefinedFunc();
/* 4203 */     this.project_scalaUDF427 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[432];
/* 4204 */     this.project_catalystConverter427 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF427.dataType());
/* 4205 */     this.project_converter429 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[432]).getChildren().apply(0))).dataType());
/* 4206 */
/* 4207 */   }
/* 4208 */
/* 4209 */   private void wholestagecodegen_init_17() {
/* 4210 */     this.project_udf31 = (scala.Function1)project_scalaUDF31.userDefinedFunc();
/* 4211 */     this.project_scalaUDF32 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[37];
/* 4212 */     this.project_catalystConverter32 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF32.dataType());
/* 4213 */     this.project_converter32 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[37]).getChildren().apply(0))).dataType());
/* 4214 */     this.project_udf32 = (scala.Function1)project_scalaUDF32.userDefinedFunc();
/* 4215 */     this.project_scalaUDF33 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[38];
/* 4216 */     this.project_catalystConverter33 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF33.dataType());
/* 4217 */     this.project_converter33 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[38]).getChildren().apply(0))).dataType());
/* 4218 */
/* 4219 */   }
/* 4220 */
/* 4221 */   private void wholestagecodegen_init_187() {
/* 4222 */     this.project_udf370 = (scala.Function1)project_scalaUDF370.userDefinedFunc();
/* 4223 */     this.project_scalaUDF371 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[376];
/* 4224 */     this.project_catalystConverter371 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF371.dataType());
/* 4225 */     this.project_converter372 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[376]).getChildren().apply(0))).dataType());
/* 4226 */     this.project_udf371 = (scala.Function1)project_scalaUDF371.userDefinedFunc();
/* 4227 */     this.project_scalaUDF372 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[377];
/* 4228 */     this.project_catalystConverter372 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF372.dataType());
/* 4229 */     this.project_converter373 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[377]).getChildren().apply(0))).dataType());
/* 4230 */
/* 4231 */   }
/* 4232 */
/* 4233 */   private void wholestagecodegen_init_104() {
/* 4234 */     this.project_udf205 = (scala.Function1)project_scalaUDF205.userDefinedFunc();
/* 4235 */     this.project_scalaUDF206 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[211];
/* 4236 */     this.project_catalystConverter206 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF206.dataType());
/* 4237 */     this.project_converter206 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[211]).getChildren().apply(0))).dataType());
/* 4238 */     this.project_udf206 = (scala.Function1)project_scalaUDF206.userDefinedFunc();
/* 4239 */     this.project_scalaUDF207 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[212];
/* 4240 */     this.project_catalystConverter207 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF207.dataType());
/* 4241 */     this.project_converter207 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[212]).getChildren().apply(0))).dataType());
/* 4242 */
/* 4243 */   }
/* 4244 */
/* 4245 */   private void wholestagecodegen_init_172() {
/* 4246 */     this.project_converter342 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[346]).getChildren().apply(1))).dataType());
/* 4247 */     this.project_udf341 = (scala.Function2)project_scalaUDF341.userDefinedFunc();
/* 4248 */     this.project_scalaUDF342 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[347];
/* 4249 */     this.project_catalystConverter342 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF342.dataType());
/* 4250 */     this.project_converter343 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[347]).getChildren().apply(0))).dataType());
/* 4251 */     this.project_udf342 = (scala.Function1)project_scalaUDF342.userDefinedFunc();
/* 4252 */     this.project_scalaUDF343 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[348];
/* 4253 */
/* 4254 */   }
/* 4255 */
/* 4256 */   private void wholestagecodegen_init_59() {
/* 4257 */     this.project_udf115 = (scala.Function1)project_scalaUDF115.userDefinedFunc();
/* 4258 */     this.project_scalaUDF116 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[121];
/* 4259 */     this.project_catalystConverter116 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF116.dataType());
/* 4260 */     this.project_converter116 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[121]).getChildren().apply(0))).dataType());
/* 4261 */     this.project_udf116 = (scala.Function1)project_scalaUDF116.userDefinedFunc();
/* 4262 */     this.project_scalaUDF117 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[122];
/* 4263 */     this.project_catalystConverter117 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF117.dataType());
/* 4264 */     this.project_converter117 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[122]).getChildren().apply(0))).dataType());
/* 4265 */
/* 4266 */   }
/* 4267 */
/* 4268 */   private void wholestagecodegen_init_110() {
/* 4269 */     this.project_udf217 = (scala.Function1)project_scalaUDF217.userDefinedFunc();
/* 4270 */     this.project_scalaUDF218 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[223];
/* 4271 */     this.project_catalystConverter218 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF218.dataType());
/* 4272 */     this.project_converter218 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[223]).getChildren().apply(0))).dataType());
/* 4273 */     this.project_udf218 = (scala.Function1)project_scalaUDF218.userDefinedFunc();
/* 4274 */     this.project_scalaUDF219 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[224];
/* 4275 */     this.project_catalystConverter219 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF219.dataType());
/* 4276 */     this.project_converter219 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[224]).getChildren().apply(0))).dataType());
/* 4277 */
/* 4278 */   }
/* 4279 */
/* 4280 */   private void wholestagecodegen_init_38() {
/* 4281 */     this.project_udf73 = (scala.Function1)project_scalaUDF73.userDefinedFunc();
/* 4282 */     this.project_scalaUDF74 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[79];
/* 4283 */     this.project_catalystConverter74 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF74.dataType());
/* 4284 */     this.project_converter74 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[79]).getChildren().apply(0))).dataType());
/* 4285 */     this.project_udf74 = (scala.Function1)project_scalaUDF74.userDefinedFunc();
/* 4286 */     this.project_scalaUDF75 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[80];
/* 4287 */     this.project_catalystConverter75 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF75.dataType());
/* 4288 */     this.project_converter75 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[80]).getChildren().apply(0))).dataType());
/* 4289 */
/* 4290 */   }
/* 4291 */
/* 4292 */   private void wholestagecodegen_init_203() {
/* 4293 */     this.project_udf401 = (scala.Function1)project_scalaUDF401.userDefinedFunc();
/* 4294 */     this.project_scalaUDF402 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[407];
/* 4295 */     this.project_catalystConverter402 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF402.dataType());
/* 4296 */     this.project_converter404 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[407]).getChildren().apply(0))).dataType());
/* 4297 */     this.project_udf402 = (scala.Function1)project_scalaUDF402.userDefinedFunc();
/* 4298 */     this.project_values7 = null;
/* 4299 */     this.project_scalaUDF403 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[408];
/* 4300 */     this.project_catalystConverter403 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF403.dataType());
/* 4301 */     this.project_converter405 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[408]).getChildren().apply(0))).dataType());
/* 4302 */
/* 4303 */   }
/* 4304 */
/* 4305 */   private void wholestagecodegen_init_50() {
/* 4306 */     this.project_udf97 = (scala.Function1)project_scalaUDF97.userDefinedFunc();
/* 4307 */     this.project_scalaUDF98 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[103];
/* 4308 */     this.project_catalystConverter98 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF98.dataType());
/* 4309 */     this.project_converter98 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[103]).getChildren().apply(0))).dataType());
/* 4310 */     this.project_udf98 = (scala.Function1)project_scalaUDF98.userDefinedFunc();
/* 4311 */     this.project_scalaUDF99 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[104];
/* 4312 */     this.project_catalystConverter99 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF99.dataType());
/* 4313 */     this.project_converter99 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[104]).getChildren().apply(0))).dataType());
/* 4314 */
/* 4315 */   }
/* 4316 */
/* 4317 */   private void wholestagecodegen_init_166() {
/* 4318 */     this.project_udf329 = (scala.Function1)project_scalaUDF329.userDefinedFunc();
/* 4319 */     this.project_scalaUDF330 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[335];
/* 4320 */     this.project_catalystConverter330 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF330.dataType());
/* 4321 */     this.project_converter330 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[335]).getChildren().apply(0))).dataType());
/* 4322 */     this.project_udf330 = (scala.Function1)project_scalaUDF330.userDefinedFunc();
/* 4323 */     this.project_scalaUDF331 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[336];
/* 4324 */     this.project_catalystConverter331 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF331.dataType());
/* 4325 */     this.project_converter331 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[336]).getChildren().apply(0))).dataType());
/* 4326 */
/* 4327 */   }
/* 4328 */
/* 4329 */   private void wholestagecodegen_init_23() {
/* 4330 */     this.project_udf43 = (scala.Function1)project_scalaUDF43.userDefinedFunc();
/* 4331 */     this.project_scalaUDF44 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[49];
/* 4332 */     this.project_catalystConverter44 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF44.dataType());
/* 4333 */     this.project_converter44 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[49]).getChildren().apply(0))).dataType());
/* 4334 */     this.project_udf44 = (scala.Function1)project_scalaUDF44.userDefinedFunc();
/* 4335 */     this.project_scalaUDF45 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[50];
/* 4336 */     this.project_catalystConverter45 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF45.dataType());
/* 4337 */     this.project_converter45 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[50]).getChildren().apply(0))).dataType());
/* 4338 */
/* 4339 */   }
/* 4340 */
/* 4341 */   private void wholestagecodegen_init_44() {
/* 4342 */     this.project_udf85 = (scala.Function1)project_scalaUDF85.userDefinedFunc();
/* 4343 */     this.project_scalaUDF86 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[91];
/* 4344 */     this.project_catalystConverter86 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF86.dataType());
/* 4345 */     this.project_converter86 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[91]).getChildren().apply(0))).dataType());
/* 4346 */     this.project_udf86 = (scala.Function1)project_scalaUDF86.userDefinedFunc();
/* 4347 */     this.project_scalaUDF87 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[92];
/* 4348 */     this.project_catalystConverter87 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF87.dataType());
/* 4349 */     this.project_converter87 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[92]).getChildren().apply(0))).dataType());
/* 4350 */
/* 4351 */   }
/* 4352 */
/* 4353 */   private void wholestagecodegen_init_193() {
/* 4354 */     this.project_udf382 = (scala.Function1)project_scalaUDF382.userDefinedFunc();
/* 4355 */     this.project_scalaUDF383 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[388];
/* 4356 */     this.project_catalystConverter383 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF383.dataType());
/* 4357 */     this.project_converter384 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[388]).getChildren().apply(0))).dataType());
/* 4358 */     this.project_udf383 = (scala.Function1)project_scalaUDF383.userDefinedFunc();
/* 4359 */     this.project_scalaUDF384 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[389];
/* 4360 */     this.project_catalystConverter384 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF384.dataType());
/* 4361 */     this.project_converter385 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[389]).getChildren().apply(0))).dataType());
/* 4362 */
/* 4363 */   }
/* 4364 */
/* 4365 */   private void wholestagecodegen_init_160() {
/* 4366 */     this.project_udf317 = (scala.Function1)project_scalaUDF317.userDefinedFunc();
/* 4367 */     this.project_scalaUDF318 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[323];
/* 4368 */     this.project_catalystConverter318 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF318.dataType());
/* 4369 */     this.project_converter318 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[323]).getChildren().apply(0))).dataType());
/* 4370 */     this.project_udf318 = (scala.Function1)project_scalaUDF318.userDefinedFunc();
/* 4371 */     this.project_scalaUDF319 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[324];
/* 4372 */     this.project_catalystConverter319 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF319.dataType());
/* 4373 */     this.project_converter319 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[324]).getChildren().apply(0))).dataType());
/* 4374 */
/* 4375 */   }
/* 4376 */
/* 4377 */   private void wholestagecodegen_init_11() {
/* 4378 */     this.project_udf19 = (scala.Function1)project_scalaUDF19.userDefinedFunc();
/* 4379 */     this.project_scalaUDF20 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[25];
/* 4380 */     this.project_catalystConverter20 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF20.dataType());
/* 4381 */     this.project_converter20 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[25]).getChildren().apply(0))).dataType());
/* 4382 */     this.project_udf20 = (scala.Function1)project_scalaUDF20.userDefinedFunc();
/* 4383 */     this.project_scalaUDF21 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[26];
/* 4384 */     this.project_catalystConverter21 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF21.dataType());
/* 4385 */     this.project_converter21 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[26]).getChildren().apply(0))).dataType());
/* 4386 */
/* 4387 */   }
/* 4388 */
/* 4389 */   private void wholestagecodegen_init_181() {
/* 4390 */     this.project_udf358 = (scala.Function1)project_scalaUDF358.userDefinedFunc();
/* 4391 */     this.project_scalaUDF359 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[364];
/* 4392 */     this.project_catalystConverter359 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF359.dataType());
/* 4393 */     this.project_converter360 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[364]).getChildren().apply(0))).dataType());
/* 4394 */     this.project_udf359 = (scala.Function1)project_scalaUDF359.userDefinedFunc();
/* 4395 */     this.project_scalaUDF360 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[365];
/* 4396 */     this.project_catalystConverter360 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF360.dataType());
/* 4397 */     this.project_converter361 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[365]).getChildren().apply(0))).dataType());
/* 4398 */
/* 4399 */   }
/* 4400 */
/* 4401 */   private void wholestagecodegen_init_88() {
/* 4402 */     this.project_udf173 = (scala.Function1)project_scalaUDF173.userDefinedFunc();
/* 4403 */     this.project_scalaUDF174 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[179];
/* 4404 */     this.project_catalystConverter174 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF174.dataType());
/* 4405 */     this.project_converter174 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[179]).getChildren().apply(0))).dataType());
/* 4406 */     this.project_udf174 = (scala.Function1)project_scalaUDF174.userDefinedFunc();
/* 4407 */     this.project_scalaUDF175 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[180];
/* 4408 */     this.project_catalystConverter175 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF175.dataType());
/* 4409 */     this.project_converter175 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[180]).getChildren().apply(0))).dataType());
/* 4410 */
/* 4411 */   }
/* 4412 */
/* 4413 */   private void wholestagecodegen_init_253() {
/* 4414 */     this.project_udf500 = (scala.Function1)project_scalaUDF500.userDefinedFunc();
/* 4415 */     this.project_scalaUDF501 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[506];
/* 4416 */     this.project_catalystConverter501 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF501.dataType());
/* 4417 */     this.project_converter504 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[506]).getChildren().apply(0))).dataType());
/* 4418 */     this.project_udf501 = (scala.Function1)project_scalaUDF501.userDefinedFunc();
/* 4419 */     this.project_scalaUDF502 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[507];
/* 4420 */     this.project_catalystConverter502 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF502.dataType());
/* 4421 */     this.project_converter505 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[507]).getChildren().apply(0))).dataType());
/* 4422 */
/* 4423 */   }
/* 4424 */
/* 4425 */   private void wholestagecodegen_init_26() {
/* 4426 */     this.project_udf49 = (scala.Function1)project_scalaUDF49.userDefinedFunc();
/* 4427 */     this.project_scalaUDF50 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[55];
/* 4428 */     this.project_catalystConverter50 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF50.dataType());
/* 4429 */     this.project_converter50 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[55]).getChildren().apply(0))).dataType());
/* 4430 */     this.project_udf50 = (scala.Function1)project_scalaUDF50.userDefinedFunc();
/* 4431 */     this.project_scalaUDF51 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[56];
/* 4432 */     this.project_catalystConverter51 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF51.dataType());
/* 4433 */     this.project_converter51 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[56]).getChildren().apply(0))).dataType());
/* 4434 */
/* 4435 */   }
/* 4436 */
/* 4437 */   private void wholestagecodegen_init_148() {
/* 4438 */     this.project_udf293 = (scala.Function1)project_scalaUDF293.userDefinedFunc();
/* 4439 */     this.project_scalaUDF294 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[299];
/* 4440 */     this.project_catalystConverter294 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF294.dataType());
/* 4441 */     this.project_converter294 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[299]).getChildren().apply(0))).dataType());
/* 4442 */     this.project_udf294 = (scala.Function1)project_scalaUDF294.userDefinedFunc();
/* 4443 */     this.project_scalaUDF295 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[300];
/* 4444 */     this.project_catalystConverter295 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF295.dataType());
/* 4445 */     this.project_converter295 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[300]).getChildren().apply(0))).dataType());
/* 4446 */
/* 4447 */   }
/* 4448 */
/* 4449 */   private void wholestagecodegen_init_247() {
/* 4450 */     this.project_udf488 = (scala.Function1)project_scalaUDF488.userDefinedFunc();
/* 4451 */     this.project_scalaUDF489 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[494];
/* 4452 */     this.project_catalystConverter489 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF489.dataType());
/* 4453 */     this.project_converter492 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[494]).getChildren().apply(0))).dataType());
/* 4454 */     this.project_udf489 = (scala.Function1)project_scalaUDF489.userDefinedFunc();
/* 4455 */     this.project_scalaUDF490 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[495];
/* 4456 */     this.project_catalystConverter490 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF490.dataType());
/* 4457 */     this.project_converter493 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[495]).getChildren().apply(0))).dataType());
/* 4458 */
/* 4459 */   }
/* 4460 */
/* 4461 */   private void wholestagecodegen_init_175() {
/* 4462 */     this.project_udf346 = (scala.Function1)project_scalaUDF346.userDefinedFunc();
/* 4463 */     this.project_scalaUDF347 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[352];
/* 4464 */     this.project_catalystConverter347 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF347.dataType());
/* 4465 */     this.project_converter348 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[352]).getChildren().apply(0))).dataType());
/* 4466 */     this.project_udf347 = (scala.Function1)project_scalaUDF347.userDefinedFunc();
/* 4467 */     this.project_scalaUDF348 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[353];
/* 4468 */     this.project_catalystConverter348 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF348.dataType());
/* 4469 */     this.project_converter349 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[353]).getChildren().apply(0))).dataType());
/* 4470 */
/* 4471 */   }
/* 4472 */
/* 4473 */   private void wholestagecodegen_init_94() {
/* 4474 */     this.project_udf185 = (scala.Function1)project_scalaUDF185.userDefinedFunc();
/* 4475 */     this.project_scalaUDF186 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[191];
/* 4476 */     this.project_catalystConverter186 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF186.dataType());
/* 4477 */     this.project_converter186 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[191]).getChildren().apply(0))).dataType());
/* 4478 */     this.project_udf186 = (scala.Function1)project_scalaUDF186.userDefinedFunc();
/* 4479 */     this.project_scalaUDF187 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[192];
/* 4480 */     this.project_catalystConverter187 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF187.dataType());
/* 4481 */     this.project_converter187 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[192]).getChildren().apply(0))).dataType());
/* 4482 */
/* 4483 */   }
/* 4484 */
/* 4485 */   private void wholestagecodegen_init_1() {
/* 4486 */     this.project_catalystConverter = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF.dataType());
/* 4487 */     this.project_converter = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[5]).getChildren().apply(0))).dataType());
/* 4488 */     this.project_udf = (scala.Function1)project_scalaUDF.userDefinedFunc();
/* 4489 */     this.project_values = null;
/* 4490 */     this.project_scalaUDF1 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[6];
/* 4491 */     this.project_catalystConverter1 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF1.dataType());
/* 4492 */     this.project_converter1 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[6]).getChildren().apply(0))).dataType());
/* 4493 */
/* 4494 */   }
/* 4495 */
/* 4496 */   private void wholestagecodegen_init_169() {
/* 4497 */     this.project_udf335 = (scala.Function1)project_scalaUDF335.userDefinedFunc();
/* 4498 */     this.project_scalaUDF336 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[341];
/* 4499 */     this.project_catalystConverter336 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF336.dataType());
/* 4500 */     this.project_converter336 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[341]).getChildren().apply(0))).dataType());
/* 4501 */     this.project_udf336 = (scala.Function1)project_scalaUDF336.userDefinedFunc();
/* 4502 */     this.project_scalaUDF337 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[342];
/* 4503 */     this.project_catalystConverter337 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF337.dataType());
/* 4504 */     this.project_converter337 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[342]).getChildren().apply(0))).dataType());
/* 4505 */
/* 4506 */   }
/* 4507 */
/* 4508 */   private void wholestagecodegen_init_196() {
/* 4509 */     this.project_udf388 = (scala.Function1)project_scalaUDF388.userDefinedFunc();
/* 4510 */     this.project_scalaUDF389 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[394];
/* 4511 */     this.project_catalystConverter389 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF389.dataType());
/* 4512 */     this.project_converter390 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[394]).getChildren().apply(0))).dataType());
/* 4513 */     this.project_udf389 = (scala.Function1)project_scalaUDF389.userDefinedFunc();
/* 4514 */     this.project_scalaUDF390 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[395];
/* 4515 */     this.project_catalystConverter390 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF390.dataType());
/* 4516 */     this.project_converter391 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[395]).getChildren().apply(0))).dataType());
/* 4517 */
/* 4518 */   }
/* 4519 */
/* 4520 */   private void wholestagecodegen_init_154() {
/* 4521 */     this.project_udf305 = (scala.Function1)project_scalaUDF305.userDefinedFunc();
/* 4522 */     this.project_scalaUDF306 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[311];
/* 4523 */     this.project_catalystConverter306 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF306.dataType());
/* 4524 */     this.project_converter306 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[311]).getChildren().apply(0))).dataType());
/* 4525 */     this.project_udf306 = (scala.Function1)project_scalaUDF306.userDefinedFunc();
/* 4526 */     this.project_scalaUDF307 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[312];
/* 4527 */     this.project_catalystConverter307 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF307.dataType());
/* 4528 */     this.project_converter307 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[312]).getChildren().apply(0))).dataType());
/* 4529 */
/* 4530 */   }
/* 4531 */
/* 4532 */   private void wholestagecodegen_init_32() {
/* 4533 */     this.project_udf61 = (scala.Function1)project_scalaUDF61.userDefinedFunc();
/* 4534 */     this.project_scalaUDF62 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[67];
/* 4535 */     this.project_catalystConverter62 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF62.dataType());
/* 4536 */     this.project_converter62 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[67]).getChildren().apply(0))).dataType());
/* 4537 */     this.project_udf62 = (scala.Function1)project_scalaUDF62.userDefinedFunc();
/* 4538 */     this.project_scalaUDF63 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[68];
/* 4539 */     this.project_catalystConverter63 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF63.dataType());
/* 4540 */     this.project_converter63 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[68]).getChildren().apply(0))).dataType());
/* 4541 */
/* 4542 */   }
/* 4543 */
/* 4544 */   private void wholestagecodegen_init_136() {
/* 4545 */     this.project_udf269 = (scala.Function1)project_scalaUDF269.userDefinedFunc();
/* 4546 */     this.project_scalaUDF270 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[275];
/* 4547 */     this.project_catalystConverter270 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF270.dataType());
/* 4548 */     this.project_converter270 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[275]).getChildren().apply(0))).dataType());
/* 4549 */     this.project_udf270 = (scala.Function1)project_scalaUDF270.userDefinedFunc();
/* 4550 */     this.project_scalaUDF271 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[276];
/* 4551 */     this.project_catalystConverter271 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF271.dataType());
/* 4552 */     this.project_converter271 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[276]).getChildren().apply(0))).dataType());
/* 4553 */
/* 4554 */   }
/* 4555 */
/* 4556 */   private void wholestagecodegen_init_229() {
/* 4557 */     this.project_udf453 = (scala.Function1)project_scalaUDF453.userDefinedFunc();
/* 4558 */     this.project_scalaUDF454 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[459];
/* 4559 */     this.project_catalystConverter454 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF454.dataType());
/* 4560 */     this.project_converter456 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[459]).getChildren().apply(0))).dataType());
/* 4561 */     this.project_udf454 = (scala.Function1)project_scalaUDF454.userDefinedFunc();
/* 4562 */     this.project_scalaUDF455 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[460];
/* 4563 */     this.project_catalystConverter455 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF455.dataType());
/* 4564 */     this.project_converter457 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[460]).getChildren().apply(0))).dataType());
/* 4565 */
/* 4566 */   }
/* 4567 */
/* 4568 */   private void wholestagecodegen_init_220() {
/* 4569 */     this.project_udf435 = (scala.Function1)project_scalaUDF435.userDefinedFunc();
/* 4570 */     this.project_scalaUDF436 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[441];
/* 4571 */     this.project_catalystConverter436 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF436.dataType());
/* 4572 */     this.project_converter438 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[441]).getChildren().apply(0))).dataType());
/* 4573 */     this.project_udf436 = (scala.Function1)project_scalaUDF436.userDefinedFunc();
/* 4574 */     this.project_scalaUDF437 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[442];
/* 4575 */     this.project_catalystConverter437 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF437.dataType());
/* 4576 */     this.project_converter439 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[442]).getChildren().apply(0))).dataType());
/* 4577 */
/* 4578 */   }
/* 4579 */
/* 4580 */   private void wholestagecodegen_init_97() {
/* 4581 */     this.project_udf191 = (scala.Function1)project_scalaUDF191.userDefinedFunc();
/* 4582 */     this.project_scalaUDF192 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[197];
/* 4583 */     this.project_catalystConverter192 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF192.dataType());
/* 4584 */     this.project_converter192 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[197]).getChildren().apply(0))).dataType());
/* 4585 */     this.project_udf192 = (scala.Function1)project_scalaUDF192.userDefinedFunc();
/* 4586 */     this.project_scalaUDF193 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[198];
/* 4587 */     this.project_catalystConverter193 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF193.dataType());
/* 4588 */     this.project_converter193 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[198]).getChildren().apply(0))).dataType());
/* 4589 */
/* 4590 */   }
/* 4591 */
/* 4592 */   private void wholestagecodegen_init_14() {
/* 4593 */     this.project_udf25 = (scala.Function1)project_scalaUDF25.userDefinedFunc();
/* 4594 */     this.project_scalaUDF26 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[31];
/* 4595 */     this.project_catalystConverter26 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF26.dataType());
/* 4596 */     this.project_converter26 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[31]).getChildren().apply(0))).dataType());
/* 4597 */     this.project_udf26 = (scala.Function1)project_scalaUDF26.userDefinedFunc();
/* 4598 */     this.project_scalaUDF27 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[32];
/* 4599 */     this.project_catalystConverter27 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF27.dataType());
/* 4600 */     this.project_converter27 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[32]).getChildren().apply(0))).dataType());
/* 4601 */
/* 4602 */   }
/* 4603 */
/* 4604 */   private void wholestagecodegen_init_4() {
/* 4605 */     this.project_udf5 = (scala.Function1)project_scalaUDF5.userDefinedFunc();
/* 4606 */     this.project_scalaUDF6 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[11];
/* 4607 */     this.project_catalystConverter6 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF6.dataType());
/* 4608 */     this.project_converter6 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[11]).getChildren().apply(0))).dataType());
/* 4609 */     this.project_udf6 = (scala.Function1)project_scalaUDF6.userDefinedFunc();
/* 4610 */     this.project_scalaUDF7 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[12];
/* 4611 */     this.project_catalystConverter7 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF7.dataType());
/* 4612 */     this.project_converter7 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[12]).getChildren().apply(0))).dataType());
/* 4613 */
/* 4614 */   }
/* 4615 */
/* 4616 */   private void wholestagecodegen_init_235() {
/* 4617 */     this.project_udf464 = (scala.Function1)project_scalaUDF464.userDefinedFunc();
/* 4618 */     this.project_scalaUDF465 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[470];
/* 4619 */     this.project_catalystConverter465 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF465.dataType());
/* 4620 */     this.project_converter468 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[470]).getChildren().apply(0))).dataType());
/* 4621 */     this.project_udf465 = (scala.Function1)project_scalaUDF465.userDefinedFunc();
/* 4622 */     this.project_scalaUDF466 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[471];
/* 4623 */     this.project_catalystConverter466 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF466.dataType());
/* 4624 */     this.project_converter469 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[471]).getChildren().apply(0))).dataType());
/* 4625 */
/* 4626 */   }
/* 4627 */
/* 4628 */   private void wholestagecodegen_init_82() {
/* 4629 */     this.project_udf161 = (scala.Function1)project_scalaUDF161.userDefinedFunc();
/* 4630 */     this.project_scalaUDF162 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[167];
/* 4631 */     this.project_catalystConverter162 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF162.dataType());
/* 4632 */     this.project_converter162 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[167]).getChildren().apply(0))).dataType());
/* 4633 */     this.project_udf162 = (scala.Function1)project_scalaUDF162.userDefinedFunc();
/* 4634 */     this.project_scalaUDF163 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[168];
/* 4635 */     this.project_catalystConverter163 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF163.dataType());
/* 4636 */     this.project_converter163 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[168]).getChildren().apply(0))).dataType());
/* 4637 */
/* 4638 */   }
/* 4639 */
/* 4640 */   private void wholestagecodegen_init_142() {
/* 4641 */     this.project_udf281 = (scala.Function1)project_scalaUDF281.userDefinedFunc();
/* 4642 */     this.project_scalaUDF282 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[287];
/* 4643 */     this.project_catalystConverter282 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF282.dataType());
/* 4644 */     this.project_converter282 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[287]).getChildren().apply(0))).dataType());
/* 4645 */     this.project_udf282 = (scala.Function1)project_scalaUDF282.userDefinedFunc();
/* 4646 */     this.project_scalaUDF283 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[288];
/* 4647 */     this.project_catalystConverter283 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF283.dataType());
/* 4648 */     this.project_converter283 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[288]).getChildren().apply(0))).dataType());
/* 4649 */
/* 4650 */   }
/* 4651 */
/* 4652 */   private void wholestagecodegen_init_157() {
/* 4653 */     this.project_udf311 = (scala.Function1)project_scalaUDF311.userDefinedFunc();
/* 4654 */     this.project_scalaUDF312 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[317];
/* 4655 */     this.project_catalystConverter312 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF312.dataType());
/* 4656 */     this.project_converter312 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[317]).getChildren().apply(0))).dataType());
/* 4657 */     this.project_udf312 = (scala.Function1)project_scalaUDF312.userDefinedFunc();
/* 4658 */     this.project_scalaUDF313 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[318];
/* 4659 */     this.project_catalystConverter313 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF313.dataType());
/* 4660 */     this.project_converter313 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[318]).getChildren().apply(0))).dataType());
/* 4661 */
/* 4662 */   }
/* 4663 */
/* 4664 */   private void wholestagecodegen_init_76() {
/* 4665 */     this.project_udf149 = (scala.Function1)project_scalaUDF149.userDefinedFunc();
/* 4666 */     this.project_scalaUDF150 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[155];
/* 4667 */     this.project_catalystConverter150 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF150.dataType());
/* 4668 */     this.project_converter150 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[155]).getChildren().apply(0))).dataType());
/* 4669 */     this.project_udf150 = (scala.Function1)project_scalaUDF150.userDefinedFunc();
/* 4670 */     this.project_scalaUDF151 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[156];
/* 4671 */     this.project_catalystConverter151 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF151.dataType());
/* 4672 */     this.project_converter151 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[156]).getChildren().apply(0))).dataType());
/* 4673 */
/* 4674 */   }
/* 4675 */
/* 4676 */   private void wholestagecodegen_init_256() {
/* 4677 */     this.project_udf506 = (scala.Function1)project_scalaUDF506.userDefinedFunc();
/* 4678 */     this.project_scalaUDF507 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[512];
/* 4679 */     this.project_catalystConverter507 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF507.dataType());
/* 4680 */     this.project_converter510 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[512]).getChildren().apply(0))).dataType());
/* 4681 */     this.project_udf507 = (scala.Function1)project_scalaUDF507.userDefinedFunc();
/* 4682 */     this.project_scalaUDF508 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[513];
/* 4683 */     this.project_catalystConverter508 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF508.dataType());
/* 4684 */     this.project_converter511 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[513]).getChildren().apply(0))).dataType());
/* 4685 */
/* 4686 */   }
/* 4687 */
/* 4688 */   private void wholestagecodegen_init_163() {
/* 4689 */     this.project_udf323 = (scala.Function1)project_scalaUDF323.userDefinedFunc();
/* 4690 */     this.project_scalaUDF324 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[329];
/* 4691 */     this.project_catalystConverter324 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF324.dataType());
/* 4692 */     this.project_converter324 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[329]).getChildren().apply(0))).dataType());
/* 4693 */     this.project_udf324 = (scala.Function1)project_scalaUDF324.userDefinedFunc();
/* 4694 */     this.project_scalaUDF325 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[330];
/* 4695 */     this.project_catalystConverter325 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF325.dataType());
/* 4696 */     this.project_converter325 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[330]).getChildren().apply(0))).dataType());
/* 4697 */
/* 4698 */   }
/* 4699 */
/* 4700 */   private void wholestagecodegen_init_178() {
/* 4701 */     this.project_udf352 = (scala.Function1)project_scalaUDF352.userDefinedFunc();
/* 4702 */     this.project_scalaUDF353 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[358];
/* 4703 */     this.project_catalystConverter353 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF353.dataType());
/* 4704 */     this.project_converter354 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[358]).getChildren().apply(0))).dataType());
/* 4705 */     this.project_udf353 = (scala.Function1)project_scalaUDF353.userDefinedFunc();
/* 4706 */     this.project_scalaUDF354 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[359];
/* 4707 */     this.project_catalystConverter354 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF354.dataType());
/* 4708 */     this.project_converter355 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[359]).getChildren().apply(0))).dataType());
/* 4709 */
/* 4710 */   }
/* 4711 */
/* 4712 */   private void wholestagecodegen_init_61() {
/* 4713 */     this.project_udf119 = (scala.Function1)project_scalaUDF119.userDefinedFunc();
/* 4714 */     this.project_scalaUDF120 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[125];
/* 4715 */     this.project_catalystConverter120 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF120.dataType());
/* 4716 */     this.project_converter120 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[125]).getChildren().apply(0))).dataType());
/* 4717 */     this.project_udf120 = (scala.Function1)project_scalaUDF120.userDefinedFunc();
/* 4718 */     this.project_scalaUDF121 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[126];
/* 4719 */     this.project_catalystConverter121 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF121.dataType());
/* 4720 */     this.project_converter121 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[126]).getChildren().apply(0))).dataType());
/* 4721 */
/* 4722 */   }
/* 4723 */
/* 4724 */   private void wholestagecodegen_init_241() {
/* 4725 */     this.project_udf476 = (scala.Function1)project_scalaUDF476.userDefinedFunc();
/* 4726 */     this.project_scalaUDF477 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[482];
/* 4727 */     this.project_catalystConverter477 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF477.dataType());
/* 4728 */     this.project_converter480 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[482]).getChildren().apply(0))).dataType());
/* 4729 */     this.project_udf477 = (scala.Function1)project_scalaUDF477.userDefinedFunc();
/* 4730 */     this.project_scalaUDF478 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[483];
/* 4731 */     this.project_catalystConverter478 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF478.dataType());
/* 4732 */     this.project_converter481 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[483]).getChildren().apply(0))).dataType());
/* 4733 */
/* 4734 */   }
/* 4735 */
/* 4736 */   private void wholestagecodegen_init_121() {
/* 4737 */     this.project_udf239 = (scala.Function1)project_scalaUDF239.userDefinedFunc();
/* 4738 */     this.project_scalaUDF240 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[245];
/* 4739 */     this.project_catalystConverter240 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF240.dataType());
/* 4740 */     this.project_converter240 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[245]).getChildren().apply(0))).dataType());
/* 4741 */     this.project_udf240 = (scala.Function1)project_scalaUDF240.userDefinedFunc();
/* 4742 */     this.project_scalaUDF241 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[246];
/* 4743 */     this.project_catalystConverter241 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF241.dataType());
/* 4744 */     this.project_converter241 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[246]).getChildren().apply(0))).dataType());
/* 4745 */
/* 4746 */   }
/* 4747 */
/* 4748 */   private void wholestagecodegen_init_250() {
/* 4749 */     this.project_udf494 = (scala.Function1)project_scalaUDF494.userDefinedFunc();
/* 4750 */     this.project_scalaUDF495 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[500];
/* 4751 */     this.project_catalystConverter495 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF495.dataType());
/* 4752 */     this.project_converter498 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[500]).getChildren().apply(0))).dataType());
/* 4753 */     this.project_udf495 = (scala.Function1)project_scalaUDF495.userDefinedFunc();
/* 4754 */     this.project_scalaUDF496 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[501];
/* 4755 */     this.project_catalystConverter496 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF496.dataType());
/* 4756 */     this.project_converter499 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[501]).getChildren().apply(0))).dataType());
/* 4757 */
/* 4758 */   }
/* 4759 */
/* 4760 */   private void wholestagecodegen_init_259() {
/* 4761 */     this.project_udf512 = (scala.Function1)project_scalaUDF512.userDefinedFunc();
/* 4762 */     this.project_scalaUDF513 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[518];
/* 4763 */     this.project_catalystConverter513 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF513.dataType());
/* 4764 */     this.project_converter516 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[518]).getChildren().apply(0))).dataType());
/* 4765 */     this.project_udf513 = (scala.Function1)project_scalaUDF513.userDefinedFunc();
/* 4766 */     this.project_scalaUDF514 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[519];
/* 4767 */     this.project_catalystConverter514 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF514.dataType());
/* 4768 */     this.project_converter517 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[519]).getChildren().apply(0))).dataType());
/* 4769 */
/* 4770 */   }
/* 4771 */
/* 4772 */   private void wholestagecodegen_init_145() {
/* 4773 */     this.project_udf287 = (scala.Function1)project_scalaUDF287.userDefinedFunc();
/* 4774 */     this.project_scalaUDF288 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[293];
/* 4775 */     this.project_catalystConverter288 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF288.dataType());
/* 4776 */     this.project_converter288 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[293]).getChildren().apply(0))).dataType());
/* 4777 */     this.project_udf288 = (scala.Function1)project_scalaUDF288.userDefinedFunc();
/* 4778 */     this.project_scalaUDF289 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[294];
/* 4779 */     this.project_catalystConverter289 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF289.dataType());
/* 4780 */     this.project_converter289 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[294]).getChildren().apply(0))).dataType());
/* 4781 */
/* 4782 */   }
/* 4783 */
/* 4784 */   private void wholestagecodegen_init_43() {
/* 4785 */     this.project_udf83 = (scala.Function1)project_scalaUDF83.userDefinedFunc();
/* 4786 */     this.project_scalaUDF84 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[89];
/* 4787 */     this.project_catalystConverter84 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF84.dataType());
/* 4788 */     this.project_converter84 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[89]).getChildren().apply(0))).dataType());
/* 4789 */     this.project_udf84 = (scala.Function1)project_scalaUDF84.userDefinedFunc();
/* 4790 */     this.project_scalaUDF85 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[90];
/* 4791 */     this.project_catalystConverter85 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF85.dataType());
/* 4792 */     this.project_converter85 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[90]).getChildren().apply(0))).dataType());
/* 4793 */
/* 4794 */   }
/* 4795 */
/* 4796 */   private void wholestagecodegen_init_217() {
/* 4797 */     this.project_udf429 = (scala.Function1)project_scalaUDF429.userDefinedFunc();
/* 4798 */     this.project_scalaUDF430 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[435];
/* 4799 */     this.project_catalystConverter430 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF430.dataType());
/* 4800 */     this.project_converter432 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[435]).getChildren().apply(0))).dataType());
/* 4801 */     this.project_udf430 = (scala.Function1)project_scalaUDF430.userDefinedFunc();
/* 4802 */     this.project_scalaUDF431 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[436];
/* 4803 */     this.project_catalystConverter431 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF431.dataType());
/* 4804 */     this.project_converter433 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[436]).getChildren().apply(0))).dataType());
/* 4805 */
/* 4806 */   }
/* 4807 */
/* 4808 */   private void wholestagecodegen_init_103() {
/* 4809 */     this.project_udf203 = (scala.Function1)project_scalaUDF203.userDefinedFunc();
/* 4810 */     this.project_scalaUDF204 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[209];
/* 4811 */     this.project_catalystConverter204 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF204.dataType());
/* 4812 */     this.project_converter204 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[209]).getChildren().apply(0))).dataType());
/* 4813 */     this.project_udf204 = (scala.Function1)project_scalaUDF204.userDefinedFunc();
/* 4814 */     this.project_scalaUDF205 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[210];
/* 4815 */     this.project_catalystConverter205 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF205.dataType());
/* 4816 */     this.project_converter205 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[210]).getChildren().apply(0))).dataType());
/* 4817 */
/* 4818 */   }
/* 4819 */
/* 4820 */   private void wholestagecodegen_init_244() {
/* 4821 */     this.project_udf482 = (scala.Function1)project_scalaUDF482.userDefinedFunc();
/* 4822 */     this.project_scalaUDF483 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[488];
/* 4823 */     this.project_catalystConverter483 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF483.dataType());
/* 4824 */     this.project_converter486 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[488]).getChildren().apply(0))).dataType());
/* 4825 */     this.project_udf483 = (scala.Function1)project_scalaUDF483.userDefinedFunc();
/* 4826 */     this.project_scalaUDF484 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[489];
/* 4827 */     this.project_catalystConverter484 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF484.dataType());
/* 4828 */     this.project_converter487 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[489]).getChildren().apply(0))).dataType());
/* 4829 */
/* 4830 */   }
/* 4831 */
/* 4832 */   private void wholestagecodegen_init_130() {
/* 4833 */     this.project_udf257 = (scala.Function1)project_scalaUDF257.userDefinedFunc();
/* 4834 */     this.project_scalaUDF258 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[263];
/* 4835 */     this.project_catalystConverter258 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF258.dataType());
/* 4836 */     this.project_converter258 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[263]).getChildren().apply(0))).dataType());
/* 4837 */     this.project_udf258 = (scala.Function1)project_scalaUDF258.userDefinedFunc();
/* 4838 */     this.project_scalaUDF259 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[264];
/* 4839 */     this.project_catalystConverter259 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF259.dataType());
/* 4840 */     this.project_converter259 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[264]).getChildren().apply(0))).dataType());
/* 4841 */
/* 4842 */   }
/* 4843 */
/* 4844 */   private void wholestagecodegen_init_139() {
/* 4845 */     this.project_udf275 = (scala.Function1)project_scalaUDF275.userDefinedFunc();
/* 4846 */     this.project_scalaUDF276 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[281];
/* 4847 */     this.project_catalystConverter276 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF276.dataType());
/* 4848 */     this.project_converter276 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[281]).getChildren().apply(0))).dataType());
/* 4849 */     this.project_udf276 = (scala.Function1)project_scalaUDF276.userDefinedFunc();
/* 4850 */     this.project_scalaUDF277 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[282];
/* 4851 */     this.project_catalystConverter277 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF277.dataType());
/* 4852 */     this.project_converter277 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[282]).getChildren().apply(0))).dataType());
/* 4853 */
/* 4854 */   }
/* 4855 */
/* 4856 */   private void wholestagecodegen_init_58() {
/* 4857 */     this.project_udf113 = (scala.Function1)project_scalaUDF113.userDefinedFunc();
/* 4858 */     this.project_scalaUDF114 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[119];
/* 4859 */     this.project_catalystConverter114 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF114.dataType());
/* 4860 */     this.project_converter114 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[119]).getChildren().apply(0))).dataType());
/* 4861 */     this.project_udf114 = (scala.Function1)project_scalaUDF114.userDefinedFunc();
/* 4862 */     this.project_values2 = null;
/* 4863 */     this.project_scalaUDF115 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[120];
/* 4864 */     this.project_catalystConverter115 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF115.dataType());
/* 4865 */     this.project_converter115 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[120]).getChildren().apply(0))).dataType());
/* 4866 */
/* 4867 */   }
/* 4868 */
/* 4869 */   private void wholestagecodegen_init_238() {
/* 4870 */     this.project_udf470 = (scala.Function1)project_scalaUDF470.userDefinedFunc();
/* 4871 */     this.project_scalaUDF471 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[476];
/* 4872 */     this.project_catalystConverter471 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF471.dataType());
/* 4873 */     this.project_converter474 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[476]).getChildren().apply(0))).dataType());
/* 4874 */     this.project_udf471 = (scala.Function1)project_scalaUDF471.userDefinedFunc();
/* 4875 */     this.project_scalaUDF472 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[477];
/* 4876 */     this.project_catalystConverter472 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF472.dataType());
/* 4877 */     this.project_converter475 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[477]).getChildren().apply(0))).dataType());
/* 4878 */
/* 4879 */   }
/* 4880 */
/* 4881 */   private void wholestagecodegen_init_223() {
/* 4882 */     this.project_udf441 = (scala.Function1)project_scalaUDF441.userDefinedFunc();
/* 4883 */     this.project_scalaUDF442 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[447];
/* 4884 */     this.project_catalystConverter442 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF442.dataType());
/* 4885 */     this.project_converter444 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[447]).getChildren().apply(0))).dataType());
/* 4886 */     this.project_udf442 = (scala.Function1)project_scalaUDF442.userDefinedFunc();
/* 4887 */     this.project_scalaUDF443 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[448];
/* 4888 */     this.project_catalystConverter443 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF443.dataType());
/* 4889 */     this.project_converter445 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[448]).getChildren().apply(0))).dataType());
/* 4890 */
/* 4891 */   }
/* 4892 */
/* 4893 */   private void wholestagecodegen_init_118() {
/* 4894 */     this.project_udf233 = (scala.Function1)project_scalaUDF233.userDefinedFunc();
/* 4895 */     this.project_scalaUDF234 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[239];
/* 4896 */     this.project_catalystConverter234 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF234.dataType());
/* 4897 */     this.project_converter234 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[239]).getChildren().apply(0))).dataType());
/* 4898 */     this.project_udf234 = (scala.Function1)project_scalaUDF234.userDefinedFunc();
/* 4899 */     this.project_scalaUDF235 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[240];
/* 4900 */     this.project_catalystConverter235 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF235.dataType());
/* 4901 */     this.project_converter235 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[240]).getChildren().apply(0))).dataType());
/* 4902 */
/* 4903 */   }
/* 4904 */
/* 4905 */   private void wholestagecodegen_init_91() {
/* 4906 */     this.project_udf179 = (scala.Function1)project_scalaUDF179.userDefinedFunc();
/* 4907 */     this.project_scalaUDF180 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[185];
/* 4908 */     this.project_catalystConverter180 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF180.dataType());
/* 4909 */     this.project_converter180 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[185]).getChildren().apply(0))).dataType());
/* 4910 */     this.project_udf180 = (scala.Function1)project_scalaUDF180.userDefinedFunc();
/* 4911 */     this.project_scalaUDF181 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[186];
/* 4912 */     this.project_catalystConverter181 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF181.dataType());
/* 4913 */     this.project_converter181 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[186]).getChildren().apply(0))).dataType());
/* 4914 */
/* 4915 */   }
/* 4916 */
/* 4917 */   private void wholestagecodegen_init_7() {
/* 4918 */     this.project_udf11 = (scala.Function1)project_scalaUDF11.userDefinedFunc();
/* 4919 */     this.project_scalaUDF12 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[17];
/* 4920 */     this.project_catalystConverter12 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF12.dataType());
/* 4921 */     this.project_converter12 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[17]).getChildren().apply(0))).dataType());
/* 4922 */     this.project_udf12 = (scala.Function1)project_scalaUDF12.userDefinedFunc();
/* 4923 */     this.project_scalaUDF13 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[18];
/* 4924 */     this.project_catalystConverter13 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF13.dataType());
/* 4925 */     this.project_converter13 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[18]).getChildren().apply(0))).dataType());
/* 4926 */
/* 4927 */   }
/* 4928 */
/* 4929 */   private void wholestagecodegen_init_64() {
/* 4930 */     this.project_udf125 = (scala.Function1)project_scalaUDF125.userDefinedFunc();
/* 4931 */     this.project_scalaUDF126 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[131];
/* 4932 */     this.project_catalystConverter126 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF126.dataType());
/* 4933 */     this.project_converter126 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[131]).getChildren().apply(0))).dataType());
/* 4934 */     this.project_udf126 = (scala.Function1)project_scalaUDF126.userDefinedFunc();
/* 4935 */     this.project_scalaUDF127 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[132];
/* 4936 */     this.project_catalystConverter127 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF127.dataType());
/* 4937 */     this.project_converter127 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[132]).getChildren().apply(0))).dataType());
/* 4938 */
/* 4939 */   }
/* 4940 */
/* 4941 */   private void sort_addToSorter() throws java.io.IOException {
/* 4942 */     while (inputadapter_input.hasNext()) {
/* 4943 */       InternalRow inputadapter_row = (InternalRow) inputadapter_input.next();
/* 4944 */       sort_sorter.insertRow((UnsafeRow)inputadapter_row);
/* 4945 */       if (shouldStop()) return;
/* 4946 */     }
/* 4947 */
/* 4948 */   }
/* 4949 */
/* 4950 */   private void wholestagecodegen_init_124() {
/* 4951 */     this.project_udf245 = (scala.Function1)project_scalaUDF245.userDefinedFunc();
/* 4952 */     this.project_scalaUDF246 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[251];
/* 4953 */     this.project_catalystConverter246 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF246.dataType());
/* 4954 */     this.project_converter246 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[251]).getChildren().apply(0))).dataType());
/* 4955 */     this.project_udf246 = (scala.Function1)project_scalaUDF246.userDefinedFunc();
/* 4956 */     this.project_scalaUDF247 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[252];
/* 4957 */     this.project_catalystConverter247 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF247.dataType());
/* 4958 */     this.project_converter247 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[252]).getChildren().apply(0))).dataType());
/* 4959 */
/* 4960 */   }
/* 4961 */
/* 4962 */   private void wholestagecodegen_init_202() {
/* 4963 */     this.project_catalystConverter400 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF400.dataType());
/* 4964 */     this.project_converter402 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[405]).getChildren().apply(0))).dataType());
/* 4965 */     this.project_udf400 = (scala.Function1)project_scalaUDF400.userDefinedFunc();
/* 4966 */     this.project_scalaUDF401 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[406];
/* 4967 */     this.project_catalystConverter401 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF401.dataType());
/* 4968 */     this.project_converter403 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[406]).getChildren().apply(0))).dataType());
/* 4969 */
/* 4970 */   }
/* 4971 */
/* 4972 */   private void wholestagecodegen_init_151() {
/* 4973 */     this.project_udf299 = (scala.Function1)project_scalaUDF299.userDefinedFunc();
/* 4974 */     this.project_scalaUDF300 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[305];
/* 4975 */     this.project_catalystConverter300 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF300.dataType());
/* 4976 */     this.project_converter300 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[305]).getChildren().apply(0))).dataType());
/* 4977 */     this.project_udf300 = (scala.Function1)project_scalaUDF300.userDefinedFunc();
/* 4978 */     this.project_scalaUDF301 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[306];
/* 4979 */     this.project_catalystConverter301 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF301.dataType());
/* 4980 */     this.project_converter301 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[306]).getChildren().apply(0))).dataType());
/* 4981 */
/* 4982 */   }
/* 4983 */
/* 4984 */   private void wholestagecodegen_init_85() {
/* 4985 */     this.project_udf167 = (scala.Function1)project_scalaUDF167.userDefinedFunc();
/* 4986 */     this.project_scalaUDF168 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[173];
/* 4987 */     this.project_catalystConverter168 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF168.dataType());
/* 4988 */     this.project_converter168 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[173]).getChildren().apply(0))).dataType());
/* 4989 */     this.project_udf168 = (scala.Function1)project_scalaUDF168.userDefinedFunc();
/* 4990 */     this.project_scalaUDF169 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[174];
/* 4991 */     this.project_catalystConverter169 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF169.dataType());
/* 4992 */     this.project_converter169 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[174]).getChildren().apply(0))).dataType());
/* 4993 */
/* 4994 */   }
/* 4995 */
/* 4996 */   private void wholestagecodegen_init_70() {
/* 4997 */     this.project_udf137 = (scala.Function1)project_scalaUDF137.userDefinedFunc();
/* 4998 */     this.project_scalaUDF138 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[143];
/* 4999 */     this.project_catalystConverter138 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF138.dataType());
/* 5000 */     this.project_converter138 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[143]).getChildren().apply(0))).dataType());
/* 5001 */     this.project_udf138 = (scala.Function1)project_scalaUDF138.userDefinedFunc();
/* 5002 */     this.project_scalaUDF139 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[144];
/* 5003 */     this.project_catalystConverter139 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF139.dataType());
/* 5004 */     this.project_converter139 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[144]).getChildren().apply(0))).dataType());
/* 5005 */
/* 5006 */   }
/* 5007 */
/* 5008 */   private void wholestagecodegen_init_79() {
/* 5009 */     this.project_udf155 = (scala.Function1)project_scalaUDF155.userDefinedFunc();
/* 5010 */     this.project_scalaUDF156 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[161];
/* 5011 */     this.project_catalystConverter156 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF156.dataType());
/* 5012 */     this.project_converter156 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[161]).getChildren().apply(0))).dataType());
/* 5013 */     this.project_udf156 = (scala.Function1)project_scalaUDF156.userDefinedFunc();
/* 5014 */     this.project_scalaUDF157 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[162];
/* 5015 */     this.project_catalystConverter157 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF157.dataType());
/* 5016 */     this.project_converter157 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[162]).getChildren().apply(0))).dataType());
/* 5017 */
/* 5018 */   }
/* 5019 */
/* 5020 */   private void wholestagecodegen_init_226() {
/* 5021 */     this.project_udf447 = (scala.Function1)project_scalaUDF447.userDefinedFunc();
/* 5022 */     this.project_scalaUDF448 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[453];
/* 5023 */     this.project_catalystConverter448 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF448.dataType());
/* 5024 */     this.project_converter450 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[453]).getChildren().apply(0))).dataType());
/* 5025 */     this.project_udf448 = (scala.Function1)project_scalaUDF448.userDefinedFunc();
/* 5026 */     this.project_scalaUDF449 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[454];
/* 5027 */     this.project_catalystConverter449 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF449.dataType());
/* 5028 */     this.project_converter451 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[454]).getChildren().apply(0))).dataType());
/* 5029 */
/* 5030 */   }
/* 5031 */
/* 5032 */   private void wholestagecodegen_init_73() {
/* 5033 */     this.project_udf143 = (scala.Function1)project_scalaUDF143.userDefinedFunc();
/* 5034 */     this.project_scalaUDF144 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[149];
/* 5035 */     this.project_catalystConverter144 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF144.dataType());
/* 5036 */     this.project_converter144 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[149]).getChildren().apply(0))).dataType());
/* 5037 */     this.project_udf144 = (scala.Function1)project_scalaUDF144.userDefinedFunc();
/* 5038 */     this.project_scalaUDF145 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[150];
/* 5039 */     this.project_catalystConverter145 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF145.dataType());
/* 5040 */     this.project_converter145 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[150]).getChildren().apply(0))).dataType());
/* 5041 */
/* 5042 */   }
/* 5043 */
/* 5044 */   private void wholestagecodegen_init_31() {
/* 5045 */     this.project_udf59 = (scala.Function1)project_scalaUDF59.userDefinedFunc();
/* 5046 */     this.project_scalaUDF60 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[65];
/* 5047 */     this.project_catalystConverter60 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF60.dataType());
/* 5048 */     this.project_converter60 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[65]).getChildren().apply(0))).dataType());
/* 5049 */     this.project_udf60 = (scala.Function1)project_scalaUDF60.userDefinedFunc();
/* 5050 */     this.project_scalaUDF61 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[66];
/* 5051 */     this.project_catalystConverter61 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF61.dataType());
/* 5052 */     this.project_converter61 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[66]).getChildren().apply(0))).dataType());
/* 5053 */
/* 5054 */   }
/* 5055 */
/* 5056 */   private void wholestagecodegen_init_189() {
/* 5057 */     this.project_udf374 = (scala.Function1)project_scalaUDF374.userDefinedFunc();
/* 5058 */     this.project_scalaUDF375 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[380];
/* 5059 */     this.project_catalystConverter375 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF375.dataType());
/* 5060 */     this.project_converter376 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[380]).getChildren().apply(0))).dataType());
/* 5061 */     this.project_udf375 = (scala.Function1)project_scalaUDF375.userDefinedFunc();
/* 5062 */     this.project_scalaUDF376 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[381];
/* 5063 */     this.project_catalystConverter376 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF376.dataType());
/* 5064 */     this.project_converter377 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[381]).getChildren().apply(0))).dataType());
/* 5065 */
/* 5066 */   }
/* 5067 */
/* 5068 */   private void wholestagecodegen_init_46() {
/* 5069 */     this.project_udf89 = (scala.Function1)project_scalaUDF89.userDefinedFunc();
/* 5070 */     this.project_scalaUDF90 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[95];
/* 5071 */     this.project_catalystConverter90 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF90.dataType());
/* 5072 */     this.project_converter90 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[95]).getChildren().apply(0))).dataType());
/* 5073 */     this.project_udf90 = (scala.Function1)project_scalaUDF90.userDefinedFunc();
/* 5074 */     this.project_scalaUDF91 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[96];
/* 5075 */     this.project_catalystConverter91 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF91.dataType());
/* 5076 */     this.project_converter91 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[96]).getChildren().apply(0))).dataType());
/* 5077 */
/* 5078 */   }
/* 5079 */
/* 5080 */   private void wholestagecodegen_init_106() {
/* 5081 */     this.project_udf209 = (scala.Function1)project_scalaUDF209.userDefinedFunc();
/* 5082 */     this.project_scalaUDF210 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[215];
/* 5083 */     this.project_catalystConverter210 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF210.dataType());
/* 5084 */     this.project_converter210 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[215]).getChildren().apply(0))).dataType());
/* 5085 */     this.project_udf210 = (scala.Function1)project_scalaUDF210.userDefinedFunc();
/* 5086 */     this.project_scalaUDF211 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[216];
/* 5087 */     this.project_catalystConverter211 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF211.dataType());
/* 5088 */     this.project_converter211 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[216]).getChildren().apply(0))).dataType());
/* 5089 */
/* 5090 */   }
/* 5091 */
/* 5092 */   private void wholestagecodegen_init_133() {
/* 5093 */     this.project_udf263 = (scala.Function1)project_scalaUDF263.userDefinedFunc();
/* 5094 */     this.project_scalaUDF264 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[269];
/* 5095 */     this.project_catalystConverter264 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF264.dataType());
/* 5096 */     this.project_converter264 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[269]).getChildren().apply(0))).dataType());
/* 5097 */     this.project_udf264 = (scala.Function1)project_scalaUDF264.userDefinedFunc();
/* 5098 */     this.project_scalaUDF265 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[270];
/* 5099 */     this.project_catalystConverter265 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF265.dataType());
/* 5100 */     this.project_converter265 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[270]).getChildren().apply(0))).dataType());
/* 5101 */
/* 5102 */   }
/* 5103 */
/* 5104 */   private void wholestagecodegen_init_52() {
/* 5105 */     this.project_udf101 = (scala.Function1)project_scalaUDF101.userDefinedFunc();
/* 5106 */     this.project_scalaUDF102 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[107];
/* 5107 */     this.project_catalystConverter102 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF102.dataType());
/* 5108 */     this.project_converter102 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[107]).getChildren().apply(0))).dataType());
/* 5109 */     this.project_udf102 = (scala.Function1)project_scalaUDF102.userDefinedFunc();
/* 5110 */     this.project_scalaUDF103 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[108];
/* 5111 */     this.project_catalystConverter103 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF103.dataType());
/* 5112 */     this.project_converter103 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[108]).getChildren().apply(0))).dataType());
/* 5113 */
/* 5114 */   }
/* 5115 */
/* 5116 */   private void wholestagecodegen_init_67() {
/* 5117 */     this.project_udf131 = (scala.Function1)project_scalaUDF131.userDefinedFunc();
/* 5118 */     this.project_scalaUDF132 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[137];
/* 5119 */     this.project_catalystConverter132 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF132.dataType());
/* 5120 */     this.project_converter132 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[137]).getChildren().apply(0))).dataType());
/* 5121 */     this.project_udf132 = (scala.Function1)project_scalaUDF132.userDefinedFunc();
/* 5122 */     this.project_scalaUDF133 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[138];
/* 5123 */     this.project_catalystConverter133 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF133.dataType());
/* 5124 */     this.project_converter133 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[138]).getChildren().apply(0))).dataType());
/* 5125 */
/* 5126 */   }
/* 5127 */
/* 5128 */   private void wholestagecodegen_init_232() {
/* 5129 */     this.project_catalystConverter459 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF459.dataType());
/* 5130 */     this.project_converter462 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[464]).getChildren().apply(0))).dataType());
/* 5131 */     this.project_udf459 = (scala.Function1)project_scalaUDF459.userDefinedFunc();
/* 5132 */     this.project_scalaUDF460 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[465];
/* 5133 */     this.project_catalystConverter460 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF460.dataType());
/* 5134 */     this.project_converter463 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[465]).getChildren().apply(0))).dataType());
/* 5135 */
/* 5136 */   }
/* 5137 */
/* 5138 */   private void wholestagecodegen_init_127() {
/* 5139 */     this.project_udf251 = (scala.Function1)project_scalaUDF251.userDefinedFunc();
/* 5140 */     this.project_scalaUDF252 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[257];
/* 5141 */     this.project_catalystConverter252 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF252.dataType());
/* 5142 */     this.project_converter252 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[257]).getChildren().apply(0))).dataType());
/* 5143 */     this.project_udf252 = (scala.Function1)project_scalaUDF252.userDefinedFunc();
/* 5144 */     this.project_scalaUDF253 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[258];
/* 5145 */     this.project_catalystConverter253 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF253.dataType());
/* 5146 */     this.project_converter253 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[258]).getChildren().apply(0))).dataType());
/* 5147 */
/* 5148 */   }
/* 5149 */
/* 5150 */   private void wholestagecodegen_init_25() {
/* 5151 */     this.project_udf47 = (scala.Function1)project_scalaUDF47.userDefinedFunc();
/* 5152 */     this.project_scalaUDF48 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[53];
/* 5153 */     this.project_catalystConverter48 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF48.dataType());
/* 5154 */     this.project_converter48 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[53]).getChildren().apply(0))).dataType());
/* 5155 */     this.project_udf48 = (scala.Function1)project_scalaUDF48.userDefinedFunc();
/* 5156 */     this.project_scalaUDF49 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[54];
/* 5157 */     this.project_catalystConverter49 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF49.dataType());
/* 5158 */     this.project_converter49 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[54]).getChildren().apply(0))).dataType());
/* 5159 */
/* 5160 */   }
/* 5161 */
/* 5162 */   private void wholestagecodegen_init_205() {
/* 5163 */     this.project_udf405 = (scala.Function1)project_scalaUDF405.userDefinedFunc();
/* 5164 */     this.project_scalaUDF406 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[411];
/* 5165 */     this.project_catalystConverter406 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF406.dataType());
/* 5166 */     this.project_converter408 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[411]).getChildren().apply(0))).dataType());
/* 5167 */     this.project_udf406 = (scala.Function1)project_scalaUDF406.userDefinedFunc();
/* 5168 */     this.project_scalaUDF407 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[412];
/* 5169 */     this.project_catalystConverter407 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF407.dataType());
/* 5170 */     this.project_converter409 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[412]).getChildren().apply(0))).dataType());
/* 5171 */
/* 5172 */   }
/* 5173 */
/* 5174 */   private void wholestagecodegen_init_195() {
/* 5175 */     this.project_udf386 = (scala.Function1)project_scalaUDF386.userDefinedFunc();
/* 5176 */     this.project_scalaUDF387 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[392];
/* 5177 */     this.project_catalystConverter387 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF387.dataType());
/* 5178 */     this.project_converter388 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[392]).getChildren().apply(0))).dataType());
/* 5179 */     this.project_udf387 = (scala.Function1)project_scalaUDF387.userDefinedFunc();
/* 5180 */     this.project_scalaUDF388 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[393];
/* 5181 */     this.project_catalystConverter388 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF388.dataType());
/* 5182 */     this.project_converter389 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[393]).getChildren().apply(0))).dataType());
/* 5183 */
/* 5184 */   }
/* 5185 */
/* 5186 */   private void wholestagecodegen_init_112() {
/* 5187 */     this.project_udf221 = (scala.Function1)project_scalaUDF221.userDefinedFunc();
/* 5188 */     this.project_scalaUDF222 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[227];
/* 5189 */     this.project_catalystConverter222 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF222.dataType());
/* 5190 */     this.project_converter222 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[227]).getChildren().apply(0))).dataType());
/* 5191 */     this.project_udf222 = (scala.Function1)project_scalaUDF222.userDefinedFunc();
/* 5192 */     this.project_scalaUDF223 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[228];
/* 5193 */     this.project_catalystConverter223 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF223.dataType());
/* 5194 */     this.project_converter223 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[228]).getChildren().apply(0))).dataType());
/* 5195 */
/* 5196 */   }
/* 5197 */
/* 5198 */   private void wholestagecodegen_init_211() {
/* 5199 */     this.project_udf417 = (scala.Function1)project_scalaUDF417.userDefinedFunc();
/* 5200 */     this.project_scalaUDF418 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[423];
/* 5201 */     this.project_catalystConverter418 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF418.dataType());
/* 5202 */     this.project_converter420 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[423]).getChildren().apply(0))).dataType());
/* 5203 */     this.project_udf418 = (scala.Function1)project_scalaUDF418.userDefinedFunc();
/* 5204 */     this.project_scalaUDF419 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[424];
/* 5205 */     this.project_catalystConverter419 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF419.dataType());
/* 5206 */     this.project_converter421 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[424]).getChildren().apply(0))).dataType());
/* 5207 */
/* 5208 */   }
/* 5209 */
/* 5210 */   private void wholestagecodegen_init_49() {
/* 5211 */     this.project_udf95 = (scala.Function1)project_scalaUDF95.userDefinedFunc();
/* 5212 */     this.project_scalaUDF96 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[101];
/* 5213 */     this.project_catalystConverter96 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF96.dataType());
/* 5214 */     this.project_converter96 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[101]).getChildren().apply(0))).dataType());
/* 5215 */     this.project_udf96 = (scala.Function1)project_scalaUDF96.userDefinedFunc();
/* 5216 */     this.project_scalaUDF97 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[102];
/* 5217 */     this.project_catalystConverter97 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF97.dataType());
/* 5218 */     this.project_converter97 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[102]).getChildren().apply(0))).dataType());
/* 5219 */
/* 5220 */   }
/* 5221 */
/* 5222 */   private void wholestagecodegen_init_109() {
/* 5223 */     this.project_udf215 = (scala.Function1)project_scalaUDF215.userDefinedFunc();
/* 5224 */     this.project_scalaUDF216 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[221];
/* 5225 */     this.project_catalystConverter216 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF216.dataType());
/* 5226 */     this.project_converter216 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[221]).getChildren().apply(0))).dataType());
/* 5227 */     this.project_udf216 = (scala.Function1)project_scalaUDF216.userDefinedFunc();
/* 5228 */     this.project_scalaUDF217 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[222];
/* 5229 */     this.project_catalystConverter217 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF217.dataType());
/* 5230 */     this.project_converter217 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[222]).getChildren().apply(0))).dataType());
/* 5231 */
/* 5232 */   }
/* 5233 */
/* 5234 */   private void wholestagecodegen_init_177() {
/* 5235 */     this.project_udf350 = (scala.Function1)project_scalaUDF350.userDefinedFunc();
/* 5236 */     this.project_scalaUDF351 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[356];
/* 5237 */     this.project_catalystConverter351 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF351.dataType());
/* 5238 */     this.project_converter352 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[356]).getChildren().apply(0))).dataType());
/* 5239 */     this.project_udf351 = (scala.Function1)project_scalaUDF351.userDefinedFunc();
/* 5240 */     this.project_scalaUDF352 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[357];
/* 5241 */     this.project_catalystConverter352 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF352.dataType());
/* 5242 */     this.project_converter353 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[357]).getChildren().apply(0))).dataType());
/* 5243 */
/* 5244 */   }
/* 5245 */
/* 5246 */   private void wholestagecodegen_init_55() {
/* 5247 */     this.project_udf107 = (scala.Function1)project_scalaUDF107.userDefinedFunc();
/* 5248 */     this.project_scalaUDF108 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[113];
/* 5249 */     this.project_catalystConverter108 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF108.dataType());
/* 5250 */     this.project_converter108 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[113]).getChildren().apply(0))).dataType());
/* 5251 */     this.project_udf108 = (scala.Function1)project_scalaUDF108.userDefinedFunc();
/* 5252 */     this.project_scalaUDF109 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[114];
/* 5253 */     this.project_catalystConverter109 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF109.dataType());
/* 5254 */     this.project_converter109 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[114]).getChildren().apply(0))).dataType());
/* 5255 */
/* 5256 */   }
/* 5257 */
/* 5258 */   private void wholestagecodegen_init_13() {
/* 5259 */     this.project_udf23 = (scala.Function1)project_scalaUDF23.userDefinedFunc();
/* 5260 */     this.project_scalaUDF24 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[29];
/* 5261 */     this.project_catalystConverter24 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF24.dataType());
/* 5262 */     this.project_converter24 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[29]).getChildren().apply(0))).dataType());
/* 5263 */     this.project_udf24 = (scala.Function1)project_scalaUDF24.userDefinedFunc();
/* 5264 */     this.project_scalaUDF25 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[30];
/* 5265 */     this.project_catalystConverter25 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF25.dataType());
/* 5266 */     this.project_converter25 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[30]).getChildren().apply(0))).dataType());
/* 5267 */
/* 5268 */   }
/* 5269 */
/* 5270 */   private void wholestagecodegen_init_40() {
/* 5271 */     this.project_udf77 = (scala.Function1)project_scalaUDF77.userDefinedFunc();
/* 5272 */     this.project_scalaUDF78 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[83];
/* 5273 */     this.project_catalystConverter78 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF78.dataType());
/* 5274 */     this.project_converter78 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[83]).getChildren().apply(0))).dataType());
/* 5275 */     this.project_udf78 = (scala.Function1)project_scalaUDF78.userDefinedFunc();
/* 5276 */     this.project_scalaUDF79 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[84];
/* 5277 */     this.project_catalystConverter79 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF79.dataType());
/* 5278 */     this.project_converter79 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[84]).getChildren().apply(0))).dataType());
/* 5279 */
/* 5280 */   }
/* 5281 */
/* 5282 */   private void wholestagecodegen_init_115() {
/* 5283 */     this.project_udf227 = (scala.Function1)project_scalaUDF227.userDefinedFunc();
/* 5284 */     this.project_scalaUDF228 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[233];
/* 5285 */     this.project_catalystConverter228 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF228.dataType());
/* 5286 */     this.project_converter228 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[233]).getChildren().apply(0))).dataType());
/* 5287 */     this.project_udf228 = (scala.Function1)project_scalaUDF228.userDefinedFunc();
/* 5288 */     this.project_values4 = null;
/* 5289 */     this.project_scalaUDF229 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[234];
/* 5290 */     this.project_catalystConverter229 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF229.dataType());
/* 5291 */     this.project_converter229 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[234]).getChildren().apply(0))).dataType());
/* 5292 */
/* 5293 */   }
/* 5294 */
/* 5295 */   private void wholestagecodegen_init_34() {
/* 5296 */     this.project_udf65 = (scala.Function1)project_scalaUDF65.userDefinedFunc();
/* 5297 */     this.project_scalaUDF66 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[71];
/* 5298 */     this.project_catalystConverter66 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF66.dataType());
/* 5299 */     this.project_converter66 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[71]).getChildren().apply(0))).dataType());
/* 5300 */     this.project_udf66 = (scala.Function1)project_scalaUDF66.userDefinedFunc();
/* 5301 */     this.project_scalaUDF67 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[72];
/* 5302 */     this.project_catalystConverter67 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF67.dataType());
/* 5303 */     this.project_converter67 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[72]).getChildren().apply(0))).dataType());
/* 5304 */
/* 5305 */   }
/* 5306 */
/* 5307 */   private void wholestagecodegen_init_214() {
/* 5308 */     this.project_udf423 = (scala.Function1)project_scalaUDF423.userDefinedFunc();
/* 5309 */     this.project_scalaUDF424 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[429];
/* 5310 */     this.project_catalystConverter424 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF424.dataType());
/* 5311 */     this.project_converter426 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[429]).getChildren().apply(0))).dataType());
/* 5312 */     this.project_udf424 = (scala.Function1)project_scalaUDF424.userDefinedFunc();
/* 5313 */     this.project_scalaUDF425 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[430];
/* 5314 */     this.project_catalystConverter425 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF425.dataType());
/* 5315 */     this.project_converter427 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[430]).getChildren().apply(0))).dataType());
/* 5316 */
/* 5317 */   }
/* 5318 */
/* 5319 */   private void wholestagecodegen_init_208() {
/* 5320 */     this.project_udf411 = (scala.Function1)project_scalaUDF411.userDefinedFunc();
/* 5321 */     this.project_scalaUDF412 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[417];
/* 5322 */     this.project_catalystConverter412 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF412.dataType());
/* 5323 */     this.project_converter414 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[417]).getChildren().apply(0))).dataType());
/* 5324 */     this.project_udf412 = (scala.Function1)project_scalaUDF412.userDefinedFunc();
/* 5325 */     this.project_scalaUDF413 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[418];
/* 5326 */     this.project_catalystConverter413 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF413.dataType());
/* 5327 */     this.project_converter415 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[418]).getChildren().apply(0))).dataType());
/* 5328 */
/* 5329 */   }
/* 5330 */
/* 5331 */   private void wholestagecodegen_init_183() {
/* 5332 */     this.project_udf362 = (scala.Function1)project_scalaUDF362.userDefinedFunc();
/* 5333 */     this.project_scalaUDF363 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[368];
/* 5334 */     this.project_catalystConverter363 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF363.dataType());
/* 5335 */     this.project_converter364 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[368]).getChildren().apply(0))).dataType());
/* 5336 */     this.project_udf363 = (scala.Function1)project_scalaUDF363.userDefinedFunc();
/* 5337 */     this.project_scalaUDF364 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[369];
/* 5338 */     this.project_catalystConverter364 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF364.dataType());
/* 5339 */     this.project_converter365 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[369]).getChildren().apply(0))).dataType());
/* 5340 */
/* 5341 */   }
/* 5342 */
/* 5343 */   private void wholestagecodegen_init_100() {
/* 5344 */     this.project_udf197 = (scala.Function1)project_scalaUDF197.userDefinedFunc();
/* 5345 */     this.project_scalaUDF198 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[203];
/* 5346 */     this.project_catalystConverter198 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF198.dataType());
/* 5347 */     this.project_converter198 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[203]).getChildren().apply(0))).dataType());
/* 5348 */     this.project_udf198 = (scala.Function1)project_scalaUDF198.userDefinedFunc();
/* 5349 */     this.project_scalaUDF199 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[204];
/* 5350 */     this.project_catalystConverter199 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF199.dataType());
/* 5351 */     this.project_converter199 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[204]).getChildren().apply(0))).dataType());
/* 5352 */
/* 5353 */   }
/* 5354 */
/* 5355 */   private void wholestagecodegen_init_28() {
/* 5356 */     this.project_udf53 = (scala.Function1)project_scalaUDF53.userDefinedFunc();
/* 5357 */     this.project_scalaUDF54 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[59];
/* 5358 */     this.project_catalystConverter54 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF54.dataType());
/* 5359 */     this.project_converter54 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[59]).getChildren().apply(0))).dataType());
/* 5360 */     this.project_udf54 = (scala.Function1)project_scalaUDF54.userDefinedFunc();
/* 5361 */     this.project_scalaUDF55 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[60];
/* 5362 */     this.project_catalystConverter55 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF55.dataType());
/* 5363 */     this.project_converter55 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[60]).getChildren().apply(0))).dataType());
/* 5364 */
/* 5365 */   }
/* 5366 */
/* 5367 */   private void wholestagecodegen_init_198() {
/* 5368 */     this.project_udf392 = (scala.Function1)project_scalaUDF392.userDefinedFunc();
/* 5369 */     this.project_scalaUDF393 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[398];
/* 5370 */     this.project_catalystConverter393 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF393.dataType());
/* 5371 */     this.project_converter394 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[398]).getChildren().apply(0))).dataType());
/* 5372 */     this.project_udf393 = (scala.Function1)project_scalaUDF393.userDefinedFunc();
/* 5373 */     this.project_scalaUDF394 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[399];
/* 5374 */     this.project_catalystConverter394 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF394.dataType());
/* 5375 */     this.project_converter395 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[399]).getChildren().apply(0))).dataType());
/* 5376 */
/* 5377 */   }
/* 5378 */
/* 5379 */   private void wholestagecodegen_init_171() {
/* 5380 */     this.project_udf339 = (scala.Function1)project_scalaUDF339.userDefinedFunc();
/* 5381 */     this.project_scalaUDF340 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[345];
/* 5382 */     this.project_catalystConverter340 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF340.dataType());
/* 5383 */     this.project_converter340 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[345]).getChildren().apply(0))).dataType());
/* 5384 */     this.project_udf340 = (scala.Function1)project_scalaUDF340.userDefinedFunc();
/* 5385 */     this.project_scalaUDF341 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[346];
/* 5386 */     this.project_catalystConverter341 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF341.dataType());
/* 5387 */     this.project_converter341 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[346]).getChildren().apply(0))).dataType());
/* 5388 */
/* 5389 */   }
/* 5390 */
/* 5391 */   private void wholestagecodegen_init_99() {
/* 5392 */     this.project_udf195 = (scala.Function1)project_scalaUDF195.userDefinedFunc();
/* 5393 */     this.project_scalaUDF196 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[201];
/* 5394 */     this.project_catalystConverter196 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF196.dataType());
/* 5395 */     this.project_converter196 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[201]).getChildren().apply(0))).dataType());
/* 5396 */     this.project_udf196 = (scala.Function1)project_scalaUDF196.userDefinedFunc();
/* 5397 */     this.project_scalaUDF197 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[202];
/* 5398 */     this.project_catalystConverter197 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF197.dataType());
/* 5399 */     this.project_converter197 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[202]).getChildren().apply(0))).dataType());
/* 5400 */
/* 5401 */   }
/* 5402 */
/* 5403 */   private void wholestagecodegen_init_16() {
/* 5404 */     this.project_udf29 = (scala.Function1)project_scalaUDF29.userDefinedFunc();
/* 5405 */     this.project_scalaUDF30 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[35];
/* 5406 */     this.project_catalystConverter30 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF30.dataType());
/* 5407 */     this.project_converter30 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[35]).getChildren().apply(0))).dataType());
/* 5408 */     this.project_udf30 = (scala.Function1)project_scalaUDF30.userDefinedFunc();
/* 5409 */     this.project_scalaUDF31 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[36];
/* 5410 */     this.project_catalystConverter31 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF31.dataType());
/* 5411 */     this.project_converter31 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[36]).getChildren().apply(0))).dataType());
/* 5412 */
/* 5413 */   }
/* 5414 */
/* 5415 */   private void wholestagecodegen_init_6() {
/* 5416 */     this.project_udf9 = (scala.Function1)project_scalaUDF9.userDefinedFunc();
/* 5417 */     this.project_scalaUDF10 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[15];
/* 5418 */     this.project_catalystConverter10 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF10.dataType());
/* 5419 */     this.project_converter10 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[15]).getChildren().apply(0))).dataType());
/* 5420 */     this.project_udf10 = (scala.Function1)project_scalaUDF10.userDefinedFunc();
/* 5421 */     this.project_scalaUDF11 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[16];
/* 5422 */     this.project_catalystConverter11 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF11.dataType());
/* 5423 */     this.project_converter11 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[16]).getChildren().apply(0))).dataType());
/* 5424 */
/* 5425 */   }
/* 5426 */
/* 5427 */   private void wholestagecodegen_init_165() {
/* 5428 */     this.project_udf327 = (scala.Function1)project_scalaUDF327.userDefinedFunc();
/* 5429 */     this.project_scalaUDF328 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[333];
/* 5430 */     this.project_catalystConverter328 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF328.dataType());
/* 5431 */     this.project_converter328 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[333]).getChildren().apply(0))).dataType());
/* 5432 */     this.project_udf328 = (scala.Function1)project_scalaUDF328.userDefinedFunc();
/* 5433 */     this.project_scalaUDF329 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[334];
/* 5434 */     this.project_catalystConverter329 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF329.dataType());
/* 5435 */     this.project_converter329 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[334]).getChildren().apply(0))).dataType());
/* 5436 */
/* 5437 */   }
/* 5438 */
/* 5439 */   private void wholestagecodegen_init_258() {
/* 5440 */     this.project_udf510 = (scala.Function1)project_scalaUDF510.userDefinedFunc();
/* 5441 */     this.project_scalaUDF511 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[516];
/* 5442 */     this.project_catalystConverter511 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF511.dataType());
/* 5443 */     this.project_converter514 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[516]).getChildren().apply(0))).dataType());
/* 5444 */     this.project_udf511 = (scala.Function1)project_scalaUDF511.userDefinedFunc();
/* 5445 */     this.project_scalaUDF512 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[517];
/* 5446 */     this.project_catalystConverter512 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF512.dataType());
/* 5447 */     this.project_converter515 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[517]).getChildren().apply(0))).dataType());
/* 5448 */
/* 5449 */   }
/* 5450 */
/* 5451 */   private void wholestagecodegen_init_150() {
/* 5452 */     this.project_udf297 = (scala.Function1)project_scalaUDF297.userDefinedFunc();
/* 5453 */     this.project_scalaUDF298 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[303];
/* 5454 */     this.project_catalystConverter298 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF298.dataType());
/* 5455 */     this.project_converter298 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[303]).getChildren().apply(0))).dataType());
/* 5456 */     this.project_udf298 = (scala.Function1)project_scalaUDF298.userDefinedFunc();
/* 5457 */     this.project_scalaUDF299 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[304];
/* 5458 */     this.project_catalystConverter299 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF299.dataType());
/* 5459 */     this.project_converter299 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[304]).getChildren().apply(0))).dataType());
/* 5460 */
/* 5461 */   }
/* 5462 */
/* 5463 */   private void wholestagecodegen_init_159() {
/* 5464 */     this.project_udf315 = (scala.Function1)project_scalaUDF315.userDefinedFunc();
/* 5465 */     this.project_scalaUDF316 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[321];
/* 5466 */     this.project_catalystConverter316 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF316.dataType());
/* 5467 */     this.project_converter316 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[321]).getChildren().apply(0))).dataType());
/* 5468 */     this.project_udf316 = (scala.Function1)project_scalaUDF316.userDefinedFunc();
/* 5469 */     this.project_scalaUDF317 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[322];
/* 5470 */     this.project_catalystConverter317 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF317.dataType());
/* 5471 */     this.project_converter317 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[322]).getChildren().apply(0))).dataType());
/* 5472 */
/* 5473 */   }
/* 5474 */
/* 5475 */   private void wholestagecodegen_init_186() {
/* 5476 */     this.project_udf368 = (scala.Function1)project_scalaUDF368.userDefinedFunc();
/* 5477 */     this.project_scalaUDF369 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[374];
/* 5478 */     this.project_catalystConverter369 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF369.dataType());
/* 5479 */     this.project_converter370 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[374]).getChildren().apply(0))).dataType());
/* 5480 */     this.project_udf369 = (scala.Function1)project_scalaUDF369.userDefinedFunc();
/* 5481 */     this.project_scalaUDF370 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[375];
/* 5482 */     this.project_catalystConverter370 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF370.dataType());
/* 5483 */     this.project_converter371 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[375]).getChildren().apply(0))).dataType());
/* 5484 */
/* 5485 */   }
/* 5486 */
/* 5487 */   private void wholestagecodegen_init_22() {
/* 5488 */     this.project_udf41 = (scala.Function1)project_scalaUDF41.userDefinedFunc();
/* 5489 */     this.project_scalaUDF42 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[47];
/* 5490 */     this.project_catalystConverter42 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF42.dataType());
/* 5491 */     this.project_converter42 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[47]).getChildren().apply(0))).dataType());
/* 5492 */     this.project_udf42 = (scala.Function1)project_scalaUDF42.userDefinedFunc();
/* 5493 */     this.project_scalaUDF43 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[48];
/* 5494 */     this.project_catalystConverter43 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF43.dataType());
/* 5495 */     this.project_converter43 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[48]).getChildren().apply(0))).dataType());
/* 5496 */
/* 5497 */   }
/* 5498 */
/* 5499 */   private void wholestagecodegen_init_192() {
/* 5500 */     this.project_udf380 = (scala.Function1)project_scalaUDF380.userDefinedFunc();
/* 5501 */     this.project_scalaUDF381 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[386];
/* 5502 */     this.project_catalystConverter381 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF381.dataType());
/* 5503 */     this.project_converter382 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[386]).getChildren().apply(0))).dataType());
/* 5504 */     this.project_udf381 = (scala.Function1)project_scalaUDF381.userDefinedFunc();
/* 5505 */     this.project_scalaUDF382 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[387];
/* 5506 */     this.project_catalystConverter382 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF382.dataType());
/* 5507 */     this.project_converter383 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[387]).getChildren().apply(0))).dataType());
/* 5508 */
/* 5509 */   }
/* 5510 */
/* 5511 */   private void wholestagecodegen_init_90() {
/* 5512 */     this.project_udf177 = (scala.Function1)project_scalaUDF177.userDefinedFunc();
/* 5513 */     this.project_scalaUDF178 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[183];
/* 5514 */     this.project_catalystConverter178 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF178.dataType());
/* 5515 */     this.project_converter178 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[183]).getChildren().apply(0))).dataType());
/* 5516 */     this.project_udf178 = (scala.Function1)project_scalaUDF178.userDefinedFunc();
/* 5517 */     this.project_scalaUDF179 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[184];
/* 5518 */     this.project_catalystConverter179 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF179.dataType());
/* 5519 */     this.project_converter179 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[184]).getChildren().apply(0))).dataType());
/* 5520 */
/* 5521 */   }
/* 5522 */
/* 5523 */   private void wholestagecodegen_init_37() {
/* 5524 */     this.project_udf71 = (scala.Function1)project_scalaUDF71.userDefinedFunc();
/* 5525 */     this.project_scalaUDF72 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[77];
/* 5526 */     this.project_catalystConverter72 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF72.dataType());
/* 5527 */     this.project_converter72 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[77]).getChildren().apply(0))).dataType());
/* 5528 */     this.project_udf72 = (scala.Function1)project_scalaUDF72.userDefinedFunc();
/* 5529 */     this.project_scalaUDF73 = (org.apache.spark.sql.catalyst.expressions.ScalaUDF) references[78];
/* 5530 */     this.project_catalystConverter73 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToCatalystConverter(project_scalaUDF73.dataType());
/* 5531 */     this.project_converter73 = (scala.Function1)org.apache.spark.sql.catalyst.CatalystTypeConverters$.MODULE$.createToScalaConverter(((org.apache.spark.sql.catalyst.expressions.Expression)(((org.apache.spark.sql.catalyst.expressions.ScalaUDF)references[78]).getChildren().apply(0))).dataType());
/* 5532 */
/* 5533 */   }
/* 5534 */
/* 5535 */   protected void processNext() throws java.io.IOException {
/* 5536 */     if (sort_needToSort) {
/* 5537 */       long sort_spillSizeBefore = sort_metrics.memoryBytesSpilled();
/* 5538 */       sort_addToSorter();
/* 5539 */       sort_sortedIter = sort_sorter.sort();
/* 5540 */       sort_sortTime.add(sort_sorter.getSortTimeNanos() / 1000000);
/* 5541 */       sort_peakMemory.add(sort_sorter.getPeakMemoryUsage());
/* 5542 */       sort_spillSize.add(sort_metrics.memoryBytesSpilled() - sort_spillSizeBefore);
/* 5543 */       sort_metrics.incPeakExecutionMemory(sort_sorter.getPeakMemoryUsage());
/* 5544 */       sort_needToSort = false;
/* 5545 */     }
/* 5546 */
/* 5547 */     while (sort_sortedIter.hasNext()) {
/* 5548 */       UnsafeRow sort_outputRow = (UnsafeRow)sort_sortedIter.next();
/* 5549 */
/* 5550 */       if (sample_sampler.sample() == 0) continue;
/* 5551 */       sample_numOutputRows.add(1);
/* 5552 */
/* 5553 */       boolean sort_isNull = sort_outputRow.isNullAt(0);
/* 5554 */       UTF8String sort_value = sort_isNull ? null : (sort_outputRow.getUTF8String(0));
/* 5555 */       boolean sort_isNull1 = sort_outputRow.isNullAt(1);
/* 5556 */       UTF8String sort_value1 = sort_isNull1 ? null : (sort_outputRow.getUTF8String(1));
/* 5557 */       boolean sort_isNull2 = sort_outputRow.isNullAt(2);
/* 5558 */       UTF8String sort_value2 = sort_isNull2 ? null : (sort_outputRow.getUTF8String(2));
/* 5559 */       boolean sort_isNull3 = sort_outputRow.isNullAt(3);
/* 5560 */       UTF8String sort_value3 = sort_isNull3 ? null : (sort_outputRow.getUTF8String(3));
/* 5561 */       boolean sort_isNull4 = sort_outputRow.isNullAt(4);
/* 5562 */       UTF8String sort_value4 = sort_isNull4 ? null : (sort_outputRow.getUTF8String(4));
/* 5563 */       boolean sort_isNull5 = sort_outputRow.isNullAt(5);
/* 5564 */       UTF8String sort_value5 = sort_isNull5 ? null : (sort_outputRow.getUTF8String(5));
/* 5565 */       boolean sort_isNull6 = sort_outputRow.isNullAt(6);
/* 5566 */       double sort_value6 = sort_isNull6 ? -1.0 : (sort_outputRow.getDouble(6));
/* 5567 */       boolean sort_isNull7 = sort_outputRow.isNullAt(7);
/* 5568 */       double sort_value7 = sort_isNull7 ? -1.0 : (sort_outputRow.getDouble(7));
/* 5569 */       boolean sort_isNull8 = sort_outputRow.isNullAt(8);
/* 5570 */       double sort_value8 = sort_isNull8 ? -1.0 : (sort_outputRow.getDouble(8));
/* 5571 */       boolean sort_isNull9 = sort_outputRow.isNullAt(9);
/* 5572 */       double sort_value9 = sort_isNull9 ? -1.0 : (sort_outputRow.getDouble(9));
/* 5573 */       boolean sort_isNull10 = sort_outputRow.isNullAt(10);
/* 5574 */       double sort_value10 = sort_isNull10 ? -1.0 : (sort_outputRow.getDouble(10));
/* 5575 */       boolean sort_isNull11 = sort_outputRow.isNullAt(11);
/* 5576 */       double sort_value11 = sort_isNull11 ? -1.0 : (sort_outputRow.getDouble(11));
/* 5577 */       boolean sort_isNull12 = sort_outputRow.isNullAt(12);
/* 5578 */       double sort_value12 = sort_isNull12 ? -1.0 : (sort_outputRow.getDouble(12));
/* 5579 */       boolean sort_isNull13 = sort_outputRow.isNullAt(13);
/* 5580 */       UTF8String sort_value13 = sort_isNull13 ? null : (sort_outputRow.getUTF8String(13));
/* 5581 */       boolean sort_isNull14 = sort_outputRow.isNullAt(14);
/* 5582 */       UTF8String sort_value14 = sort_isNull14 ? null : (sort_outputRow.getUTF8String(14));
/* 5583 */       boolean sort_isNull15 = sort_outputRow.isNullAt(15);
/* 5584 */       UTF8String sort_value15 = sort_isNull15 ? null : (sort_outputRow.getUTF8String(15));
/* 5585 */       boolean sort_isNull16 = sort_outputRow.isNullAt(16);
/* 5586 */       double sort_value16 = sort_isNull16 ? -1.0 : (sort_outputRow.getDouble(16));
/* 5587 */       boolean sort_isNull17 = sort_outputRow.isNullAt(17);
/* 5588 */       UTF8String sort_value17 = sort_isNull17 ? null : (sort_outputRow.getUTF8String(17));
/* 5589 */       boolean sort_isNull18 = sort_outputRow.isNullAt(18);
/* 5590 */       UTF8String sort_value18 = sort_isNull18 ? null : (sort_outputRow.getUTF8String(18));
/* 5591 */       boolean sort_isNull19 = sort_outputRow.isNullAt(19);
/* 5592 */       UTF8String sort_value19 = sort_isNull19 ? null : (sort_outputRow.getUTF8String(19));
/* 5593 */       boolean sort_isNull20 = sort_outputRow.isNullAt(20);
/* 5594 */       UTF8String sort_value20 = sort_isNull20 ? null : (sort_outputRow.getUTF8String(20));
/* 5595 */       boolean sort_isNull21 = sort_outputRow.isNullAt(21);
/* 5596 */       UTF8String sort_value21 = sort_isNull21 ? null : (sort_outputRow.getUTF8String(21));
/* 5597 */       boolean sort_isNull22 = sort_outputRow.isNullAt(22);
/* 5598 */       UTF8String sort_value22 = sort_isNull22 ? null : (sort_outputRow.getUTF8String(22));
/* 5599 */       boolean sort_isNull23 = sort_outputRow.isNullAt(23);
/* 5600 */       UTF8String sort_value23 = sort_isNull23 ? null : (sort_outputRow.getUTF8String(23));
/* 5601 */       boolean sort_isNull24 = sort_outputRow.isNullAt(24);
/* 5602 */       UTF8String sort_value24 = sort_isNull24 ? null : (sort_outputRow.getUTF8String(24));
/* 5603 */       boolean sort_isNull25 = sort_outputRow.isNullAt(25);
/* 5604 */       UTF8String sort_value25 = sort_isNull25 ? null : (sort_outputRow.getUTF8String(25));
/* 5605 */       boolean sort_isNull26 = sort_outputRow.isNullAt(26);
/* 5606 */       UTF8String sort_value26 = sort_isNull26 ? null : (sort_outputRow.getUTF8String(26));
/* 5607 */       boolean sort_isNull27 = sort_outputRow.isNullAt(27);
/* 5608 */       double sort_value27 = sort_isNull27 ? -1.0 : (sort_outputRow.getDouble(27));
/* 5609 */
/* 5610 */       project_values = new Object[27];
/* 5611 */       Object project_arg = sort_isNull ? null : project_converter1.apply(sort_value);
/* 5612 */
/* 5613 */       Double project_result1 = null;
/* 5614 */       try {
/* 5615 */         project_result1 = (Double)project_catalystConverter1.apply(project_udf1.apply(project_arg));
/* 5616 */       } catch (Exception e) {
/* 5617 */         throw new org.apache.spark.SparkException(project_scalaUDF1.udfErrorMessage(), e);
/* 5618 */       }
/* 5619 */
/* 5620 */       boolean project_isNull32 = project_result1 == null;
/* 5621 */       double project_value32 = -1.0;
/* 5622 */       if (!project_isNull32) {
/* 5623 */         project_value32 = project_result1;
/* 5624 */       }
/* 5625 */       boolean project_isNull30 = false;
/* 5626 */       InternalRow project_value30 = null;
/* 5627 */       if (!false && project_isNull32) {
/* 5628 */         final InternalRow project_value34 = null;
/* 5629 */         project_isNull30 = true;
/* 5630 */         project_value30 = project_value34;
/* 5631 */       } else {
/* 5632 */         Object project_arg1 = sort_isNull ? null : project_converter3.apply(sort_value);
/* 5633 */
/* 5634 */         Double project_result3 = null;
/* 5635 */         try {
/* 5636 */           project_result3 = (Double)project_catalystConverter3.apply(project_udf3.apply(project_arg1));
/* 5637 */         } catch (Exception e) {
/* 5638 */           throw new org.apache.spark.SparkException(project_scalaUDF3.udfErrorMessage(), e);
/* 5639 */         }
/* 5640 */
/* 5641 */         boolean project_isNull36 = project_result3 == null;
/* 5642 */         double project_value36 = -1.0;
/* 5643 */         if (!project_isNull36) {
/* 5644 */           project_value36 = project_result3;
/* 5645 */         }
/* 5646 */         Object project_arg2 = project_isNull36 ? null : project_converter2.apply(project_value36);
/* 5647 */
/* 5648 */         InternalRow project_result2 = null;
/* 5649 */         try {
/* 5650 */           project_result2 = (InternalRow)project_catalystConverter2.apply(project_udf2.apply(project_arg2));
/* 5651 */         } catch (Exception e) {
/* 5652 */           throw new org.apache.spark.SparkException(project_scalaUDF2.udfErrorMessage(), e);
/* 5653 */         }
/* 5654 */
/* 5655 */         boolean project_isNull35 = project_result2 == null;
/* 5656 */         InternalRow project_value35 = null;
/* 5657 */         if (!project_isNull35) {
/* 5658 */           project_value35 = project_result2;
/* 5659 */         }
/* 5660 */         project_isNull30 = project_isNull35;
/* 5661 */         project_value30 = project_value35;
/* 5662 */       }
/* 5663 */       if (project_isNull30) {
/* 5664 */         project_values[0] = null;
/* 5665 */       } else {
/* 5666 */         project_values[0] = project_value30;
/* 5667 */       }
/* 5668 */
/* 5669 */       Object project_arg3 = sort_isNull1 ? null : project_converter4.apply(sort_value1);
/* 5670 */
/* 5671 */       Double project_result4 = null;
/* 5672 */       try {
/* 5673 */         project_result4 = (Double)project_catalystConverter4.apply(project_udf4.apply(project_arg3));
/* 5674 */       } catch (Exception e) {
/* 5675 */         throw new org.apache.spark.SparkException(project_scalaUDF4.udfErrorMessage(), e);
/* 5676 */       }
/* 5677 */
/* 5678 */       boolean project_isNull40 = project_result4 == null;
/* 5679 */       double project_value40 = -1.0;
/* 5680 */       if (!project_isNull40) {
/* 5681 */         project_value40 = project_result4;
/* 5682 */       }
/* 5683 */       boolean project_isNull38 = false;
/* 5684 */       InternalRow project_value38 = null;
/* 5685 */       if (!false && project_isNull40) {
/* 5686 */         final InternalRow project_value42 = null;
/* 5687 */         project_isNull38 = true;
/* 5688 */         project_value38 = project_value42;
/* 5689 */       } else {
/* 5690 */         Object project_arg4 = sort_isNull1 ? null : project_converter6.apply(sort_value1);
/* 5691 */
/* 5692 */         Double project_result6 = null;
/* 5693 */         try {
/* 5694 */           project_result6 = (Double)project_catalystConverter6.apply(project_udf6.apply(project_arg4));
/* 5695 */         } catch (Exception e) {
/* 5696 */           throw new org.apache.spark.SparkException(project_scalaUDF6.udfErrorMessage(), e);
/* 5697 */         }
/* 5698 */
/* 5699 */         boolean project_isNull44 = project_result6 == null;
/* 5700 */         double project_value44 = -1.0;
/* 5701 */         if (!project_isNull44) {
/* 5702 */           project_value44 = project_result6;
/* 5703 */         }
/* 5704 */         Object project_arg5 = project_isNull44 ? null : project_converter5.apply(project_value44);
/* 5705 */
/* 5706 */         InternalRow project_result5 = null;
/* 5707 */         try {
/* 5708 */           project_result5 = (InternalRow)project_catalystConverter5.apply(project_udf5.apply(project_arg5));
/* 5709 */         } catch (Exception e) {
/* 5710 */           throw new org.apache.spark.SparkException(project_scalaUDF5.udfErrorMessage(), e);
/* 5711 */         }
/* 5712 */
/* 5713 */         boolean project_isNull43 = project_result5 == null;
/* 5714 */         InternalRow project_value43 = null;
/* 5715 */         if (!project_isNull43) {
/* 5716 */           project_value43 = project_result5;
/* 5717 */         }
/* 5718 */         project_isNull38 = project_isNull43;
/* 5719 */         project_value38 = project_value43;
/* 5720 */       }
/* 5721 */       if (project_isNull38) {
/* 5722 */         project_values[1] = null;
/* 5723 */       } else {
/* 5724 */         project_values[1] = project_value38;
/* 5725 */       }
/* 5726 */
/* 5727 */       Object project_arg6 = sort_isNull2 ? null : project_converter7.apply(sort_value2);
/* 5728 */
/* 5729 */       Double project_result7 = null;
/* 5730 */       try {
/* 5731 */         project_result7 = (Double)project_catalystConverter7.apply(project_udf7.apply(project_arg6));
/* 5732 */       } catch (Exception e) {
/* 5733 */         throw new org.apache.spark.SparkException(project_scalaUDF7.udfErrorMessage(), e);
/* 5734 */       }
/* 5735 */
/* 5736 */       boolean project_isNull48 = project_result7 == null;
/* 5737 */       double project_value48 = -1.0;
/* 5738 */       if (!project_isNull48) {
/* 5739 */         project_value48 = project_result7;
/* 5740 */       }
/* 5741 */       boolean project_isNull46 = false;
/* 5742 */       InternalRow project_value46 = null;
/* 5743 */       if (!false && project_isNull48) {
/* 5744 */         final InternalRow project_value50 = null;
/* 5745 */         project_isNull46 = true;
/* 5746 */         project_value46 = project_value50;
/* 5747 */       } else {
/* 5748 */         Object project_arg7 = sort_isNull2 ? null : project_converter9.apply(sort_value2);
/* 5749 */
/* 5750 */         Double project_result9 = null;
/* 5751 */         try {
/* 5752 */           project_result9 = (Double)project_catalystConverter9.apply(project_udf9.apply(project_arg7));
/* 5753 */         } catch (Exception e) {
/* 5754 */           throw new org.apache.spark.SparkException(project_scalaUDF9.udfErrorMessage(), e);
/* 5755 */         }
/* 5756 */
/* 5757 */         boolean project_isNull52 = project_result9 == null;
/* 5758 */         double project_value52 = -1.0;
/* 5759 */         if (!project_isNull52) {
/* 5760 */           project_value52 = project_result9;
/* 5761 */         }
/* 5762 */         Object project_arg8 = project_isNull52 ? null : project_converter8.apply(project_value52);
/* 5763 */
/* 5764 */         InternalRow project_result8 = null;
/* 5765 */         try {
/* 5766 */           project_result8 = (InternalRow)project_catalystConverter8.apply(project_udf8.apply(project_arg8));
/* 5767 */         } catch (Exception e) {
/* 5768 */           throw new org.apache.spark.SparkException(project_scalaUDF8.udfErrorMessage(), e);
/* 5769 */         }
/* 5770 */
/* 5771 */         boolean project_isNull51 = project_result8 == null;
/* 5772 */         InternalRow project_value51 = null;
/* 5773 */         if (!project_isNull51) {
/* 5774 */           project_value51 = project_result8;
/* 5775 */         }
/* 5776 */         project_isNull46 = project_isNull51;
/* 5777 */         project_value46 = project_value51;
/* 5778 */       }
/* 5779 */       if (project_isNull46) {
/* 5780 */         project_values[2] = null;
/* 5781 */       } else {
/* 5782 */         project_values[2] = project_value46;
/* 5783 */       }
/* 5784 */
/* 5785 */       Object project_arg9 = sort_isNull3 ? null : project_converter10.apply(sort_value3);
/* 5786 */
/* 5787 */       Double project_result10 = null;
/* 5788 */       try {
/* 5789 */         project_result10 = (Double)project_catalystConverter10.apply(project_udf10.apply(project_arg9));
/* 5790 */       } catch (Exception e) {
/* 5791 */         throw new org.apache.spark.SparkException(project_scalaUDF10.udfErrorMessage(), e);
/* 5792 */       }
/* 5793 */
/* 5794 */       boolean project_isNull56 = project_result10 == null;
/* 5795 */       double project_value56 = -1.0;
/* 5796 */       if (!project_isNull56) {
/* 5797 */         project_value56 = project_result10;
/* 5798 */       }
/* 5799 */       boolean project_isNull54 = false;
/* 5800 */       InternalRow project_value54 = null;
/* 5801 */       if (!false && project_isNull56) {
/* 5802 */         final InternalRow project_value58 = null;
/* 5803 */         project_isNull54 = true;
/* 5804 */         project_value54 = project_value58;
/* 5805 */       } else {
/* 5806 */         Object project_arg10 = sort_isNull3 ? null : project_converter12.apply(sort_value3);
/* 5807 */
/* 5808 */         Double project_result12 = null;
/* 5809 */         try {
/* 5810 */           project_result12 = (Double)project_catalystConverter12.apply(project_udf12.apply(project_arg10));
/* 5811 */         } catch (Exception e) {
/* 5812 */           throw new org.apache.spark.SparkException(project_scalaUDF12.udfErrorMessage(), e);
/* 5813 */         }
/* 5814 */
/* 5815 */         boolean project_isNull60 = project_result12 == null;
/* 5816 */         double project_value60 = -1.0;
/* 5817 */         if (!project_isNull60) {
/* 5818 */           project_value60 = project_result12;
/* 5819 */         }
/* 5820 */         Object project_arg11 = project_isNull60 ? null : project_converter11.apply(project_value60);
/* 5821 */
/* 5822 */         InternalRow project_result11 = null;
/* 5823 */         try {
/* 5824 */           project_result11 = (InternalRow)project_catalystConverter11.apply(project_udf11.apply(project_arg11));
/* 5825 */         } catch (Exception e) {
/* 5826 */           throw new org.apache.spark.SparkException(project_scalaUDF11.udfErrorMessage(), e);
/* 5827 */         }
/* 5828 */
/* 5829 */         boolean project_isNull59 = project_result11 == null;
/* 5830 */         InternalRow project_value59 = null;
/* 5831 */         if (!project_isNull59) {
/* 5832 */           project_value59 = project_result11;
/* 5833 */         }
/* 5834 */         project_isNull54 = project_isNull59;
/* 5835 */         project_value54 = project_value59;
/* 5836 */       }
/* 5837 */       if (project_isNull54) {
/* 5838 */         project_values[3] = null;
/* 5839 */       } else {
/* 5840 */         project_values[3] = project_value54;
/* 5841 */       }
/* 5842 */
/* 5843 */       Object project_arg12 = sort_isNull4 ? null : project_converter13.apply(sort_value4);
/* 5844 */
/* 5845 */       Double project_result13 = null;
/* 5846 */       try {
/* 5847 */         project_result13 = (Double)project_catalystConverter13.apply(project_udf13.apply(project_arg12));
/* 5848 */       } catch (Exception e) {
/* 5849 */         throw new org.apache.spark.SparkException(project_scalaUDF13.udfErrorMessage(), e);
/* 5850 */       }
/* 5851 */
/* 5852 */       boolean project_isNull64 = project_result13 == null;
/* 5853 */       double project_value64 = -1.0;
/* 5854 */       if (!project_isNull64) {
/* 5855 */         project_value64 = project_result13;
/* 5856 */       }
/* 5857 */       boolean project_isNull62 = false;
/* 5858 */       InternalRow project_value62 = null;
/* 5859 */       if (!false && project_isNull64) {
/* 5860 */         final InternalRow project_value66 = null;
/* 5861 */         project_isNull62 = true;
/* 5862 */         project_value62 = project_value66;
/* 5863 */       } else {
/* 5864 */         Object project_arg13 = sort_isNull4 ? null : project_converter15.apply(sort_value4);
/* 5865 */
/* 5866 */         Double project_result15 = null;
/* 5867 */         try {
/* 5868 */           project_result15 = (Double)project_catalystConverter15.apply(project_udf15.apply(project_arg13));
/* 5869 */         } catch (Exception e) {
/* 5870 */           throw new org.apache.spark.SparkException(project_scalaUDF15.udfErrorMessage(), e);
/* 5871 */         }
/* 5872 */
/* 5873 */         boolean project_isNull68 = project_result15 == null;
/* 5874 */         double project_value68 = -1.0;
/* 5875 */         if (!project_isNull68) {
/* 5876 */           project_value68 = project_result15;
/* 5877 */         }
/* 5878 */         Object project_arg14 = project_isNull68 ? null : project_converter14.apply(project_value68);
/* 5879 */
/* 5880 */         InternalRow project_result14 = null;
/* 5881 */         try {
/* 5882 */           project_result14 = (InternalRow)project_catalystConverter14.apply(project_udf14.apply(project_arg14));
/* 5883 */         } catch (Exception e) {
/* 5884 */           throw new org.apache.spark.SparkException(project_scalaUDF14.udfErrorMessage(), e);
/* 5885 */         }
/* 5886 */
/* 5887 */         boolean project_isNull67 = project_result14 == null;
/* 5888 */         InternalRow project_value67 = null;
/* 5889 */         if (!project_isNull67) {
/* 5890 */           project_value67 = project_result14;
/* 5891 */         }
/* 5892 */         project_isNull62 = project_isNull67;
/* 5893 */         project_value62 = project_value67;
/* 5894 */       }
/* 5895 */       if (project_isNull62) {
/* 5896 */         project_values[4] = null;
/* 5897 */       } else {
/* 5898 */         project_values[4] = project_value62;
/* 5899 */       }
/* 5900 */
/* 5901 */       Object project_arg15 = sort_isNull5 ? null : project_converter16.apply(sort_value5);
/* 5902 */
/* 5903 */       Double project_result16 = null;
/* 5904 */       try {
/* 5905 */         project_result16 = (Double)project_catalystConverter16.apply(project_udf16.apply(project_arg15));
/* 5906 */       } catch (Exception e) {
/* 5907 */         throw new org.apache.spark.SparkException(project_scalaUDF16.udfErrorMessage(), e);
/* 5908 */       }
/* 5909 */
/* 5910 */       boolean project_isNull72 = project_result16 == null;
/* 5911 */       double project_value72 = -1.0;
/* 5912 */       if (!project_isNull72) {
/* 5913 */         project_value72 = project_result16;
/* 5914 */       }
/* 5915 */       boolean project_isNull70 = false;
/* 5916 */       InternalRow project_value70 = null;
/* 5917 */       if (!false && project_isNull72) {
/* 5918 */         final InternalRow project_value74 = null;
/* 5919 */         project_isNull70 = true;
/* 5920 */         project_value70 = project_value74;
/* 5921 */       } else {
/* 5922 */         Object project_arg16 = sort_isNull5 ? null : project_converter18.apply(sort_value5);
/* 5923 */
/* 5924 */         Double project_result18 = null;
/* 5925 */         try {
/* 5926 */           project_result18 = (Double)project_catalystConverter18.apply(project_udf18.apply(project_arg16));
/* 5927 */         } catch (Exception e) {
/* 5928 */           throw new org.apache.spark.SparkException(project_scalaUDF18.udfErrorMessage(), e);
/* 5929 */         }
/* 5930 */
/* 5931 */         boolean project_isNull76 = project_result18 == null;
/* 5932 */         double project_value76 = -1.0;
/* 5933 */         if (!project_isNull76) {
/* 5934 */           project_value76 = project_result18;
/* 5935 */         }
/* 5936 */         Object project_arg17 = project_isNull76 ? null : project_converter17.apply(project_value76);
/* 5937 */
/* 5938 */         InternalRow project_result17 = null;
/* 5939 */         try {
/* 5940 */           project_result17 = (InternalRow)project_catalystConverter17.apply(project_udf17.apply(project_arg17));
/* 5941 */         } catch (Exception e) {
/* 5942 */           throw new org.apache.spark.SparkException(project_scalaUDF17.udfErrorMessage(), e);
/* 5943 */         }
/* 5944 */
/* 5945 */         boolean project_isNull75 = project_result17 == null;
/* 5946 */         InternalRow project_value75 = null;
/* 5947 */         if (!project_isNull75) {
/* 5948 */           project_value75 = project_result17;
/* 5949 */         }
/* 5950 */         project_isNull70 = project_isNull75;
/* 5951 */         project_value70 = project_value75;
/* 5952 */       }
/* 5953 */       if (project_isNull70) {
/* 5954 */         project_values[5] = null;
/* 5955 */       } else {
/* 5956 */         project_values[5] = project_value70;
/* 5957 */       }
/* 5958 */
/* 5959 */       if (sort_isNull6) {
/* 5960 */         project_values[6] = null;
/* 5961 */       } else {
/* 5962 */         project_values[6] = sort_value6;
/* 5963 */       }
/* 5964 */
/* 5965 */       if (sort_isNull7) {
/* 5966 */         project_values[7] = null;
/* 5967 */       } else {
/* 5968 */         project_values[7] = sort_value7;
/* 5969 */       }
/* 5970 */
/* 5971 */       if (sort_isNull8) {
/* 5972 */         project_values[8] = null;
/* 5973 */       } else {
/* 5974 */         project_values[8] = sort_value8;
/* 5975 */       }
/* 5976 */
/* 5977 */       if (sort_isNull9) {
/* 5978 */         project_values[9] = null;
/* 5979 */       } else {
/* 5980 */         project_values[9] = sort_value9;
/* 5981 */       }
/* 5982 */
/* 5983 */       if (sort_isNull10) {
/* 5984 */         project_values[10] = null;
/* 5985 */       } else {
/* 5986 */         project_values[10] = sort_value10;
/* 5987 */       }
/* 5988 */
/* 5989 */       if (sort_isNull11) {
/* 5990 */         project_values[11] = null;
/* 5991 */       } else {
/* 5992 */         project_values[11] = sort_value11;
/* 5993 */       }
/* 5994 */
/* 5995 */       if (sort_isNull12) {
/* 5996 */         project_values[12] = null;
/* 5997 */       } else {
/* 5998 */         project_values[12] = sort_value12;
/* 5999 */       }
/* 6000 */
/* 6001 */       Object project_arg18 = sort_isNull13 ? null : project_converter19.apply(sort_value13);
/* 6002 */
/* 6003 */       Double project_result19 = null;
/* 6004 */       try {
/* 6005 */         project_result19 = (Double)project_catalystConverter19.apply(project_udf19.apply(project_arg18));
/* 6006 */       } catch (Exception e) {
/* 6007 */         throw new org.apache.spark.SparkException(project_scalaUDF19.udfErrorMessage(), e);
/* 6008 */       }
/* 6009 */
/* 6010 */       boolean project_isNull87 = project_result19 == null;
/* 6011 */       double project_value87 = -1.0;
/* 6012 */       if (!project_isNull87) {
/* 6013 */         project_value87 = project_result19;
/* 6014 */       }
/* 6015 */       boolean project_isNull85 = false;
/* 6016 */       InternalRow project_value85 = null;
/* 6017 */       if (!false && project_isNull87) {
/* 6018 */         final InternalRow project_value89 = null;
/* 6019 */         project_isNull85 = true;
/* 6020 */         project_value85 = project_value89;
/* 6021 */       } else {
/* 6022 */         Object project_arg19 = sort_isNull13 ? null : project_converter21.apply(sort_value13);
/* 6023 */
/* 6024 */         Double project_result21 = null;
/* 6025 */         try {
/* 6026 */           project_result21 = (Double)project_catalystConverter21.apply(project_udf21.apply(project_arg19));
/* 6027 */         } catch (Exception e) {
/* 6028 */           throw new org.apache.spark.SparkException(project_scalaUDF21.udfErrorMessage(), e);
/* 6029 */         }
/* 6030 */
/* 6031 */         boolean project_isNull91 = project_result21 == null;
/* 6032 */         double project_value91 = -1.0;
/* 6033 */         if (!project_isNull91) {
/* 6034 */           project_value91 = project_result21;
/* 6035 */         }
/* 6036 */         Object project_arg20 = project_isNull91 ? null : project_converter20.apply(project_value91);
/* 6037 */
/* 6038 */         InternalRow project_result20 = null;
/* 6039 */         try {
/* 6040 */           project_result20 = (InternalRow)project_catalystConverter20.apply(project_udf20.apply(project_arg20));
/* 6041 */         } catch (Exception e) {
/* 6042 */           throw new org.apache.spark.SparkException(project_scalaUDF20.udfErrorMessage(), e);
/* 6043 */         }
/* 6044 */
/* 6045 */         boolean project_isNull90 = project_result20 == null;
/* 6046 */         InternalRow project_value90 = null;
/* 6047 */         if (!project_isNull90) {
/* 6048 */           project_value90 = project_result20;
/* 6049 */         }
/* 6050 */         project_isNull85 = project_isNull90;
/* 6051 */         project_value85 = project_value90;
/* 6052 */       }
/* 6053 */       if (project_isNull85) {
/* 6054 */         project_values[13] = null;
/* 6055 */       } else {
/* 6056 */         project_values[13] = project_value85;
/* 6057 */       }
/* 6058 */
/* 6059 */       Object project_arg21 = sort_isNull14 ? null : project_converter22.apply(sort_value14);
/* 6060 */
/* 6061 */       Double project_result22 = null;
/* 6062 */       try {
/* 6063 */         project_result22 = (Double)project_catalystConverter22.apply(project_udf22.apply(project_arg21));
/* 6064 */       } catch (Exception e) {
/* 6065 */         throw new org.apache.spark.SparkException(project_scalaUDF22.udfErrorMessage(), e);
/* 6066 */       }
/* 6067 */
/* 6068 */       boolean project_isNull95 = project_result22 == null;
/* 6069 */       double project_value95 = -1.0;
/* 6070 */       if (!project_isNull95) {
/* 6071 */         project_value95 = project_result22;
/* 6072 */       }
/* 6073 */       boolean project_isNull93 = false;
/* 6074 */       InternalRow project_value93 = null;
/* 6075 */       if (!false && project_isNull95) {
/* 6076 */         final InternalRow project_value97 = null;
/* 6077 */         project_isNull93 = true;
/* 6078 */         project_value93 = project_value97;
/* 6079 */       } else {
/* 6080 */         Object project_arg22 = sort_isNull14 ? null : project_converter24.apply(sort_value14);
/* 6081 */
/* 6082 */         Double project_result24 = null;
/* 6083 */         try {
/* 6084 */           project_result24 = (Double)project_catalystConverter24.apply(project_udf24.apply(project_arg22));
/* 6085 */         } catch (Exception e) {
/* 6086 */           throw new org.apache.spark.SparkException(project_scalaUDF24.udfErrorMessage(), e);
/* 6087 */         }
/* 6088 */
/* 6089 */         boolean project_isNull99 = project_result24 == null;
/* 6090 */         double project_value99 = -1.0;
/* 6091 */         if (!project_isNull99) {
/* 6092 */           project_value99 = project_result24;
/* 6093 */         }
/* 6094 */         Object project_arg23 = project_isNull99 ? null : project_converter23.apply(project_value99);
/* 6095 */
/* 6096 */         InternalRow project_result23 = null;
/* 6097 */         try {
/* 6098 */           project_result23 = (InternalRow)project_catalystConverter23.apply(project_udf23.apply(project_arg23));
/* 6099 */         } catch (Exception e) {
/* 6100 */           throw new org.apache.spark.SparkException(project_scalaUDF23.udfErrorMessage(), e);
/* 6101 */         }
/* 6102 */
/* 6103 */         boolean project_isNull98 = project_result23 == null;
/* 6104 */         InternalRow project_value98 = null;
/* 6105 */         if (!project_isNull98) {
/* 6106 */           project_value98 = project_result23;
/* 6107 */         }
/* 6108 */         project_isNull93 = project_isNull98;
/* 6109 */         project_value93 = project_value98;
/* 6110 */       }
/* 6111 */       if (project_isNull93) {
/* 6112 */         project_values[14] = null;
/* 6113 */       } else {
/* 6114 */         project_values[14] = project_value93;
/* 6115 */       }
/* 6116 */
/* 6117 */       Object project_arg24 = sort_isNull15 ? null : project_converter25.apply(sort_value15);
/* 6118 */
/* 6119 */       Double project_result25 = null;
/* 6120 */       try {
/* 6121 */         project_result25 = (Double)project_catalystConverter25.apply(project_udf25.apply(project_arg24));
/* 6122 */       } catch (Exception e) {
/* 6123 */         throw new org.apache.spark.SparkException(project_scalaUDF25.udfErrorMessage(), e);
/* 6124 */       }
/* 6125 */
/* 6126 */       boolean project_isNull103 = project_result25 == null;
/* 6127 */       double project_value103 = -1.0;
/* 6128 */       if (!project_isNull103) {
/* 6129 */         project_value103 = project_result25;
/* 6130 */       }
/* 6131 */       boolean project_isNull101 = false;
/* 6132 */       InternalRow project_value101 = null;
/* 6133 */       if (!false && project_isNull103) {
/* 6134 */         final InternalRow project_value105 = null;
/* 6135 */         project_isNull101 = true;
/* 6136 */         project_value101 = project_value105;
/* 6137 */       } else {
/* 6138 */         Object project_arg25 = sort_isNull15 ? null : project_converter27.apply(sort_value15);
/* 6139 */
/* 6140 */         Double project_result27 = null;
/* 6141 */         try {
/* 6142 */           project_result27 = (Double)project_catalystConverter27.apply(project_udf27.apply(project_arg25));
/* 6143 */         } catch (Exception e) {
/* 6144 */           throw new org.apache.spark.SparkException(project_scalaUDF27.udfErrorMessage(), e);
/* 6145 */         }
/* 6146 */
/* 6147 */         boolean project_isNull107 = project_result27 == null;
/* 6148 */         double project_value107 = -1.0;
/* 6149 */         if (!project_isNull107) {
/* 6150 */           project_value107 = project_result27;
/* 6151 */         }
/* 6152 */         Object project_arg26 = project_isNull107 ? null : project_converter26.apply(project_value107);
/* 6153 */
/* 6154 */         InternalRow project_result26 = null;
/* 6155 */         try {
/* 6156 */           project_result26 = (InternalRow)project_catalystConverter26.apply(project_udf26.apply(project_arg26));
/* 6157 */         } catch (Exception e) {
/* 6158 */           throw new org.apache.spark.SparkException(project_scalaUDF26.udfErrorMessage(), e);
/* 6159 */         }
/* 6160 */
/* 6161 */         boolean project_isNull106 = project_result26 == null;
/* 6162 */         InternalRow project_value106 = null;
/* 6163 */         if (!project_isNull106) {
/* 6164 */           project_value106 = project_result26;
/* 6165 */         }
/* 6166 */         project_isNull101 = project_isNull106;
/* 6167 */         project_value101 = project_value106;
/* 6168 */       }
/* 6169 */       if (project_isNull101) {
/* 6170 */         project_values[15] = null;
/* 6171 */       } else {
/* 6172 */         project_values[15] = project_value101;
/* 6173 */       }
/* 6174 */
/* 6175 */       if (sort_isNull16) {
/* 6176 */         project_values[16] = null;
/* 6177 */       } else {
/* 6178 */         project_values[16] = sort_value16;
/* 6179 */       }
/* 6180 */
/* 6181 */       Object project_arg27 = sort_isNull17 ? null : project_converter28.apply(sort_value17);
/* 6182 */
/* 6183 */       Double project_result28 = null;
/* 6184 */       try {
/* 6185 */         project_result28 = (Double)project_catalystConverter28.apply(project_udf28.apply(project_arg27));
/* 6186 */       } catch (Exception e) {
/* 6187 */         throw new org.apache.spark.SparkException(project_scalaUDF28.udfErrorMessage(), e);
/* 6188 */       }
/* 6189 */
/* 6190 */       boolean project_isNull112 = project_result28 == null;
/* 6191 */       double project_value112 = -1.0;
/* 6192 */       if (!project_isNull112) {
/* 6193 */         project_value112 = project_result28;
/* 6194 */       }
/* 6195 */       boolean project_isNull110 = false;
/* 6196 */       InternalRow project_value110 = null;
/* 6197 */       if (!false && project_isNull112) {
/* 6198 */         final InternalRow project_value114 = null;
/* 6199 */         project_isNull110 = true;
/* 6200 */         project_value110 = project_value114;
/* 6201 */       } else {
/* 6202 */         Object project_arg28 = sort_isNull17 ? null : project_converter30.apply(sort_value17);
/* 6203 */
/* 6204 */         Double project_result30 = null;
/* 6205 */         try {
/* 6206 */           project_result30 = (Double)project_catalystConverter30.apply(project_udf30.apply(project_arg28));
/* 6207 */         } catch (Exception e) {
/* 6208 */           throw new org.apache.spark.SparkException(project_scalaUDF30.udfErrorMessage(), e);
/* 6209 */         }
/* 6210 */
/* 6211 */         boolean project_isNull116 = project_result30 == null;
/* 6212 */         double project_value116 = -1.0;
/* 6213 */         if (!project_isNull116) {
/* 6214 */           project_value116 = project_result30;
/* 6215 */         }
/* 6216 */         Object project_arg29 = project_isNull116 ? null : project_converter29.apply(project_value116);
/* 6217 */
/* 6218 */         InternalRow project_result29 = null;
/* 6219 */         try {
/* 6220 */           project_result29 = (InternalRow)project_catalystConverter29.apply(project_udf29.apply(project_arg29));
/* 6221 */         } catch (Exception e) {
/* 6222 */           throw new org.apache.spark.SparkException(project_scalaUDF29.udfErrorMessage(), e);
/* 6223 */         }
/* 6224 */
/* 6225 */         boolean project_isNull115 = project_result29 == null;
/* 6226 */         InternalRow project_value115 = null;
/* 6227 */         if (!project_isNull115) {
/* 6228 */           project_value115 = project_result29;
/* 6229 */         }
/* 6230 */         project_isNull110 = project_isNull115;
/* 6231 */         project_value110 = project_value115;
/* 6232 */       }
/* 6233 */       if (project_isNull110) {
/* 6234 */         project_values[17] = null;
/* 6235 */       } else {
/* 6236 */         project_values[17] = project_value110;
/* 6237 */       }
/* 6238 */
/* 6239 */       Object project_arg30 = sort_isNull18 ? null : project_converter31.apply(sort_value18);
/* 6240 */
/* 6241 */       Double project_result31 = null;
/* 6242 */       try {
/* 6243 */         project_result31 = (Double)project_catalystConverter31.apply(project_udf31.apply(project_arg30));
/* 6244 */       } catch (Exception e) {
/* 6245 */         throw new org.apache.spark.SparkException(project_scalaUDF31.udfErrorMessage(), e);
/* 6246 */       }
/* 6247 */
/* 6248 */       boolean project_isNull120 = project_result31 == null;
/* 6249 */       double project_value120 = -1.0;
/* 6250 */       if (!project_isNull120) {
/* 6251 */         project_value120 = project_result31;
/* 6252 */       }
/* 6253 */       boolean project_isNull118 = false;
/* 6254 */       InternalRow project_value118 = null;
/* 6255 */       if (!false && project_isNull120) {
/* 6256 */         final InternalRow project_value122 = null;
/* 6257 */         project_isNull118 = true;
/* 6258 */         project_value118 = project_value122;
/* 6259 */       } else {
/* 6260 */         Object project_arg31 = sort_isNull18 ? null : project_converter33.apply(sort_value18);
/* 6261 */
/* 6262 */         Double project_result33 = null;
/* 6263 */         try {
/* 6264 */           project_result33 = (Double)project_catalystConverter33.apply(project_udf33.apply(project_arg31));
/* 6265 */         } catch (Exception e) {
/* 6266 */           throw new org.apache.spark.SparkException(project_scalaUDF33.udfErrorMessage(), e);
/* 6267 */         }
/* 6268 */
/* 6269 */         boolean project_isNull124 = project_result33 == null;
/* 6270 */         double project_value124 = -1.0;
/* 6271 */         if (!project_isNull124) {
/* 6272 */           project_value124 = project_result33;
/* 6273 */         }
/* 6274 */         Object project_arg32 = project_isNull124 ? null : project_converter32.apply(project_value124);
/* 6275 */
/* 6276 */         InternalRow project_result32 = null;
/* 6277 */         try {
/* 6278 */           project_result32 = (InternalRow)project_catalystConverter32.apply(project_udf32.apply(project_arg32));
/* 6279 */         } catch (Exception e) {
/* 6280 */           throw new org.apache.spark.SparkException(project_scalaUDF32.udfErrorMessage(), e);
/* 6281 */         }
/* 6282 */
/* 6283 */         boolean project_isNull123 = project_result32 == null;
/* 6284 */         InternalRow project_value123 = null;
/* 6285 */         if (!project_isNull123) {
/* 6286 */           project_value123 = project_result32;
/* 6287 */         }
/* 6288 */         project_isNull118 = project_isNull123;
/* 6289 */         project_value118 = project_value123;
/* 6290 */       }
/* 6291 */       if (project_isNull118) {
/* 6292 */         project_values[18] = null;
/* 6293 */       } else {
/* 6294 */         project_values[18] = project_value118;
/* 6295 */       }
/* 6296 */
/* 6297 */       Object project_arg33 = sort_isNull19 ? null : project_converter34.apply(sort_value19);
/* 6298 */
/* 6299 */       Double project_result34 = null;
/* 6300 */       try {
/* 6301 */         project_result34 = (Double)project_catalystConverter34.apply(project_udf34.apply(project_arg33));
/* 6302 */       } catch (Exception e) {
/* 6303 */         throw new org.apache.spark.SparkException(project_scalaUDF34.udfErrorMessage(), e);
/* 6304 */       }
/* 6305 */
/* 6306 */       boolean project_isNull128 = project_result34 == null;
/* 6307 */       double project_value128 = -1.0;
/* 6308 */       if (!project_isNull128) {
/* 6309 */         project_value128 = project_result34;
/* 6310 */       }
/* 6311 */       boolean project_isNull126 = false;
/* 6312 */       InternalRow project_value126 = null;
/* 6313 */       if (!false && project_isNull128) {
/* 6314 */         final InternalRow project_value130 = null;
/* 6315 */         project_isNull126 = true;
/* 6316 */         project_value126 = project_value130;
/* 6317 */       } else {
/* 6318 */         Object project_arg34 = sort_isNull19 ? null : project_converter36.apply(sort_value19);
/* 6319 */
/* 6320 */         Double project_result36 = null;
/* 6321 */         try {
/* 6322 */           project_result36 = (Double)project_catalystConverter36.apply(project_udf36.apply(project_arg34));
/* 6323 */         } catch (Exception e) {
/* 6324 */           throw new org.apache.spark.SparkException(project_scalaUDF36.udfErrorMessage(), e);
/* 6325 */         }
/* 6326 */
/* 6327 */         boolean project_isNull132 = project_result36 == null;
/* 6328 */         double project_value132 = -1.0;
/* 6329 */         if (!project_isNull132) {
/* 6330 */           project_value132 = project_result36;
/* 6331 */         }
/* 6332 */         Object project_arg35 = project_isNull132 ? null : project_converter35.apply(project_value132);
/* 6333 */
/* 6334 */         InternalRow project_result35 = null;
/* 6335 */         try {
/* 6336 */           project_result35 = (InternalRow)project_catalystConverter35.apply(project_udf35.apply(project_arg35));
/* 6337 */         } catch (Exception e) {
/* 6338 */           throw new org.apache.spark.SparkException(project_scalaUDF35.udfErrorMessage(), e);
/* 6339 */         }
/* 6340 */
/* 6341 */         boolean project_isNull131 = project_result35 == null;
/* 6342 */         InternalRow project_value131 = null;
/* 6343 */         if (!project_isNull131) {
/* 6344 */           project_value131 = project_result35;
/* 6345 */         }
/* 6346 */         project_isNull126 = project_isNull131;
/* 6347 */         project_value126 = project_value131;
/* 6348 */       }
/* 6349 */       if (project_isNull126) {
/* 6350 */         project_values[19] = null;
/* 6351 */       } else {
/* 6352 */         project_values[19] = project_value126;
/* 6353 */       }
/* 6354 */
/* 6355 */       Object project_arg36 = sort_isNull20 ? null : project_converter37.apply(sort_value20);
/* 6356 */
/* 6357 */       Double project_result37 = null;
/* 6358 */       try {
/* 6359 */         project_result37 = (Double)project_catalystConverter37.apply(project_udf37.apply(project_arg36));
/* 6360 */       } catch (Exception e) {
/* 6361 */         throw new org.apache.spark.SparkException(project_scalaUDF37.udfErrorMessage(), e);
/* 6362 */       }
/* 6363 */
/* 6364 */       boolean project_isNull136 = project_result37 == null;
/* 6365 */       double project_value136 = -1.0;
/* 6366 */       if (!project_isNull136) {
/* 6367 */         project_value136 = project_result37;
/* 6368 */       }
/* 6369 */       boolean project_isNull134 = false;
/* 6370 */       InternalRow project_value134 = null;
/* 6371 */       if (!false && project_isNull136) {
/* 6372 */         final InternalRow project_value138 = null;
/* 6373 */         project_isNull134 = true;
/* 6374 */         project_value134 = project_value138;
/* 6375 */       } else {
/* 6376 */         Object project_arg37 = sort_isNull20 ? null : project_converter39.apply(sort_value20);
/* 6377 */
/* 6378 */         Double project_result39 = null;
/* 6379 */         try {
/* 6380 */           project_result39 = (Double)project_catalystConverter39.apply(project_udf39.apply(project_arg37));
/* 6381 */         } catch (Exception e) {
/* 6382 */           throw new org.apache.spark.SparkException(project_scalaUDF39.udfErrorMessage(), e);
/* 6383 */         }
/* 6384 */
/* 6385 */         boolean project_isNull140 = project_result39 == null;
/* 6386 */         double project_value140 = -1.0;
/* 6387 */         if (!project_isNull140) {
/* 6388 */           project_value140 = project_result39;
/* 6389 */         }
/* 6390 */         Object project_arg38 = project_isNull140 ? null : project_converter38.apply(project_value140);
/* 6391 */
/* 6392 */         InternalRow project_result38 = null;
/* 6393 */         try {
/* 6394 */           project_result38 = (InternalRow)project_catalystConverter38.apply(project_udf38.apply(project_arg38));
/* 6395 */         } catch (Exception e) {
/* 6396 */           throw new org.apache.spark.SparkException(project_scalaUDF38.udfErrorMessage(), e);
/* 6397 */         }
/* 6398 */
/* 6399 */         boolean project_isNull139 = project_result38 == null;
/* 6400 */         InternalRow project_value139 = null;
/* 6401 */         if (!project_isNull139) {
/* 6402 */           project_value139 = project_result38;
/* 6403 */         }
/* 6404 */         project_isNull134 = project_isNull139;
/* 6405 */         project_value134 = project_value139;
/* 6406 */       }
/* 6407 */       if (project_isNull134) {
/* 6408 */         project_values[20] = null;
/* 6409 */       } else {
/* 6410 */         project_values[20] = project_value134;
/* 6411 */       }
/* 6412 */
/* 6413 */       Object project_arg39 = sort_isNull21 ? null : project_converter40.apply(sort_value21);
/* 6414 */
/* 6415 */       Double project_result40 = null;
/* 6416 */       try {
/* 6417 */         project_result40 = (Double)project_catalystConverter40.apply(project_udf40.apply(project_arg39));
/* 6418 */       } catch (Exception e) {
/* 6419 */         throw new org.apache.spark.SparkException(project_scalaUDF40.udfErrorMessage(), e);
/* 6420 */       }
/* 6421 */
/* 6422 */       boolean project_isNull144 = project_result40 == null;
/* 6423 */       double project_value144 = -1.0;
/* 6424 */       if (!project_isNull144) {
/* 6425 */         project_value144 = project_result40;
/* 6426 */       }
/* 6427 */       boolean project_isNull142 = false;
/* 6428 */       InternalRow project_value142 = null;
/* 6429 */       if (!false && project_isNull144) {
/* 6430 */         final InternalRow project_value146 = null;
/* 6431 */         project_isNull142 = true;
/* 6432 */         project_value142 = project_value146;
/* 6433 */       } else {
/* 6434 */         Object project_arg40 = sort_isNull21 ? null : project_converter42.apply(sort_value21);
/* 6435 */
/* 6436 */         Double project_result42 = null;
/* 6437 */         try {
/* 6438 */           project_result42 = (Double)project_catalystConverter42.apply(project_udf42.apply(project_arg40));
/* 6439 */         } catch (Exception e) {
/* 6440 */           throw new org.apache.spark.SparkException(project_scalaUDF42.udfErrorMessage(), e);
/* 6441 */         }
/* 6442 */
/* 6443 */         boolean project_isNull148 = project_result42 == null;
/* 6444 */         double project_value148 = -1.0;
/* 6445 */         if (!project_isNull148) {
/* 6446 */           project_value148 = project_result42;
/* 6447 */         }
/* 6448 */         Object project_arg41 = project_isNull148 ? null : project_converter41.apply(project_value148);
/* 6449 */
/* 6450 */         InternalRow project_result41 = null;
/* 6451 */         try {
/* 6452 */           project_result41 = (InternalRow)project_catalystConverter41.apply(project_udf41.apply(project_arg41));
/* 6453 */         } catch (Exception e) {
/* 6454 */           throw new org.apache.spark.SparkException(project_scalaUDF41.udfErrorMessage(), e);
/* 6455 */         }
/* 6456 */
/* 6457 */         boolean project_isNull147 = project_result41 == null;
/* 6458 */         InternalRow project_value147 = null;
/* 6459 */         if (!project_isNull147) {
/* 6460 */           project_value147 = project_result41;
/* 6461 */         }
/* 6462 */         project_isNull142 = project_isNull147;
/* 6463 */         project_value142 = project_value147;
/* 6464 */       }
/* 6465 */       if (project_isNull142) {
/* 6466 */         project_values[21] = null;
/* 6467 */       } else {
/* 6468 */         project_values[21] = project_value142;
/* 6469 */       }
/* 6470 */
/* 6471 */       Object project_arg42 = sort_isNull22 ? null : project_converter43.apply(sort_value22);
/* 6472 */
/* 6473 */       Double project_result43 = null;
/* 6474 */       try {
/* 6475 */         project_result43 = (Double)project_catalystConverter43.apply(project_udf43.apply(project_arg42));
/* 6476 */       } catch (Exception e) {
/* 6477 */         throw new org.apache.spark.SparkException(project_scalaUDF43.udfErrorMessage(), e);
/* 6478 */       }
/* 6479 */
/* 6480 */       boolean project_isNull152 = project_result43 == null;
/* 6481 */       double project_value152 = -1.0;
/* 6482 */       if (!project_isNull152) {
/* 6483 */         project_value152 = project_result43;
/* 6484 */       }
/* 6485 */       boolean project_isNull150 = false;
/* 6486 */       InternalRow project_value150 = null;
/* 6487 */       if (!false && project_isNull152) {
/* 6488 */         final InternalRow project_value154 = null;
/* 6489 */         project_isNull150 = true;
/* 6490 */         project_value150 = project_value154;
/* 6491 */       } else {
/* 6492 */         Object project_arg43 = sort_isNull22 ? null : project_converter45.apply(sort_value22);
/* 6493 */
/* 6494 */         Double project_result45 = null;
/* 6495 */         try {
/* 6496 */           project_result45 = (Double)project_catalystConverter45.apply(project_udf45.apply(project_arg43));
/* 6497 */         } catch (Exception e) {
/* 6498 */           throw new org.apache.spark.SparkException(project_scalaUDF45.udfErrorMessage(), e);
/* 6499 */         }
/* 6500 */
/* 6501 */         boolean project_isNull156 = project_result45 == null;
/* 6502 */         double project_value156 = -1.0;
/* 6503 */         if (!project_isNull156) {
/* 6504 */           project_value156 = project_result45;
/* 6505 */         }
/* 6506 */         Object project_arg44 = project_isNull156 ? null : project_converter44.apply(project_value156);
/* 6507 */
/* 6508 */         InternalRow project_result44 = null;
/* 6509 */         try {
/* 6510 */           project_result44 = (InternalRow)project_catalystConverter44.apply(project_udf44.apply(project_arg44));
/* 6511 */         } catch (Exception e) {
/* 6512 */           throw new org.apache.spark.SparkException(project_scalaUDF44.udfErrorMessage(), e);
/* 6513 */         }
/* 6514 */
/* 6515 */         boolean project_isNull155 = project_result44 == null;
/* 6516 */         InternalRow project_value155 = null;
/* 6517 */         if (!project_isNull155) {
/* 6518 */           project_value155 = project_result44;
/* 6519 */         }
/* 6520 */         project_isNull150 = project_isNull155;
/* 6521 */         project_value150 = project_value155;
/* 6522 */       }
/* 6523 */       if (project_isNull150) {
/* 6524 */         project_values[22] = null;
/* 6525 */       } else {
/* 6526 */         project_values[22] = project_value150;
/* 6527 */       }
/* 6528 */
/* 6529 */       Object project_arg45 = sort_isNull23 ? null : project_converter46.apply(sort_value23);
/* 6530 */
/* 6531 */       Double project_result46 = null;
/* 6532 */       try {
/* 6533 */         project_result46 = (Double)project_catalystConverter46.apply(project_udf46.apply(project_arg45));
/* 6534 */       } catch (Exception e) {
/* 6535 */         throw new org.apache.spark.SparkException(project_scalaUDF46.udfErrorMessage(), e);
/* 6536 */       }
/* 6537 */
/* 6538 */       boolean project_isNull160 = project_result46 == null;
/* 6539 */       double project_value160 = -1.0;
/* 6540 */       if (!project_isNull160) {
/* 6541 */         project_value160 = project_result46;
/* 6542 */       }
/* 6543 */       boolean project_isNull158 = false;
/* 6544 */       InternalRow project_value158 = null;
/* 6545 */       if (!false && project_isNull160) {
/* 6546 */         final InternalRow project_value162 = null;
/* 6547 */         project_isNull158 = true;
/* 6548 */         project_value158 = project_value162;
/* 6549 */       } else {
/* 6550 */         Object project_arg46 = sort_isNull23 ? null : project_converter48.apply(sort_value23);
/* 6551 */
/* 6552 */         Double project_result48 = null;
/* 6553 */         try {
/* 6554 */           project_result48 = (Double)project_catalystConverter48.apply(project_udf48.apply(project_arg46));
/* 6555 */         } catch (Exception e) {
/* 6556 */           throw new org.apache.spark.SparkException(project_scalaUDF48.udfErrorMessage(), e);
/* 6557 */         }
/* 6558 */
/* 6559 */         boolean project_isNull164 = project_result48 == null;
/* 6560 */         double project_value164 = -1.0;
/* 6561 */         if (!project_isNull164) {
/* 6562 */           project_value164 = project_result48;
/* 6563 */         }
/* 6564 */         Object project_arg47 = project_isNull164 ? null : project_converter47.apply(project_value164);
/* 6565 */
/* 6566 */         InternalRow project_result47 = null;
/* 6567 */         try {
/* 6568 */           project_result47 = (InternalRow)project_catalystConverter47.apply(project_udf47.apply(project_arg47));
/* 6569 */         } catch (Exception e) {
/* 6570 */           throw new org.apache.spark.SparkException(project_scalaUDF47.udfErrorMessage(), e);
/* 6571 */         }
/* 6572 */
/* 6573 */         boolean project_isNull163 = project_result47 == null;
/* 6574 */         InternalRow project_value163 = null;
/* 6575 */         if (!project_isNull163) {
/* 6576 */           project_value163 = project_result47;
/* 6577 */         }
/* 6578 */         project_isNull158 = project_isNull163;
/* 6579 */         project_value158 = project_value163;
/* 6580 */       }
/* 6581 */       if (project_isNull158) {
/* 6582 */         project_values[23] = null;
/* 6583 */       } else {
/* 6584 */         project_values[23] = project_value158;
/* 6585 */       }
/* 6586 */
/* 6587 */       Object project_arg48 = sort_isNull24 ? null : project_converter49.apply(sort_value24);
/* 6588 */
/* 6589 */       Double project_result49 = null;
/* 6590 */       try {
/* 6591 */         project_result49 = (Double)project_catalystConverter49.apply(project_udf49.apply(project_arg48));
/* 6592 */       } catch (Exception e) {
/* 6593 */         throw new org.apache.spark.SparkException(project_scalaUDF49.udfErrorMessage(), e);
/* 6594 */       }
/* 6595 */
/* 6596 */       boolean project_isNull168 = project_result49 == null;
/* 6597 */       double project_value168 = -1.0;
/* 6598 */       if (!project_isNull168) {
/* 6599 */         project_value168 = project_result49;
/* 6600 */       }
/* 6601 */       boolean project_isNull166 = false;
/* 6602 */       InternalRow project_value166 = null;
/* 6603 */       if (!false && project_isNull168) {
/* 6604 */         final InternalRow project_value170 = null;
/* 6605 */         project_isNull166 = true;
/* 6606 */         project_value166 = project_value170;
/* 6607 */       } else {
/* 6608 */         Object project_arg49 = sort_isNull24 ? null : project_converter51.apply(sort_value24);
/* 6609 */
/* 6610 */         Double project_result51 = null;
/* 6611 */         try {
/* 6612 */           project_result51 = (Double)project_catalystConverter51.apply(project_udf51.apply(project_arg49));
/* 6613 */         } catch (Exception e) {
/* 6614 */           throw new org.apache.spark.SparkException(project_scalaUDF51.udfErrorMessage(), e);
/* 6615 */         }
/* 6616 */
/* 6617 */         boolean project_isNull172 = project_result51 == null;
/* 6618 */         double project_value172 = -1.0;
/* 6619 */         if (!project_isNull172) {
/* 6620 */           project_value172 = project_result51;
/* 6621 */         }
/* 6622 */         Object project_arg50 = project_isNull172 ? null : project_converter50.apply(project_value172);
/* 6623 */
/* 6624 */         InternalRow project_result50 = null;
/* 6625 */         try {
/* 6626 */           project_result50 = (InternalRow)project_catalystConverter50.apply(project_udf50.apply(project_arg50));
/* 6627 */         } catch (Exception e) {
/* 6628 */           throw new org.apache.spark.SparkException(project_scalaUDF50.udfErrorMessage(), e);
/* 6629 */         }
/* 6630 */
/* 6631 */         boolean project_isNull171 = project_result50 == null;
/* 6632 */         InternalRow project_value171 = null;
/* 6633 */         if (!project_isNull171) {
/* 6634 */           project_value171 = project_result50;
/* 6635 */         }
/* 6636 */         project_isNull166 = project_isNull171;
/* 6637 */         project_value166 = project_value171;
/* 6638 */       }
/* 6639 */       if (project_isNull166) {
/* 6640 */         project_values[24] = null;
/* 6641 */       } else {
/* 6642 */         project_values[24] = project_value166;
/* 6643 */       }
/* 6644 */
/* 6645 */       Object project_arg51 = sort_isNull25 ? null : project_converter52.apply(sort_value25);
/* 6646 */
/* 6647 */       Double project_result52 = null;
/* 6648 */       try {
/* 6649 */         project_result52 = (Double)project_catalystConverter52.apply(project_udf52.apply(project_arg51));
/* 6650 */       } catch (Exception e) {
/* 6651 */         throw new org.apache.spark.SparkException(project_scalaUDF52.udfErrorMessage(), e);
/* 6652 */       }
/* 6653 */
/* 6654 */       boolean project_isNull176 = project_result52 == null;
/* 6655 */       double project_value176 = -1.0;
/* 6656 */       if (!project_isNull176) {
/* 6657 */         project_value176 = project_result52;
/* 6658 */       }
/* 6659 */       boolean project_isNull174 = false;
/* 6660 */       InternalRow project_value174 = null;
/* 6661 */       if (!false && project_isNull176) {
/* 6662 */         final InternalRow project_value178 = null;
/* 6663 */         project_isNull174 = true;
/* 6664 */         project_value174 = project_value178;
/* 6665 */       } else {
/* 6666 */         Object project_arg52 = sort_isNull25 ? null : project_converter54.apply(sort_value25);
/* 6667 */
/* 6668 */         Double project_result54 = null;
/* 6669 */         try {
/* 6670 */           project_result54 = (Double)project_catalystConverter54.apply(project_udf54.apply(project_arg52));
/* 6671 */         } catch (Exception e) {
/* 6672 */           throw new org.apache.spark.SparkException(project_scalaUDF54.udfErrorMessage(), e);
/* 6673 */         }
/* 6674 */
/* 6675 */         boolean project_isNull180 = project_result54 == null;
/* 6676 */         double project_value180 = -1.0;
/* 6677 */         if (!project_isNull180) {
/* 6678 */           project_value180 = project_result54;
/* 6679 */         }
/* 6680 */         Object project_arg53 = project_isNull180 ? null : project_converter53.apply(project_value180);
/* 6681 */
/* 6682 */         InternalRow project_result53 = null;
/* 6683 */         try {
/* 6684 */           project_result53 = (InternalRow)project_catalystConverter53.apply(project_udf53.apply(project_arg53));
/* 6685 */         } catch (Exception e) {
/* 6686 */           throw new org.apache.spark.SparkException(project_scalaUDF53.udfErrorMessage(), e);
/* 6687 */         }
/* 6688 */
/* 6689 */         boolean project_isNull179 = project_result53 == null;
/* 6690 */         InternalRow project_value179 = null;
/* 6691 */         if (!project_isNull179) {
/* 6692 */           project_value179 = project_result53;
/* 6693 */         }
/* 6694 */         project_isNull174 = project_isNull179;
/* 6695 */         project_value174 = project_value179;
/* 6696 */       }
/* 6697 */       if (project_isNull174) {
/* 6698 */         project_values[25] = null;
/* 6699 */       } else {
/* 6700 */         project_values[25] = project_value174;
/* 6701 */       }
/* 6702 */
/* 6703 */       if (sort_isNull27) {
/* 6704 */         project_values[26] = null;
/* 6705 */       } else {
/* 6706 */         project_values[26] = sort_value27;
/* 6707 */       }
/* 6708 */       final InternalRow project_value29 = new org.apache.spark.sql.catalyst.expressions.GenericInternalRow(project_values);
/* 6709 */       this.project_values = null;
/* 6710 */       Object project_arg54 = false ? null : project_converter.apply(project_value29);
/* 6711 */
/* 6712 */       InternalRow project_result = null;
/* 6713 */       try {
/* 6714 */         project_result = (InternalRow)project_catalystConverter.apply(project_udf.apply(project_arg54));
/* 6715 */       } catch (Exception e) {
/* 6716 */         throw new org.apache.spark.SparkException(project_scalaUDF.udfErrorMessage(), e);
/* 6717 */       }
/* 6718 */
/* 6719 */       boolean project_isNull28 = project_result == null;
/* 6720 */       InternalRow project_value28 = null;
/* 6721 */       if (!project_isNull28) {
/* 6722 */         project_value28 = project_result;
/* 6723 */       }
/* 6724 */       Object project_arg55 = sort_isNull26 ? null : project_converter55.apply(sort_value26);
/* 6725 */
/* 6726 */       Double project_result55 = null;
/* 6727 */       try {
/* 6728 */         project_result55 = (Double)project_catalystConverter55.apply(project_udf55.apply(project_arg55));
/* 6729 */       } catch (Exception e) {
/* 6730 */         throw new org.apache.spark.SparkException(project_scalaUDF55.udfErrorMessage(), e);
/* 6731 */       }
/* 6732 */
/* 6733 */       boolean project_isNull183 = project_result55 == null;
/* 6734 */       double project_value183 = -1.0;
/* 6735 */       if (!project_isNull183) {
/* 6736 */         project_value183 = project_result55;
/* 6737 */       }
/* 6738 */       project_values1 = new Object[27];
/* 6739 */       Object project_arg56 = sort_isNull ? null : project_converter58.apply(sort_value);
/* 6740 */
/* 6741 */       Double project_result58 = null;
/* 6742 */       try {
/* 6743 */         project_result58 = (Double)project_catalystConverter58.apply(project_udf58.apply(project_arg56));
/* 6744 */       } catch (Exception e) {
/* 6745 */         throw new org.apache.spark.SparkException(project_scalaUDF58.udfErrorMessage(), e);
/* 6746 */       }
/* 6747 */
/* 6748 */       boolean project_isNull190 = project_result58 == null;
/* 6749 */       double project_value190 = -1.0;
/* 6750 */       if (!project_isNull190) {
/* 6751 */         project_value190 = project_result58;
/* 6752 */       }
/* 6753 */       boolean project_isNull188 = false;
/* 6754 */       InternalRow project_value188 = null;
/* 6755 */       if (!false && project_isNull190) {
/* 6756 */         final InternalRow project_value192 = null;
/* 6757 */         project_isNull188 = true;
/* 6758 */         project_value188 = project_value192;
/* 6759 */       } else {
/* 6760 */         Object project_arg57 = sort_isNull ? null : project_converter60.apply(sort_value);
/* 6761 */
/* 6762 */         Double project_result60 = null;
/* 6763 */         try {
/* 6764 */           project_result60 = (Double)project_catalystConverter60.apply(project_udf60.apply(project_arg57));
/* 6765 */         } catch (Exception e) {
/* 6766 */           throw new org.apache.spark.SparkException(project_scalaUDF60.udfErrorMessage(), e);
/* 6767 */         }
/* 6768 */
/* 6769 */         boolean project_isNull194 = project_result60 == null;
/* 6770 */         double project_value194 = -1.0;
/* 6771 */         if (!project_isNull194) {
/* 6772 */           project_value194 = project_result60;
/* 6773 */         }
/* 6774 */         Object project_arg58 = project_isNull194 ? null : project_converter59.apply(project_value194);
/* 6775 */
/* 6776 */         InternalRow project_result59 = null;
/* 6777 */         try {
/* 6778 */           project_result59 = (InternalRow)project_catalystConverter59.apply(project_udf59.apply(project_arg58));
/* 6779 */         } catch (Exception e) {
/* 6780 */           throw new org.apache.spark.SparkException(project_scalaUDF59.udfErrorMessage(), e);
/* 6781 */         }
/* 6782 */
/* 6783 */         boolean project_isNull193 = project_result59 == null;
/* 6784 */         InternalRow project_value193 = null;
/* 6785 */         if (!project_isNull193) {
/* 6786 */           project_value193 = project_result59;
/* 6787 */         }
/* 6788 */         project_isNull188 = project_isNull193;
/* 6789 */         project_value188 = project_value193;
/* 6790 */       }
/* 6791 */       if (project_isNull188) {
/* 6792 */         project_values1[0] = null;
/* 6793 */       } else {
/* 6794 */         project_values1[0] = project_value188;
/* 6795 */       }
/* 6796 */
/* 6797 */       Object project_arg59 = sort_isNull1 ? null : project_converter61.apply(sort_value1);
/* 6798 */
/* 6799 */       Double project_result61 = null;
/* 6800 */       try {
/* 6801 */         project_result61 = (Double)project_catalystConverter61.apply(project_udf61.apply(project_arg59));
/* 6802 */       } catch (Exception e) {
/* 6803 */         throw new org.apache.spark.SparkException(project_scalaUDF61.udfErrorMessage(), e);
/* 6804 */       }
/* 6805 */
/* 6806 */       boolean project_isNull198 = project_result61 == null;
/* 6807 */       double project_value198 = -1.0;
/* 6808 */       if (!project_isNull198) {
/* 6809 */         project_value198 = project_result61;
/* 6810 */       }
/* 6811 */       boolean project_isNull196 = false;
/* 6812 */       InternalRow project_value196 = null;
/* 6813 */       if (!false && project_isNull198) {
/* 6814 */         final InternalRow project_value200 = null;
/* 6815 */         project_isNull196 = true;
/* 6816 */         project_value196 = project_value200;
/* 6817 */       } else {
/* 6818 */         Object project_arg60 = sort_isNull1 ? null : project_converter63.apply(sort_value1);
/* 6819 */
/* 6820 */         Double project_result63 = null;
/* 6821 */         try {
/* 6822 */           project_result63 = (Double)project_catalystConverter63.apply(project_udf63.apply(project_arg60));
/* 6823 */         } catch (Exception e) {
/* 6824 */           throw new org.apache.spark.SparkException(project_scalaUDF63.udfErrorMessage(), e);
/* 6825 */         }
/* 6826 */
/* 6827 */         boolean project_isNull202 = project_result63 == null;
/* 6828 */         double project_value202 = -1.0;
/* 6829 */         if (!project_isNull202) {
/* 6830 */           project_value202 = project_result63;
/* 6831 */         }
/* 6832 */         Object project_arg61 = project_isNull202 ? null : project_converter62.apply(project_value202);
/* 6833 */
/* 6834 */         InternalRow project_result62 = null;
/* 6835 */         try {
/* 6836 */           project_result62 = (InternalRow)project_catalystConverter62.apply(project_udf62.apply(project_arg61));
/* 6837 */         } catch (Exception e) {
/* 6838 */           throw new org.apache.spark.SparkException(project_scalaUDF62.udfErrorMessage(), e);
/* 6839 */         }
/* 6840 */
/* 6841 */         boolean project_isNull201 = project_result62 == null;
/* 6842 */         InternalRow project_value201 = null;
/* 6843 */         if (!project_isNull201) {
/* 6844 */           project_value201 = project_result62;
/* 6845 */         }
/* 6846 */         project_isNull196 = project_isNull201;
/* 6847 */         project_value196 = project_value201;
/* 6848 */       }
/* 6849 */       if (project_isNull196) {
/* 6850 */         project_values1[1] = null;
/* 6851 */       } else {
/* 6852 */         project_values1[1] = project_value196;
/* 6853 */       }
/* 6854 */
/* 6855 */       Object project_arg62 = sort_isNull2 ? null : project_converter64.apply(sort_value2);
/* 6856 */
/* 6857 */       Double project_result64 = null;
/* 6858 */       try {
/* 6859 */         project_result64 = (Double)project_catalystConverter64.apply(project_udf64.apply(project_arg62));
/* 6860 */       } catch (Exception e) {
/* 6861 */         throw new org.apache.spark.SparkException(project_scalaUDF64.udfErrorMessage(), e);
/* 6862 */       }
/* 6863 */
/* 6864 */       boolean project_isNull206 = project_result64 == null;
/* 6865 */       double project_value206 = -1.0;
/* 6866 */       if (!project_isNull206) {
/* 6867 */         project_value206 = project_result64;
/* 6868 */       }
/* 6869 */       boolean project_isNull204 = false;
/* 6870 */       InternalRow project_value204 = null;
/* 6871 */       if (!false && project_isNull206) {
/* 6872 */         final InternalRow project_value208 = null;
/* 6873 */         project_isNull204 = true;
/* 6874 */         project_value204 = project_value208;
/* 6875 */       } else {
/* 6876 */         Object project_arg63 = sort_isNull2 ? null : project_converter66.apply(sort_value2);
/* 6877 */
/* 6878 */         Double project_result66 = null;
/* 6879 */         try {
/* 6880 */           project_result66 = (Double)project_catalystConverter66.apply(project_udf66.apply(project_arg63));
/* 6881 */         } catch (Exception e) {
/* 6882 */           throw new org.apache.spark.SparkException(project_scalaUDF66.udfErrorMessage(), e);
/* 6883 */         }
/* 6884 */
/* 6885 */         boolean project_isNull210 = project_result66 == null;
/* 6886 */         double project_value210 = -1.0;
/* 6887 */         if (!project_isNull210) {
/* 6888 */           project_value210 = project_result66;
/* 6889 */         }
/* 6890 */         Object project_arg64 = project_isNull210 ? null : project_converter65.apply(project_value210);
/* 6891 */
/* 6892 */         InternalRow project_result65 = null;
/* 6893 */         try {
/* 6894 */           project_result65 = (InternalRow)project_catalystConverter65.apply(project_udf65.apply(project_arg64));
/* 6895 */         } catch (Exception e) {
/* 6896 */           throw new org.apache.spark.SparkException(project_scalaUDF65.udfErrorMessage(), e);
/* 6897 */         }
/* 6898 */
/* 6899 */         boolean project_isNull209 = project_result65 == null;
/* 6900 */         InternalRow project_value209 = null;
/* 6901 */         if (!project_isNull209) {
/* 6902 */           project_value209 = project_result65;
/* 6903 */         }
/* 6904 */         project_isNull204 = project_isNull209;
/* 6905 */         project_value204 = project_value209;
/* 6906 */       }
/* 6907 */       if (project_isNull204) {
/* 6908 */         project_values1[2] = null;
/* 6909 */       } else {
/* 6910 */         project_values1[2] = project_value204;
/* 6911 */       }
/* 6912 */
/* 6913 */       Object project_arg65 = sort_isNull3 ? null : project_converter67.apply(sort_value3);
/* 6914 */
/* 6915 */       Double project_result67 = null;
/* 6916 */       try {
/* 6917 */         project_result67 = (Double)project_catalystConverter67.apply(project_udf67.apply(project_arg65));
/* 6918 */       } catch (Exception e) {
/* 6919 */         throw new org.apache.spark.SparkException(project_scalaUDF67.udfErrorMessage(), e);
/* 6920 */       }
/* 6921 */
/* 6922 */       boolean project_isNull214 = project_result67 == null;
/* 6923 */       double project_value214 = -1.0;
/* 6924 */       if (!project_isNull214) {
/* 6925 */         project_value214 = project_result67;
/* 6926 */       }
/* 6927 */       boolean project_isNull212 = false;
/* 6928 */       InternalRow project_value212 = null;
/* 6929 */       if (!false && project_isNull214) {
/* 6930 */         final InternalRow project_value216 = null;
/* 6931 */         project_isNull212 = true;
/* 6932 */         project_value212 = project_value216;
/* 6933 */       } else {
/* 6934 */         Object project_arg66 = sort_isNull3 ? null : project_converter69.apply(sort_value3);
/* 6935 */
/* 6936 */         Double project_result69 = null;
/* 6937 */         try {
/* 6938 */           project_result69 = (Double)project_catalystConverter69.apply(project_udf69.apply(project_arg66));
/* 6939 */         } catch (Exception e) {
/* 6940 */           throw new org.apache.spark.SparkException(project_scalaUDF69.udfErrorMessage(), e);
/* 6941 */         }
/* 6942 */
/* 6943 */         boolean project_isNull218 = project_result69 == null;
/* 6944 */         double project_value218 = -1.0;
/* 6945 */         if (!project_isNull218) {
/* 6946 */           project_value218 = project_result69;
/* 6947 */         }
/* 6948 */         Object project_arg67 = project_isNull218 ? null : project_converter68.apply(project_value218);
/* 6949 */
/* 6950 */         InternalRow project_result68 = null;
/* 6951 */         try {
/* 6952 */           project_result68 = (InternalRow)project_catalystConverter68.apply(project_udf68.apply(project_arg67));
/* 6953 */         } catch (Exception e) {
/* 6954 */           throw new org.apache.spark.SparkException(project_scalaUDF68.udfErrorMessage(), e);
/* 6955 */         }
/* 6956 */
/* 6957 */         boolean project_isNull217 = project_result68 == null;
/* 6958 */         InternalRow project_value217 = null;
/* 6959 */         if (!project_isNull217) {
/* 6960 */           project_value217 = project_result68;
/* 6961 */         }
/* 6962 */         project_isNull212 = project_isNull217;
/* 6963 */         project_value212 = project_value217;
/* 6964 */       }
/* 6965 */       if (project_isNull212) {
/* 6966 */         project_values1[3] = null;
/* 6967 */       } else {
/* 6968 */         project_values1[3] = project_value212;
/* 6969 */       }
/* 6970 */
/* 6971 */       Object project_arg68 = sort_isNull4 ? null : project_converter70.apply(sort_value4);
/* 6972 */
/* 6973 */       Double project_result70 = null;
/* 6974 */       try {
/* 6975 */         project_result70 = (Double)project_catalystConverter70.apply(project_udf70.apply(project_arg68));
/* 6976 */       } catch (Exception e) {
/* 6977 */         throw new org.apache.spark.SparkException(project_scalaUDF70.udfErrorMessage(), e);
/* 6978 */       }
/* 6979 */
/* 6980 */       boolean project_isNull222 = project_result70 == null;
/* 6981 */       double project_value222 = -1.0;
/* 6982 */       if (!project_isNull222) {
/* 6983 */         project_value222 = project_result70;
/* 6984 */       }
/* 6985 */       boolean project_isNull220 = false;
/* 6986 */       InternalRow project_value220 = null;
/* 6987 */       if (!false && project_isNull222) {
/* 6988 */         final InternalRow project_value224 = null;
/* 6989 */         project_isNull220 = true;
/* 6990 */         project_value220 = project_value224;
/* 6991 */       } else {
/* 6992 */         Object project_arg69 = sort_isNull4 ? null : project_converter72.apply(sort_value4);
/* 6993 */
/* 6994 */         Double project_result72 = null;
/* 6995 */         try {
/* 6996 */           project_result72 = (Double)project_catalystConverter72.apply(project_udf72.apply(project_arg69));
/* 6997 */         } catch (Exception e) {
/* 6998 */           throw new org.apache.spark.SparkException(project_scalaUDF72.udfErrorMessage(), e);
/* 6999 */         }
/* 7000 */
/* 7001 */         boolean project_isNull226 = project_result72 == null;
/* 7002 */         double project_value226 = -1.0;
/* 7003 */         if (!project_isNull226) {
/* 7004 */           project_value226 = project_result72;
/* 7005 */         }
/* 7006 */         Object project_arg70 = project_isNull226 ? null : project_converter71.apply(project_value226);
/* 7007 */
/* 7008 */         InternalRow project_result71 = null;
/* 7009 */         try {
/* 7010 */           project_result71 = (InternalRow)project_catalystConverter71.apply(project_udf71.apply(project_arg70));
/* 7011 */         } catch (Exception e) {
/* 7012 */           throw new org.apache.spark.SparkException(project_scalaUDF71.udfErrorMessage(), e);
/* 7013 */         }
/* 7014 */
/* 7015 */         boolean project_isNull225 = project_result71 == null;
/* 7016 */         InternalRow project_value225 = null;
/* 7017 */         if (!project_isNull225) {
/* 7018 */           project_value225 = project_result71;
/* 7019 */         }
/* 7020 */         project_isNull220 = project_isNull225;
/* 7021 */         project_value220 = project_value225;
/* 7022 */       }
/* 7023 */       if (project_isNull220) {
/* 7024 */         project_values1[4] = null;
/* 7025 */       } else {
/* 7026 */         project_values1[4] = project_value220;
/* 7027 */       }
/* 7028 */
/* 7029 */       Object project_arg71 = sort_isNull5 ? null : project_converter73.apply(sort_value5);
/* 7030 */
/* 7031 */       Double project_result73 = null;
/* 7032 */       try {
/* 7033 */         project_result73 = (Double)project_catalystConverter73.apply(project_udf73.apply(project_arg71));
/* 7034 */       } catch (Exception e) {
/* 7035 */         throw new org.apache.spark.SparkException(project_scalaUDF73.udfErrorMessage(), e);
/* 7036 */       }
/* 7037 */
/* 7038 */       boolean project_isNull230 = project_result73 == null;
/* 7039 */       double project_value230 = -1.0;
/* 7040 */       if (!project_isNull230) {
/* 7041 */         project_value230 = project_result73;
/* 7042 */       }
/* 7043 */       boolean project_isNull228 = false;
/* 7044 */       InternalRow project_value228 = null;
/* 7045 */       if (!false && project_isNull230) {
/* 7046 */         final InternalRow project_value232 = null;
/* 7047 */         project_isNull228 = true;
/* 7048 */         project_value228 = project_value232;
/* 7049 */       } else {
/* 7050 */         Object project_arg72 = sort_isNull5 ? null : project_converter75.apply(sort_value5);
/* 7051 */
/* 7052 */         Double project_result75 = null;
/* 7053 */         try {
/* 7054 */           project_result75 = (Double)project_catalystConverter75.apply(project_udf75.apply(project_arg72));
/* 7055 */         } catch (Exception e) {
/* 7056 */           throw new org.apache.spark.SparkException(project_scalaUDF75.udfErrorMessage(), e);
/* 7057 */         }
/* 7058 */
/* 7059 */         boolean project_isNull234 = project_result75 == null;
/* 7060 */         double project_value234 = -1.0;
/* 7061 */         if (!project_isNull234) {
/* 7062 */           project_value234 = project_result75;
/* 7063 */         }
/* 7064 */         Object project_arg73 = project_isNull234 ? null : project_converter74.apply(project_value234);
/* 7065 */
/* 7066 */         InternalRow project_result74 = null;
/* 7067 */         try {
/* 7068 */           project_result74 = (InternalRow)project_catalystConverter74.apply(project_udf74.apply(project_arg73));
/* 7069 */         } catch (Exception e) {
/* 7070 */           throw new org.apache.spark.SparkException(project_scalaUDF74.udfErrorMessage(), e);
/* 7071 */         }
/* 7072 */
/* 7073 */         boolean project_isNull233 = project_result74 == null;
/* 7074 */         InternalRow project_value233 = null;
/* 7075 */         if (!project_isNull233) {
/* 7076 */           project_value233 = project_result74;
/* 7077 */         }
/* 7078 */         project_isNull228 = project_isNull233;
/* 7079 */         project_value228 = project_value233;
/* 7080 */       }
/* 7081 */       if (project_isNull228) {
/* 7082 */         project_values1[5] = null;
/* 7083 */       } else {
/* 7084 */         project_values1[5] = project_value228;
/* 7085 */       }
/* 7086 */
/* 7087 */       if (sort_isNull6) {
/* 7088 */         project_values1[6] = null;
/* 7089 */       } else {
/* 7090 */         project_values1[6] = sort_value6;
/* 7091 */       }
/* 7092 */
/* 7093 */       if (sort_isNull7) {
/* 7094 */         project_values1[7] = null;
/* 7095 */       } else {
/* 7096 */         project_values1[7] = sort_value7;
/* 7097 */       }
/* 7098 */
/* 7099 */       if (sort_isNull8) {
/* 7100 */         project_values1[8] = null;
/* 7101 */       } else {
/* 7102 */         project_values1[8] = sort_value8;
/* 7103 */       }
/* 7104 */
/* 7105 */       if (sort_isNull9) {
/* 7106 */         project_values1[9] = null;
/* 7107 */       } else {
/* 7108 */         project_values1[9] = sort_value9;
/* 7109 */       }
/* 7110 */
/* 7111 */       if (sort_isNull10) {
/* 7112 */         project_values1[10] = null;
/* 7113 */       } else {
/* 7114 */         project_values1[10] = sort_value10;
/* 7115 */       }
/* 7116 */
/* 7117 */       if (sort_isNull11) {
/* 7118 */         project_values1[11] = null;
/* 7119 */       } else {
/* 7120 */         project_values1[11] = sort_value11;
/* 7121 */       }
/* 7122 */
/* 7123 */       if (sort_isNull12) {
/* 7124 */         project_values1[12] = null;
/* 7125 */       } else {
/* 7126 */         project_values1[12] = sort_value12;
/* 7127 */       }
/* 7128 */
/* 7129 */       Object project_arg74 = sort_isNull13 ? null : project_converter76.apply(sort_value13);
/* 7130 */
/* 7131 */       Double project_result76 = null;
/* 7132 */       try {
/* 7133 */         project_result76 = (Double)project_catalystConverter76.apply(project_udf76.apply(project_arg74));
/* 7134 */       } catch (Exception e) {
/* 7135 */         throw new org.apache.spark.SparkException(project_scalaUDF76.udfErrorMessage(), e);
/* 7136 */       }
/* 7137 */
/* 7138 */       boolean project_isNull245 = project_result76 == null;
/* 7139 */       double project_value245 = -1.0;
/* 7140 */       if (!project_isNull245) {
/* 7141 */         project_value245 = project_result76;
/* 7142 */       }
/* 7143 */       boolean project_isNull243 = false;
/* 7144 */       InternalRow project_value243 = null;
/* 7145 */       if (!false && project_isNull245) {
/* 7146 */         final InternalRow project_value247 = null;
/* 7147 */         project_isNull243 = true;
/* 7148 */         project_value243 = project_value247;
/* 7149 */       } else {
/* 7150 */         Object project_arg75 = sort_isNull13 ? null : project_converter78.apply(sort_value13);
/* 7151 */
/* 7152 */         Double project_result78 = null;
/* 7153 */         try {
/* 7154 */           project_result78 = (Double)project_catalystConverter78.apply(project_udf78.apply(project_arg75));
/* 7155 */         } catch (Exception e) {
/* 7156 */           throw new org.apache.spark.SparkException(project_scalaUDF78.udfErrorMessage(), e);
/* 7157 */         }
/* 7158 */
/* 7159 */         boolean project_isNull249 = project_result78 == null;
/* 7160 */         double project_value249 = -1.0;
/* 7161 */         if (!project_isNull249) {
/* 7162 */           project_value249 = project_result78;
/* 7163 */         }
/* 7164 */         Object project_arg76 = project_isNull249 ? null : project_converter77.apply(project_value249);
/* 7165 */
/* 7166 */         InternalRow project_result77 = null;
/* 7167 */         try {
/* 7168 */           project_result77 = (InternalRow)project_catalystConverter77.apply(project_udf77.apply(project_arg76));
/* 7169 */         } catch (Exception e) {
/* 7170 */           throw new org.apache.spark.SparkException(project_scalaUDF77.udfErrorMessage(), e);
/* 7171 */         }
/* 7172 */
/* 7173 */         boolean project_isNull248 = project_result77 == null;
/* 7174 */         InternalRow project_value248 = null;
/* 7175 */         if (!project_isNull248) {
/* 7176 */           project_value248 = project_result77;
/* 7177 */         }
/* 7178 */         project_isNull243 = project_isNull248;
/* 7179 */         project_value243 = project_value248;
/* 7180 */       }
/* 7181 */       if (project_isNull243) {
/* 7182 */         project_values1[13] = null;
/* 7183 */       } else {
/* 7184 */         project_values1[13] = project_value243;
/* 7185 */       }
/* 7186 */
/* 7187 */       Object project_arg77 = sort_isNull14 ? null : project_converter79.apply(sort_value14);
/* 7188 */
/* 7189 */       Double project_result79 = null;
/* 7190 */       try {
/* 7191 */         project_result79 = (Double)project_catalystConverter79.apply(project_udf79.apply(project_arg77));
/* 7192 */       } catch (Exception e) {
/* 7193 */         throw new org.apache.spark.SparkException(project_scalaUDF79.udfErrorMessage(), e);
/* 7194 */       }
/* 7195 */
/* 7196 */       boolean project_isNull253 = project_result79 == null;
/* 7197 */       double project_value253 = -1.0;
/* 7198 */       if (!project_isNull253) {
/* 7199 */         project_value253 = project_result79;
/* 7200 */       }
/* 7201 */       boolean project_isNull251 = false;
/* 7202 */       InternalRow project_value251 = null;
/* 7203 */       if (!false && project_isNull253) {
/* 7204 */         final InternalRow project_value255 = null;
/* 7205 */         project_isNull251 = true;
/* 7206 */         project_value251 = project_value255;
/* 7207 */       } else {
/* 7208 */         Object project_arg78 = sort_isNull14 ? null : project_converter81.apply(sort_value14);
/* 7209 */
/* 7210 */         Double project_result81 = null;
/* 7211 */         try {
/* 7212 */           project_result81 = (Double)project_catalystConverter81.apply(project_udf81.apply(project_arg78));
/* 7213 */         } catch (Exception e) {
/* 7214 */           throw new org.apache.spark.SparkException(project_scalaUDF81.udfErrorMessage(), e);
/* 7215 */         }
/* 7216 */
/* 7217 */         boolean project_isNull257 = project_result81 == null;
/* 7218 */         double project_value257 = -1.0;
/* 7219 */         if (!project_isNull257) {
/* 7220 */           project_value257 = project_result81;
/* 7221 */         }
/* 7222 */         Object project_arg79 = project_isNull257 ? null : project_converter80.apply(project_value257);
/* 7223 */
/* 7224 */         InternalRow project_result80 = null;
/* 7225 */         try {
/* 7226 */           project_result80 = (InternalRow)project_catalystConverter80.apply(project_udf80.apply(project_arg79));
/* 7227 */         } catch (Exception e) {
/* 7228 */           throw new org.apache.spark.SparkException(project_scalaUDF80.udfErrorMessage(), e);
/* 7229 */         }
/* 7230 */
/* 7231 */         boolean project_isNull256 = project_result80 == null;
/* 7232 */         InternalRow project_value256 = null;
/* 7233 */         if (!project_isNull256) {
/* 7234 */           project_value256 = project_result80;
/* 7235 */         }
/* 7236 */         project_isNull251 = project_isNull256;
/* 7237 */         project_value251 = project_value256;
/* 7238 */       }
/* 7239 */       if (project_isNull251) {
/* 7240 */         project_values1[14] = null;
/* 7241 */       } else {
/* 7242 */         project_values1[14] = project_value251;
/* 7243 */       }
/* 7244 */
/* 7245 */       Object project_arg80 = sort_isNull15 ? null : project_converter82.apply(sort_value15);
/* 7246 */
/* 7247 */       Double project_result82 = null;
/* 7248 */       try {
/* 7249 */         project_result82 = (Double)project_catalystConverter82.apply(project_udf82.apply(project_arg80));
/* 7250 */       } catch (Exception e) {
/* 7251 */         throw new org.apache.spark.SparkException(project_scalaUDF82.udfErrorMessage(), e);
/* 7252 */       }
/* 7253 */
/* 7254 */       boolean project_isNull261 = project_result82 == null;
/* 7255 */       double project_value261 = -1.0;
/* 7256 */       if (!project_isNull261) {
/* 7257 */         project_value261 = project_result82;
/* 7258 */       }
/* 7259 */       boolean project_isNull259 = false;
/* 7260 */       InternalRow project_value259 = null;
/* 7261 */       if (!false && project_isNull261) {
/* 7262 */         final InternalRow project_value263 = null;
/* 7263 */         project_isNull259 = true;
/* 7264 */         project_value259 = project_value263;
/* 7265 */       } else {
/* 7266 */         Object project_arg81 = sort_isNull15 ? null : project_converter84.apply(sort_value15);
/* 7267 */
/* 7268 */         Double project_result84 = null;
/* 7269 */         try {
/* 7270 */           project_result84 = (Double)project_catalystConverter84.apply(project_udf84.apply(project_arg81));
/* 7271 */         } catch (Exception e) {
/* 7272 */           throw new org.apache.spark.SparkException(project_scalaUDF84.udfErrorMessage(), e);
/* 7273 */         }
/* 7274 */
/* 7275 */         boolean project_isNull265 = project_result84 == null;
/* 7276 */         double project_value265 = -1.0;
/* 7277 */         if (!project_isNull265) {
/* 7278 */           project_value265 = project_result84;
/* 7279 */         }
/* 7280 */         Object project_arg82 = project_isNull265 ? null : project_converter83.apply(project_value265);
/* 7281 */
/* 7282 */         InternalRow project_result83 = null;
/* 7283 */         try {
/* 7284 */           project_result83 = (InternalRow)project_catalystConverter83.apply(project_udf83.apply(project_arg82));
/* 7285 */         } catch (Exception e) {
/* 7286 */           throw new org.apache.spark.SparkException(project_scalaUDF83.udfErrorMessage(), e);
/* 7287 */         }
/* 7288 */
/* 7289 */         boolean project_isNull264 = project_result83 == null;
/* 7290 */         InternalRow project_value264 = null;
/* 7291 */         if (!project_isNull264) {
/* 7292 */           project_value264 = project_result83;
/* 7293 */         }
/* 7294 */         project_isNull259 = project_isNull264;
/* 7295 */         project_value259 = project_value264;
/* 7296 */       }
/* 7297 */       if (project_isNull259) {
/* 7298 */         project_values1[15] = null;
/* 7299 */       } else {
/* 7300 */         project_values1[15] = project_value259;
/* 7301 */       }
/* 7302 */
/* 7303 */       if (sort_isNull16) {
/* 7304 */         project_values1[16] = null;
/* 7305 */       } else {
/* 7306 */         project_values1[16] = sort_value16;
/* 7307 */       }
/* 7308 */
/* 7309 */       Object project_arg83 = sort_isNull17 ? null : project_converter85.apply(sort_value17);
/* 7310 */
/* 7311 */       Double project_result85 = null;
/* 7312 */       try {
/* 7313 */         project_result85 = (Double)project_catalystConverter85.apply(project_udf85.apply(project_arg83));
/* 7314 */       } catch (Exception e) {
/* 7315 */         throw new org.apache.spark.SparkException(project_scalaUDF85.udfErrorMessage(), e);
/* 7316 */       }
/* 7317 */
/* 7318 */       boolean project_isNull270 = project_result85 == null;
/* 7319 */       double project_value270 = -1.0;
/* 7320 */       if (!project_isNull270) {
/* 7321 */         project_value270 = project_result85;
/* 7322 */       }
/* 7323 */       boolean project_isNull268 = false;
/* 7324 */       InternalRow project_value268 = null;
/* 7325 */       if (!false && project_isNull270) {
/* 7326 */         final InternalRow project_value272 = null;
/* 7327 */         project_isNull268 = true;
/* 7328 */         project_value268 = project_value272;
/* 7329 */       } else {
/* 7330 */         Object project_arg84 = sort_isNull17 ? null : project_converter87.apply(sort_value17);
/* 7331 */
/* 7332 */         Double project_result87 = null;
/* 7333 */         try {
/* 7334 */           project_result87 = (Double)project_catalystConverter87.apply(project_udf87.apply(project_arg84));
/* 7335 */         } catch (Exception e) {
/* 7336 */           throw new org.apache.spark.SparkException(project_scalaUDF87.udfErrorMessage(), e);
/* 7337 */         }
/* 7338 */
/* 7339 */         boolean project_isNull274 = project_result87 == null;
/* 7340 */         double project_value274 = -1.0;
/* 7341 */         if (!project_isNull274) {
/* 7342 */           project_value274 = project_result87;
/* 7343 */         }
/* 7344 */         Object project_arg85 = project_isNull274 ? null : project_converter86.apply(project_value274);
/* 7345 */
/* 7346 */         InternalRow project_result86 = null;
/* 7347 */         try {
/* 7348 */           project_result86 = (InternalRow)project_catalystConverter86.apply(project_udf86.apply(project_arg85));
/* 7349 */         } catch (Exception e) {
/* 7350 */           throw new org.apache.spark.SparkException(project_scalaUDF86.udfErrorMessage(), e);
/* 7351 */         }
/* 7352 */
/* 7353 */         boolean project_isNull273 = project_result86 == null;
/* 7354 */         InternalRow project_value273 = null;
/* 7355 */         if (!project_isNull273) {
/* 7356 */           project_value273 = project_result86;
/* 7357 */         }
/* 7358 */         project_isNull268 = project_isNull273;
/* 7359 */         project_value268 = project_value273;
/* 7360 */       }
/* 7361 */       if (project_isNull268) {
/* 7362 */         project_values1[17] = null;
/* 7363 */       } else {
/* 7364 */         project_values1[17] = project_value268;
/* 7365 */       }
/* 7366 */
/* 7367 */       Object project_arg86 = sort_isNull18 ? null : project_converter88.apply(sort_value18);
/* 7368 */
/* 7369 */       Double project_result88 = null;
/* 7370 */       try {
/* 7371 */         project_result88 = (Double)project_catalystConverter88.apply(project_udf88.apply(project_arg86));
/* 7372 */       } catch (Exception e) {
/* 7373 */         throw new org.apache.spark.SparkException(project_scalaUDF88.udfErrorMessage(), e);
/* 7374 */       }
/* 7375 */
/* 7376 */       boolean project_isNull278 = project_result88 == null;
/* 7377 */       double project_value278 = -1.0;
/* 7378 */       if (!project_isNull278) {
/* 7379 */         project_value278 = project_result88;
/* 7380 */       }
/* 7381 */       boolean project_isNull276 = false;
/* 7382 */       InternalRow project_value276 = null;
/* 7383 */       if (!false && project_isNull278) {
/* 7384 */         final InternalRow project_value280 = null;
/* 7385 */         project_isNull276 = true;
/* 7386 */         project_value276 = project_value280;
/* 7387 */       } else {
/* 7388 */         Object project_arg87 = sort_isNull18 ? null : project_converter90.apply(sort_value18);
/* 7389 */
/* 7390 */         Double project_result90 = null;
/* 7391 */         try {
/* 7392 */           project_result90 = (Double)project_catalystConverter90.apply(project_udf90.apply(project_arg87));
/* 7393 */         } catch (Exception e) {
/* 7394 */           throw new org.apache.spark.SparkException(project_scalaUDF90.udfErrorMessage(), e);
/* 7395 */         }
/* 7396 */
/* 7397 */         boolean project_isNull282 = project_result90 == null;
/* 7398 */         double project_value282 = -1.0;
/* 7399 */         if (!project_isNull282) {
/* 7400 */           project_value282 = project_result90;
/* 7401 */         }
/* 7402 */         Object project_arg88 = project_isNull282 ? null : project_converter89.apply(project_value282);
/* 7403 */
/* 7404 */         InternalRow project_result89 = null;
/* 7405 */         try {
/* 7406 */           project_result89 = (InternalRow)project_catalystConverter89.apply(project_udf89.apply(project_arg88));
/* 7407 */         } catch (Exception e) {
/* 7408 */           throw new org.apache.spark.SparkException(project_scalaUDF89.udfErrorMessage(), e);
/* 7409 */         }
/* 7410 */
/* 7411 */         boolean project_isNull281 = project_result89 == null;
/* 7412 */         InternalRow project_value281 = null;
/* 7413 */         if (!project_isNull281) {
/* 7414 */           project_value281 = project_result89;
/* 7415 */         }
/* 7416 */         project_isNull276 = project_isNull281;
/* 7417 */         project_value276 = project_value281;
/* 7418 */       }
/* 7419 */       if (project_isNull276) {
/* 7420 */         project_values1[18] = null;
/* 7421 */       } else {
/* 7422 */         project_values1[18] = project_value276;
/* 7423 */       }
/* 7424 */
/* 7425 */       Object project_arg89 = sort_isNull19 ? null : project_converter91.apply(sort_value19);
/* 7426 */
/* 7427 */       Double project_result91 = null;
/* 7428 */       try {
/* 7429 */         project_result91 = (Double)project_catalystConverter91.apply(project_udf91.apply(project_arg89));
/* 7430 */       } catch (Exception e) {
/* 7431 */         throw new org.apache.spark.SparkException(project_scalaUDF91.udfErrorMessage(), e);
/* 7432 */       }
/* 7433 */
/* 7434 */       boolean project_isNull286 = project_result91 == null;
/* 7435 */       double project_value286 = -1.0;
/* 7436 */       if (!project_isNull286) {
/* 7437 */         project_value286 = project_result91;
/* 7438 */       }
/* 7439 */       boolean project_isNull284 = false;
/* 7440 */       InternalRow project_value284 = null;
/* 7441 */       if (!false && project_isNull286) {
/* 7442 */         final InternalRow project_value288 = null;
/* 7443 */         project_isNull284 = true;
/* 7444 */         project_value284 = project_value288;
/* 7445 */       } else {
/* 7446 */         Object project_arg90 = sort_isNull19 ? null : project_converter93.apply(sort_value19);
/* 7447 */
/* 7448 */         Double project_result93 = null;
/* 7449 */         try {
/* 7450 */           project_result93 = (Double)project_catalystConverter93.apply(project_udf93.apply(project_arg90));
/* 7451 */         } catch (Exception e) {
/* 7452 */           throw new org.apache.spark.SparkException(project_scalaUDF93.udfErrorMessage(), e);
/* 7453 */         }
/* 7454 */
/* 7455 */         boolean project_isNull290 = project_result93 == null;
/* 7456 */         double project_value290 = -1.0;
/* 7457 */         if (!project_isNull290) {
/* 7458 */           project_value290 = project_result93;
/* 7459 */         }
/* 7460 */         Object project_arg91 = project_isNull290 ? null : project_converter92.apply(project_value290);
/* 7461 */
/* 7462 */         InternalRow project_result92 = null;
/* 7463 */         try {
/* 7464 */           project_result92 = (InternalRow)project_catalystConverter92.apply(project_udf92.apply(project_arg91));
/* 7465 */         } catch (Exception e) {
/* 7466 */           throw new org.apache.spark.SparkException(project_scalaUDF92.udfErrorMessage(), e);
/* 7467 */         }
/* 7468 */
/* 7469 */         boolean project_isNull289 = project_result92 == null;
/* 7470 */         InternalRow project_value289 = null;
/* 7471 */         if (!project_isNull289) {
/* 7472 */           project_value289 = project_result92;
/* 7473 */         }
/* 7474 */         project_isNull284 = project_isNull289;
/* 7475 */         project_value284 = project_value289;
/* 7476 */       }
/* 7477 */       if (project_isNull284) {
/* 7478 */         project_values1[19] = null;
/* 7479 */       } else {
/* 7480 */         project_values1[19] = project_value284;
/* 7481 */       }
/* 7482 */
/* 7483 */       Object project_arg92 = sort_isNull20 ? null : project_converter94.apply(sort_value20);
/* 7484 */
/* 7485 */       Double project_result94 = null;
/* 7486 */       try {
/* 7487 */         project_result94 = (Double)project_catalystConverter94.apply(project_udf94.apply(project_arg92));
/* 7488 */       } catch (Exception e) {
/* 7489 */         throw new org.apache.spark.SparkException(project_scalaUDF94.udfErrorMessage(), e);
/* 7490 */       }
/* 7491 */
/* 7492 */       boolean project_isNull294 = project_result94 == null;
/* 7493 */       double project_value294 = -1.0;
/* 7494 */       if (!project_isNull294) {
/* 7495 */         project_value294 = project_result94;
/* 7496 */       }
/* 7497 */       boolean project_isNull292 = false;
/* 7498 */       InternalRow project_value292 = null;
/* 7499 */       if (!false && project_isNull294) {
/* 7500 */         final InternalRow project_value296 = null;
/* 7501 */         project_isNull292 = true;
/* 7502 */         project_value292 = project_value296;
/* 7503 */       } else {
/* 7504 */         Object project_arg93 = sort_isNull20 ? null : project_converter96.apply(sort_value20);
/* 7505 */
/* 7506 */         Double project_result96 = null;
/* 7507 */         try {
/* 7508 */           project_result96 = (Double)project_catalystConverter96.apply(project_udf96.apply(project_arg93));
/* 7509 */         } catch (Exception e) {
/* 7510 */           throw new org.apache.spark.SparkException(project_scalaUDF96.udfErrorMessage(), e);
/* 7511 */         }
/* 7512 */
/* 7513 */         boolean project_isNull298 = project_result96 == null;
/* 7514 */         double project_value298 = -1.0;
/* 7515 */         if (!project_isNull298) {
/* 7516 */           project_value298 = project_result96;
/* 7517 */         }
/* 7518 */         Object project_arg94 = project_isNull298 ? null : project_converter95.apply(project_value298);
/* 7519 */
/* 7520 */         InternalRow project_result95 = null;
/* 7521 */         try {
/* 7522 */           project_result95 = (InternalRow)project_catalystConverter95.apply(project_udf95.apply(project_arg94));
/* 7523 */         } catch (Exception e) {
/* 7524 */           throw new org.apache.spark.SparkException(project_scalaUDF95.udfErrorMessage(), e);
/* 7525 */         }
/* 7526 */
/* 7527 */         boolean project_isNull297 = project_result95 == null;
/* 7528 */         InternalRow project_value297 = null;
/* 7529 */         if (!project_isNull297) {
/* 7530 */           project_value297 = project_result95;
/* 7531 */         }
/* 7532 */         project_isNull292 = project_isNull297;
/* 7533 */         project_value292 = project_value297;
/* 7534 */       }
/* 7535 */       if (project_isNull292) {
/* 7536 */         project_values1[20] = null;
/* 7537 */       } else {
/* 7538 */         project_values1[20] = project_value292;
/* 7539 */       }
/* 7540 */
/* 7541 */       Object project_arg95 = sort_isNull21 ? null : project_converter97.apply(sort_value21);
/* 7542 */
/* 7543 */       Double project_result97 = null;
/* 7544 */       try {
/* 7545 */         project_result97 = (Double)project_catalystConverter97.apply(project_udf97.apply(project_arg95));
/* 7546 */       } catch (Exception e) {
/* 7547 */         throw new org.apache.spark.SparkException(project_scalaUDF97.udfErrorMessage(), e);
/* 7548 */       }
/* 7549 */
/* 7550 */       boolean project_isNull302 = project_result97 == null;
/* 7551 */       double project_value302 = -1.0;
/* 7552 */       if (!project_isNull302) {
/* 7553 */         project_value302 = project_result97;
/* 7554 */       }
/* 7555 */       boolean project_isNull300 = false;
/* 7556 */       InternalRow project_value300 = null;
/* 7557 */       if (!false && project_isNull302) {
/* 7558 */         final InternalRow project_value304 = null;
/* 7559 */         project_isNull300 = true;
/* 7560 */         project_value300 = project_value304;
/* 7561 */       } else {
/* 7562 */         Object project_arg96 = sort_isNull21 ? null : project_converter99.apply(sort_value21);
/* 7563 */
/* 7564 */         Double project_result99 = null;
/* 7565 */         try {
/* 7566 */           project_result99 = (Double)project_catalystConverter99.apply(project_udf99.apply(project_arg96));
/* 7567 */         } catch (Exception e) {
/* 7568 */           throw new org.apache.spark.SparkException(project_scalaUDF99.udfErrorMessage(), e);
/* 7569 */         }
/* 7570 */
/* 7571 */         boolean project_isNull306 = project_result99 == null;
/* 7572 */         double project_value306 = -1.0;
/* 7573 */         if (!project_isNull306) {
/* 7574 */           project_value306 = project_result99;
/* 7575 */         }
/* 7576 */         Object project_arg97 = project_isNull306 ? null : project_converter98.apply(project_value306);
/* 7577 */
/* 7578 */         InternalRow project_result98 = null;
/* 7579 */         try {
/* 7580 */           project_result98 = (InternalRow)project_catalystConverter98.apply(project_udf98.apply(project_arg97));
/* 7581 */         } catch (Exception e) {
/* 7582 */           throw new org.apache.spark.SparkException(project_scalaUDF98.udfErrorMessage(), e);
/* 7583 */         }
/* 7584 */
/* 7585 */         boolean project_isNull305 = project_result98 == null;
/* 7586 */         InternalRow project_value305 = null;
/* 7587 */         if (!project_isNull305) {
/* 7588 */           project_value305 = project_result98;
/* 7589 */         }
/* 7590 */         project_isNull300 = project_isNull305;
/* 7591 */         project_value300 = project_value305;
/* 7592 */       }
/* 7593 */       if (project_isNull300) {
/* 7594 */         project_values1[21] = null;
/* 7595 */       } else {
/* 7596 */         project_values1[21] = project_value300;
/* 7597 */       }
/* 7598 */
/* 7599 */       Object project_arg98 = sort_isNull22 ? null : project_converter100.apply(sort_value22);
/* 7600 */
/* 7601 */       Double project_result100 = null;
/* 7602 */       try {
/* 7603 */         project_result100 = (Double)project_catalystConverter100.apply(project_udf100.apply(project_arg98));
/* 7604 */       } catch (Exception e) {
/* 7605 */         throw new org.apache.spark.SparkException(project_scalaUDF100.udfErrorMessage(), e);
/* 7606 */       }
/* 7607 */
/* 7608 */       boolean project_isNull310 = project_result100 == null;
/* 7609 */       double project_value310 = -1.0;
/* 7610 */       if (!project_isNull310) {
/* 7611 */         project_value310 = project_result100;
/* 7612 */       }
/* 7613 */       boolean project_isNull308 = false;
/* 7614 */       InternalRow project_value308 = null;
/* 7615 */       if (!false && project_isNull310) {
/* 7616 */         final InternalRow project_value312 = null;
/* 7617 */         project_isNull308 = true;
/* 7618 */         project_value308 = project_value312;
/* 7619 */       } else {
/* 7620 */         Object project_arg99 = sort_isNull22 ? null : project_converter102.apply(sort_value22);
/* 7621 */
/* 7622 */         Double project_result102 = null;
/* 7623 */         try {
/* 7624 */           project_result102 = (Double)project_catalystConverter102.apply(project_udf102.apply(project_arg99));
/* 7625 */         } catch (Exception e) {
/* 7626 */           throw new org.apache.spark.SparkException(project_scalaUDF102.udfErrorMessage(), e);
/* 7627 */         }
/* 7628 */
/* 7629 */         boolean project_isNull314 = project_result102 == null;
/* 7630 */         double project_value314 = -1.0;
/* 7631 */         if (!project_isNull314) {
/* 7632 */           project_value314 = project_result102;
/* 7633 */         }
/* 7634 */         Object project_arg100 = project_isNull314 ? null : project_converter101.apply(project_value314);
/* 7635 */
/* 7636 */         InternalRow project_result101 = null;
/* 7637 */         try {
/* 7638 */           project_result101 = (InternalRow)project_catalystConverter101.apply(project_udf101.apply(project_arg100));
/* 7639 */         } catch (Exception e) {
/* 7640 */           throw new org.apache.spark.SparkException(project_scalaUDF101.udfErrorMessage(), e);
/* 7641 */         }
/* 7642 */
/* 7643 */         boolean project_isNull313 = project_result101 == null;
/* 7644 */         InternalRow project_value313 = null;
/* 7645 */         if (!project_isNull313) {
/* 7646 */           project_value313 = project_result101;
/* 7647 */         }
/* 7648 */         project_isNull308 = project_isNull313;
/* 7649 */         project_value308 = project_value313;
/* 7650 */       }
/* 7651 */       if (project_isNull308) {
/* 7652 */         project_values1[22] = null;
/* 7653 */       } else {
/* 7654 */         project_values1[22] = project_value308;
/* 7655 */       }
/* 7656 */
/* 7657 */       Object project_arg101 = sort_isNull23 ? null : project_converter103.apply(sort_value23);
/* 7658 */
/* 7659 */       Double project_result103 = null;
/* 7660 */       try {
/* 7661 */         project_result103 = (Double)project_catalystConverter103.apply(project_udf103.apply(project_arg101));
/* 7662 */       } catch (Exception e) {
/* 7663 */         throw new org.apache.spark.SparkException(project_scalaUDF103.udfErrorMessage(), e);
/* 7664 */       }
/* 7665 */
/* 7666 */       boolean project_isNull318 = project_result103 == null;
/* 7667 */       double project_value318 = -1.0;
/* 7668 */       if (!project_isNull318) {
/* 7669 */         project_value318 = project_result103;
/* 7670 */       }
/* 7671 */       boolean project_isNull316 = false;
/* 7672 */       InternalRow project_value316 = null;
/* 7673 */       if (!false && project_isNull318) {
/* 7674 */         final InternalRow project_value320 = null;
/* 7675 */         project_isNull316 = true;
/* 7676 */         project_value316 = project_value320;
/* 7677 */       } else {
/* 7678 */         Object project_arg102 = sort_isNull23 ? null : project_converter105.apply(sort_value23);
/* 7679 */
/* 7680 */         Double project_result105 = null;
/* 7681 */         try {
/* 7682 */           project_result105 = (Double)project_catalystConverter105.apply(project_udf105.apply(project_arg102));
/* 7683 */         } catch (Exception e) {
/* 7684 */           throw new org.apache.spark.SparkException(project_scalaUDF105.udfErrorMessage(), e);
/* 7685 */         }
/* 7686 */
/* 7687 */         boolean project_isNull322 = project_result105 == null;
/* 7688 */         double project_value322 = -1.0;
/* 7689 */         if (!project_isNull322) {
/* 7690 */           project_value322 = project_result105;
/* 7691 */         }
/* 7692 */         Object project_arg103 = project_isNull322 ? null : project_converter104.apply(project_value322);
/* 7693 */
/* 7694 */         InternalRow project_result104 = null;
/* 7695 */         try {
/* 7696 */           project_result104 = (InternalRow)project_catalystConverter104.apply(project_udf104.apply(project_arg103));
/* 7697 */         } catch (Exception e) {
/* 7698 */           throw new org.apache.spark.SparkException(project_scalaUDF104.udfErrorMessage(), e);
/* 7699 */         }
/* 7700 */
/* 7701 */         boolean project_isNull321 = project_result104 == null;
/* 7702 */         InternalRow project_value321 = null;
/* 7703 */         if (!project_isNull321) {
/* 7704 */           project_value321 = project_result104;
/* 7705 */         }
/* 7706 */         project_isNull316 = project_isNull321;
/* 7707 */         project_value316 = project_value321;
/* 7708 */       }
/* 7709 */       if (project_isNull316) {
/* 7710 */         project_values1[23] = null;
/* 7711 */       } else {
/* 7712 */         project_values1[23] = project_value316;
/* 7713 */       }
/* 7714 */
/* 7715 */       Object project_arg104 = sort_isNull24 ? null : project_converter106.apply(sort_value24);
/* 7716 */
/* 7717 */       Double project_result106 = null;
/* 7718 */       try {
/* 7719 */         project_result106 = (Double)project_catalystConverter106.apply(project_udf106.apply(project_arg104));
/* 7720 */       } catch (Exception e) {
/* 7721 */         throw new org.apache.spark.SparkException(project_scalaUDF106.udfErrorMessage(), e);
/* 7722 */       }
/* 7723 */
/* 7724 */       boolean project_isNull326 = project_result106 == null;
/* 7725 */       double project_value326 = -1.0;
/* 7726 */       if (!project_isNull326) {
/* 7727 */         project_value326 = project_result106;
/* 7728 */       }
/* 7729 */       boolean project_isNull324 = false;
/* 7730 */       InternalRow project_value324 = null;
/* 7731 */       if (!false && project_isNull326) {
/* 7732 */         final InternalRow project_value328 = null;
/* 7733 */         project_isNull324 = true;
/* 7734 */         project_value324 = project_value328;
/* 7735 */       } else {
/* 7736 */         Object project_arg105 = sort_isNull24 ? null : project_converter108.apply(sort_value24);
/* 7737 */
/* 7738 */         Double project_result108 = null;
/* 7739 */         try {
/* 7740 */           project_result108 = (Double)project_catalystConverter108.apply(project_udf108.apply(project_arg105));
/* 7741 */         } catch (Exception e) {
/* 7742 */           throw new org.apache.spark.SparkException(project_scalaUDF108.udfErrorMessage(), e);
/* 7743 */         }
/* 7744 */
/* 7745 */         boolean project_isNull330 = project_result108 == null;
/* 7746 */         double project_value330 = -1.0;
/* 7747 */         if (!project_isNull330) {
/* 7748 */           project_value330 = project_result108;
/* 7749 */         }
/* 7750 */         Object project_arg106 = project_isNull330 ? null : project_converter107.apply(project_value330);
/* 7751 */
/* 7752 */         InternalRow project_result107 = null;
/* 7753 */         try {
/* 7754 */           project_result107 = (InternalRow)project_catalystConverter107.apply(project_udf107.apply(project_arg106));
/* 7755 */         } catch (Exception e) {
/* 7756 */           throw new org.apache.spark.SparkException(project_scalaUDF107.udfErrorMessage(), e);
/* 7757 */         }
/* 7758 */
/* 7759 */         boolean project_isNull329 = project_result107 == null;
/* 7760 */         InternalRow project_value329 = null;
/* 7761 */         if (!project_isNull329) {
/* 7762 */           project_value329 = project_result107;
/* 7763 */         }
/* 7764 */         project_isNull324 = project_isNull329;
/* 7765 */         project_value324 = project_value329;
/* 7766 */       }
/* 7767 */       if (project_isNull324) {
/* 7768 */         project_values1[24] = null;
/* 7769 */       } else {
/* 7770 */         project_values1[24] = project_value324;
/* 7771 */       }
/* 7772 */
/* 7773 */       Object project_arg107 = sort_isNull25 ? null : project_converter109.apply(sort_value25);
/* 7774 */
/* 7775 */       Double project_result109 = null;
/* 7776 */       try {
/* 7777 */         project_result109 = (Double)project_catalystConverter109.apply(project_udf109.apply(project_arg107));
/* 7778 */       } catch (Exception e) {
/* 7779 */         throw new org.apache.spark.SparkException(project_scalaUDF109.udfErrorMessage(), e);
/* 7780 */       }
/* 7781 */
/* 7782 */       boolean project_isNull334 = project_result109 == null;
/* 7783 */       double project_value334 = -1.0;
/* 7784 */       if (!project_isNull334) {
/* 7785 */         project_value334 = project_result109;
/* 7786 */       }
/* 7787 */       boolean project_isNull332 = false;
/* 7788 */       InternalRow project_value332 = null;
/* 7789 */       if (!false && project_isNull334) {
/* 7790 */         final InternalRow project_value336 = null;
/* 7791 */         project_isNull332 = true;
/* 7792 */         project_value332 = project_value336;
/* 7793 */       } else {
/* 7794 */         Object project_arg108 = sort_isNull25 ? null : project_converter111.apply(sort_value25);
/* 7795 */
/* 7796 */         Double project_result111 = null;
/* 7797 */         try {
/* 7798 */           project_result111 = (Double)project_catalystConverter111.apply(project_udf111.apply(project_arg108));
/* 7799 */         } catch (Exception e) {
/* 7800 */           throw new org.apache.spark.SparkException(project_scalaUDF111.udfErrorMessage(), e);
/* 7801 */         }
/* 7802 */
/* 7803 */         boolean project_isNull338 = project_result111 == null;
/* 7804 */         double project_value338 = -1.0;
/* 7805 */         if (!project_isNull338) {
/* 7806 */           project_value338 = project_result111;
/* 7807 */         }
/* 7808 */         Object project_arg109 = project_isNull338 ? null : project_converter110.apply(project_value338);
/* 7809 */
/* 7810 */         InternalRow project_result110 = null;
/* 7811 */         try {
/* 7812 */           project_result110 = (InternalRow)project_catalystConverter110.apply(project_udf110.apply(project_arg109));
/* 7813 */         } catch (Exception e) {
/* 7814 */           throw new org.apache.spark.SparkException(project_scalaUDF110.udfErrorMessage(), e);
/* 7815 */         }
/* 7816 */
/* 7817 */         boolean project_isNull337 = project_result110 == null;
/* 7818 */         InternalRow project_value337 = null;
/* 7819 */         if (!project_isNull337) {
/* 7820 */           project_value337 = project_result110;
/* 7821 */         }
/* 7822 */         project_isNull332 = project_isNull337;
/* 7823 */         project_value332 = project_value337;
/* 7824 */       }
/* 7825 */       if (project_isNull332) {
/* 7826 */         project_values1[25] = null;
/* 7827 */       } else {
/* 7828 */         project_values1[25] = project_value332;
/* 7829 */       }
/* 7830 */
/* 7831 */       if (sort_isNull27) {
/* 7832 */         project_values1[26] = null;
/* 7833 */       } else {
/* 7834 */         project_values1[26] = sort_value27;
/* 7835 */       }
/* 7836 */       final InternalRow project_value187 = new org.apache.spark.sql.catalyst.expressions.GenericInternalRow(project_values1);
/* 7837 */       this.project_values1 = null;
/* 7838 */       Object project_arg110 = false ? null : project_converter57.apply(project_value187);
/* 7839 */
/* 7840 */       InternalRow project_result57 = null;
/* 7841 */       try {
/* 7842 */         project_result57 = (InternalRow)project_catalystConverter57.apply(project_udf57.apply(project_arg110));
/* 7843 */       } catch (Exception e) {
/* 7844 */         throw new org.apache.spark.SparkException(project_scalaUDF57.udfErrorMessage(), e);
/* 7845 */       }
/* 7846 */
/* 7847 */       boolean project_isNull186 = project_result57 == null;
/* 7848 */       InternalRow project_value186 = null;
/* 7849 */       if (!project_isNull186) {
/* 7850 */         project_value186 = project_result57;
/* 7851 */       }
/* 7852 */       Object project_arg111 = project_isNull186 ? null : project_converter56.apply(project_value186);
/* 7853 */
/* 7854 */       InternalRow project_result56 = null;
/* 7855 */       try {
/* 7856 */         project_result56 = (InternalRow)project_catalystConverter56.apply(project_udf56.apply(project_arg111));
/* 7857 */       } catch (Exception e) {
/* 7858 */         throw new org.apache.spark.SparkException(project_scalaUDF56.udfErrorMessage(), e);
/* 7859 */       }
/* 7860 */
/* 7861 */       boolean project_isNull185 = project_result56 == null;
/* 7862 */       InternalRow project_value185 = null;
/* 7863 */       if (!project_isNull185) {
/* 7864 */         project_value185 = project_result56;
/* 7865 */       }
/* 7866 */       project_values2 = new Object[27];
/* 7867 */       Object project_arg112 = sort_isNull ? null : project_converter115.apply(sort_value);
/* 7868 */
/* 7869 */       Double project_result115 = null;
/* 7870 */       try {
/* 7871 */         project_result115 = (Double)project_catalystConverter115.apply(project_udf115.apply(project_arg112));
/* 7872 */       } catch (Exception e) {
/* 7873 */         throw new org.apache.spark.SparkException(project_scalaUDF115.udfErrorMessage(), e);
/* 7874 */       }
/* 7875 */
/* 7876 */       boolean project_isNull347 = project_result115 == null;
/* 7877 */       double project_value347 = -1.0;
/* 7878 */       if (!project_isNull347) {
/* 7879 */         project_value347 = project_result115;
/* 7880 */       }
/* 7881 */       boolean project_isNull345 = false;
/* 7882 */       InternalRow project_value345 = null;
/* 7883 */       if (!false && project_isNull347) {
/* 7884 */         final InternalRow project_value349 = null;
/* 7885 */         project_isNull345 = true;
/* 7886 */         project_value345 = project_value349;
/* 7887 */       } else {
/* 7888 */         Object project_arg113 = sort_isNull ? null : project_converter117.apply(sort_value);
/* 7889 */
/* 7890 */         Double project_result117 = null;
/* 7891 */         try {
/* 7892 */           project_result117 = (Double)project_catalystConverter117.apply(project_udf117.apply(project_arg113));
/* 7893 */         } catch (Exception e) {
/* 7894 */           throw new org.apache.spark.SparkException(project_scalaUDF117.udfErrorMessage(), e);
/* 7895 */         }
/* 7896 */
/* 7897 */         boolean project_isNull351 = project_result117 == null;
/* 7898 */         double project_value351 = -1.0;
/* 7899 */         if (!project_isNull351) {
/* 7900 */           project_value351 = project_result117;
/* 7901 */         }
/* 7902 */         Object project_arg114 = project_isNull351 ? null : project_converter116.apply(project_value351);
/* 7903 */
/* 7904 */         InternalRow project_result116 = null;
/* 7905 */         try {
/* 7906 */           project_result116 = (InternalRow)project_catalystConverter116.apply(project_udf116.apply(project_arg114));
/* 7907 */         } catch (Exception e) {
/* 7908 */           throw new org.apache.spark.SparkException(project_scalaUDF116.udfErrorMessage(), e);
/* 7909 */         }
/* 7910 */
/* 7911 */         boolean project_isNull350 = project_result116 == null;
/* 7912 */         InternalRow project_value350 = null;
/* 7913 */         if (!project_isNull350) {
/* 7914 */           project_value350 = project_result116;
/* 7915 */         }
/* 7916 */         project_isNull345 = project_isNull350;
/* 7917 */         project_value345 = project_value350;
/* 7918 */       }
/* 7919 */       if (project_isNull345) {
/* 7920 */         project_values2[0] = null;
/* 7921 */       } else {
/* 7922 */         project_values2[0] = project_value345;
/* 7923 */       }
/* 7924 */
/* 7925 */       Object project_arg115 = sort_isNull1 ? null : project_converter118.apply(sort_value1);
/* 7926 */
/* 7927 */       Double project_result118 = null;
/* 7928 */       try {
/* 7929 */         project_result118 = (Double)project_catalystConverter118.apply(project_udf118.apply(project_arg115));
/* 7930 */       } catch (Exception e) {
/* 7931 */         throw new org.apache.spark.SparkException(project_scalaUDF118.udfErrorMessage(), e);
/* 7932 */       }
/* 7933 */
/* 7934 */       boolean project_isNull355 = project_result118 == null;
/* 7935 */       double project_value355 = -1.0;
/* 7936 */       if (!project_isNull355) {
/* 7937 */         project_value355 = project_result118;
/* 7938 */       }
/* 7939 */       boolean project_isNull353 = false;
/* 7940 */       InternalRow project_value353 = null;
/* 7941 */       if (!false && project_isNull355) {
/* 7942 */         final InternalRow project_value357 = null;
/* 7943 */         project_isNull353 = true;
/* 7944 */         project_value353 = project_value357;
/* 7945 */       } else {
/* 7946 */         Object project_arg116 = sort_isNull1 ? null : project_converter120.apply(sort_value1);
/* 7947 */
/* 7948 */         Double project_result120 = null;
/* 7949 */         try {
/* 7950 */           project_result120 = (Double)project_catalystConverter120.apply(project_udf120.apply(project_arg116));
/* 7951 */         } catch (Exception e) {
/* 7952 */           throw new org.apache.spark.SparkException(project_scalaUDF120.udfErrorMessage(), e);
/* 7953 */         }
/* 7954 */
/* 7955 */         boolean project_isNull359 = project_result120 == null;
/* 7956 */         double project_value359 = -1.0;
/* 7957 */         if (!project_isNull359) {
/* 7958 */           project_value359 = project_result120;
/* 7959 */         }
/* 7960 */         Object project_arg117 = project_isNull359 ? null : project_converter119.apply(project_value359);
/* 7961 */
/* 7962 */         InternalRow project_result119 = null;
/* 7963 */         try {
/* 7964 */           project_result119 = (InternalRow)project_catalystConverter119.apply(project_udf119.apply(project_arg117));
/* 7965 */         } catch (Exception e) {
/* 7966 */           throw new org.apache.spark.SparkException(project_scalaUDF119.udfErrorMessage(), e);
/* 7967 */         }
/* 7968 */
/* 7969 */         boolean project_isNull358 = project_result119 == null;
/* 7970 */         InternalRow project_value358 = null;
/* 7971 */         if (!project_isNull358) {
/* 7972 */           project_value358 = project_result119;
/* 7973 */         }
/* 7974 */         project_isNull353 = project_isNull358;
/* 7975 */         project_value353 = project_value358;
/* 7976 */       }
/* 7977 */       if (project_isNull353) {
/* 7978 */         project_values2[1] = null;
/* 7979 */       } else {
/* 7980 */         project_values2[1] = project_value353;
/* 7981 */       }
/* 7982 */
/* 7983 */       Object project_arg118 = sort_isNull2 ? null : project_converter121.apply(sort_value2);
/* 7984 */
/* 7985 */       Double project_result121 = null;
/* 7986 */       try {
/* 7987 */         project_result121 = (Double)project_catalystConverter121.apply(project_udf121.apply(project_arg118));
/* 7988 */       } catch (Exception e) {
/* 7989 */         throw new org.apache.spark.SparkException(project_scalaUDF121.udfErrorMessage(), e);
/* 7990 */       }
/* 7991 */
/* 7992 */       boolean project_isNull363 = project_result121 == null;
/* 7993 */       double project_value363 = -1.0;
/* 7994 */       if (!project_isNull363) {
/* 7995 */         project_value363 = project_result121;
/* 7996 */       }
/* 7997 */       boolean project_isNull361 = false;
/* 7998 */       InternalRow project_value361 = null;
/* 7999 */       if (!false && project_isNull363) {
/* 8000 */         final InternalRow project_value365 = null;
/* 8001 */         project_isNull361 = true;
/* 8002 */         project_value361 = project_value365;
/* 8003 */       } else {
/* 8004 */         Object project_arg119 = sort_isNull2 ? null : project_converter123.apply(sort_value2);
/* 8005 */
/* 8006 */         Double project_result123 = null;
/* 8007 */         try {
/* 8008 */           project_result123 = (Double)project_catalystConverter123.apply(project_udf123.apply(project_arg119));
/* 8009 */         } catch (Exception e) {
/* 8010 */           throw new org.apache.spark.SparkException(project_scalaUDF123.udfErrorMessage(), e);
/* 8011 */         }
/* 8012 */
/* 8013 */         boolean project_isNull367 = project_result123 == null;
/* 8014 */         double project_value367 = -1.0;
/* 8015 */         if (!project_isNull367) {
/* 8016 */           project_value367 = project_result123;
/* 8017 */         }
/* 8018 */         Object project_arg120 = project_isNull367 ? null : project_converter122.apply(project_value367);
/* 8019 */
/* 8020 */         InternalRow project_result122 = null;
/* 8021 */         try {
/* 8022 */           project_result122 = (InternalRow)project_catalystConverter122.apply(project_udf122.apply(project_arg120));
/* 8023 */         } catch (Exception e) {
/* 8024 */           throw new org.apache.spark.SparkException(project_scalaUDF122.udfErrorMessage(), e);
/* 8025 */         }
/* 8026 */
/* 8027 */         boolean project_isNull366 = project_result122 == null;
/* 8028 */         InternalRow project_value366 = null;
/* 8029 */         if (!project_isNull366) {
/* 8030 */           project_value366 = project_result122;
/* 8031 */         }
/* 8032 */         project_isNull361 = project_isNull366;
/* 8033 */         project_value361 = project_value366;
/* 8034 */       }
/* 8035 */       if (project_isNull361) {
/* 8036 */         project_values2[2] = null;
/* 8037 */       } else {
/* 8038 */         project_values2[2] = project_value361;
/* 8039 */       }
/* 8040 */
/* 8041 */       Object project_arg121 = sort_isNull3 ? null : project_converter124.apply(sort_value3);
/* 8042 */
/* 8043 */       Double project_result124 = null;
/* 8044 */       try {
/* 8045 */         project_result124 = (Double)project_catalystConverter124.apply(project_udf124.apply(project_arg121));
/* 8046 */       } catch (Exception e) {
/* 8047 */         throw new org.apache.spark.SparkException(project_scalaUDF124.udfErrorMessage(), e);
/* 8048 */       }
/* 8049 */
/* 8050 */       boolean project_isNull371 = project_result124 == null;
/* 8051 */       double project_value371 = -1.0;
/* 8052 */       if (!project_isNull371) {
/* 8053 */         project_value371 = project_result124;
/* 8054 */       }
/* 8055 */       boolean project_isNull369 = false;
/* 8056 */       InternalRow project_value369 = null;
/* 8057 */       if (!false && project_isNull371) {
/* 8058 */         final InternalRow project_value373 = null;
/* 8059 */         project_isNull369 = true;
/* 8060 */         project_value369 = project_value373;
/* 8061 */       } else {
/* 8062 */         Object project_arg122 = sort_isNull3 ? null : project_converter126.apply(sort_value3);
/* 8063 */
/* 8064 */         Double project_result126 = null;
/* 8065 */         try {
/* 8066 */           project_result126 = (Double)project_catalystConverter126.apply(project_udf126.apply(project_arg122));
/* 8067 */         } catch (Exception e) {
/* 8068 */           throw new org.apache.spark.SparkException(project_scalaUDF126.udfErrorMessage(), e);
/* 8069 */         }
/* 8070 */
/* 8071 */         boolean project_isNull375 = project_result126 == null;
/* 8072 */         double project_value375 = -1.0;
/* 8073 */         if (!project_isNull375) {
/* 8074 */           project_value375 = project_result126;
/* 8075 */         }
/* 8076 */         Object project_arg123 = project_isNull375 ? null : project_converter125.apply(project_value375);
/* 8077 */
/* 8078 */         InternalRow project_result125 = null;
/* 8079 */         try {
/* 8080 */           project_result125 = (InternalRow)project_catalystConverter125.apply(project_udf125.apply(project_arg123));
/* 8081 */         } catch (Exception e) {
/* 8082 */           throw new org.apache.spark.SparkException(project_scalaUDF125.udfErrorMessage(), e);
/* 8083 */         }
/* 8084 */
/* 8085 */         boolean project_isNull374 = project_result125 == null;
/* 8086 */         InternalRow project_value374 = null;
/* 8087 */         if (!project_isNull374) {
/* 8088 */           project_value374 = project_result125;
/* 8089 */         }
/* 8090 */         project_isNull369 = project_isNull374;
/* 8091 */         project_value369 = project_value374;
/* 8092 */       }
/* 8093 */       if (project_isNull369) {
/* 8094 */         project_values2[3] = null;
/* 8095 */       } else {
/* 8096 */         project_values2[3] = project_value369;
/* 8097 */       }
/* 8098 */
/* 8099 */       Object project_arg124 = sort_isNull4 ? null : project_converter127.apply(sort_value4);
/* 8100 */
/* 8101 */       Double project_result127 = null;
/* 8102 */       try {
/* 8103 */         project_result127 = (Double)project_catalystConverter127.apply(project_udf127.apply(project_arg124));
/* 8104 */       } catch (Exception e) {
/* 8105 */         throw new org.apache.spark.SparkException(project_scalaUDF127.udfErrorMessage(), e);
/* 8106 */       }
/* 8107 */
/* 8108 */       boolean project_isNull379 = project_result127 == null;
/* 8109 */       double project_value379 = -1.0;
/* 8110 */       if (!project_isNull379) {
/* 8111 */         project_value379 = project_result127;
/* 8112 */       }
/* 8113 */       boolean project_isNull377 = false;
/* 8114 */       InternalRow project_value377 = null;
/* 8115 */       if (!false && project_isNull379) {
/* 8116 */         final InternalRow project_value381 = null;
/* 8117 */         project_isNull377 = true;
/* 8118 */         project_value377 = project_value381;
/* 8119 */       } else {
/* 8120 */         Object project_arg125 = sort_isNull4 ? null : project_converter129.apply(sort_value4);
/* 8121 */
/* 8122 */         Double project_result129 = null;
/* 8123 */         try {
/* 8124 */           project_result129 = (Double)project_catalystConverter129.apply(project_udf129.apply(project_arg125));
/* 8125 */         } catch (Exception e) {
/* 8126 */           throw new org.apache.spark.SparkException(project_scalaUDF129.udfErrorMessage(), e);
/* 8127 */         }
/* 8128 */
/* 8129 */         boolean project_isNull383 = project_result129 == null;
/* 8130 */         double project_value383 = -1.0;
/* 8131 */         if (!project_isNull383) {
/* 8132 */           project_value383 = project_result129;
/* 8133 */         }
/* 8134 */         Object project_arg126 = project_isNull383 ? null : project_converter128.apply(project_value383);
/* 8135 */
/* 8136 */         InternalRow project_result128 = null;
/* 8137 */         try {
/* 8138 */           project_result128 = (InternalRow)project_catalystConverter128.apply(project_udf128.apply(project_arg126));
/* 8139 */         } catch (Exception e) {
/* 8140 */           throw new org.apache.spark.SparkException(project_scalaUDF128.udfErrorMessage(), e);
/* 8141 */         }
/* 8142 */
/* 8143 */         boolean project_isNull382 = project_result128 == null;
/* 8144 */         InternalRow project_value382 = null;
/* 8145 */         if (!project_isNull382) {
/* 8146 */           project_value382 = project_result128;
/* 8147 */         }
/* 8148 */         project_isNull377 = project_isNull382;
/* 8149 */         project_value377 = project_value382;
/* 8150 */       }
/* 8151 */       if (project_isNull377) {
/* 8152 */         project_values2[4] = null;
/* 8153 */       } else {
/* 8154 */         project_values2[4] = project_value377;
/* 8155 */       }
/* 8156 */
/* 8157 */       Object project_arg127 = sort_isNull5 ? null : project_converter130.apply(sort_value5);
/* 8158 */
/* 8159 */       Double project_result130 = null;
/* 8160 */       try {
/* 8161 */         project_result130 = (Double)project_catalystConverter130.apply(project_udf130.apply(project_arg127));
/* 8162 */       } catch (Exception e) {
/* 8163 */         throw new org.apache.spark.SparkException(project_scalaUDF130.udfErrorMessage(), e);
/* 8164 */       }
/* 8165 */
/* 8166 */       boolean project_isNull387 = project_result130 == null;
/* 8167 */       double project_value387 = -1.0;
/* 8168 */       if (!project_isNull387) {
/* 8169 */         project_value387 = project_result130;
/* 8170 */       }
/* 8171 */       boolean project_isNull385 = false;
/* 8172 */       InternalRow project_value385 = null;
/* 8173 */       if (!false && project_isNull387) {
/* 8174 */         final InternalRow project_value389 = null;
/* 8175 */         project_isNull385 = true;
/* 8176 */         project_value385 = project_value389;
/* 8177 */       } else {
/* 8178 */         Object project_arg128 = sort_isNull5 ? null : project_converter132.apply(sort_value5);
/* 8179 */
/* 8180 */         Double project_result132 = null;
/* 8181 */         try {
/* 8182 */           project_result132 = (Double)project_catalystConverter132.apply(project_udf132.apply(project_arg128));
/* 8183 */         } catch (Exception e) {
/* 8184 */           throw new org.apache.spark.SparkException(project_scalaUDF132.udfErrorMessage(), e);
/* 8185 */         }
/* 8186 */
/* 8187 */         boolean project_isNull391 = project_result132 == null;
/* 8188 */         double project_value391 = -1.0;
/* 8189 */         if (!project_isNull391) {
/* 8190 */           project_value391 = project_result132;
/* 8191 */         }
/* 8192 */         Object project_arg129 = project_isNull391 ? null : project_converter131.apply(project_value391);
/* 8193 */
/* 8194 */         InternalRow project_result131 = null;
/* 8195 */         try {
/* 8196 */           project_result131 = (InternalRow)project_catalystConverter131.apply(project_udf131.apply(project_arg129));
/* 8197 */         } catch (Exception e) {
/* 8198 */           throw new org.apache.spark.SparkException(project_scalaUDF131.udfErrorMessage(), e);
/* 8199 */         }
/* 8200 */
/* 8201 */         boolean project_isNull390 = project_result131 == null;
/* 8202 */         InternalRow project_value390 = null;
/* 8203 */         if (!project_isNull390) {
/* 8204 */           project_value390 = project_result131;
/* 8205 */         }
/* 8206 */         project_isNull385 = project_isNull390;
/* 8207 */         project_value385 = project_value390;
/* 8208 */       }
/* 8209 */       if (project_isNull385) {
/* 8210 */         project_values2[5] = null;
/* 8211 */       } else {
/* 8212 */         project_values2[5] = project_value385;
/* 8213 */       }
/* 8214 */
/* 8215 */       if (sort_isNull6) {
/* 8216 */         project_values2[6] = null;
/* 8217 */       } else {
/* 8218 */         project_values2[6] = sort_value6;
/* 8219 */       }
/* 8220 */
/* 8221 */       if (sort_isNull7) {
/* 8222 */         project_values2[7] = null;
/* 8223 */       } else {
/* 8224 */         project_values2[7] = sort_value7;
/* 8225 */       }
/* 8226 */
/* 8227 */       if (sort_isNull8) {
/* 8228 */         project_values2[8] = null;
/* 8229 */       } else {
/* 8230 */         project_values2[8] = sort_value8;
/* 8231 */       }
/* 8232 */
/* 8233 */       if (sort_isNull9) {
/* 8234 */         project_values2[9] = null;
/* 8235 */       } else {
/* 8236 */         project_values2[9] = sort_value9;
/* 8237 */       }
/* 8238 */
/* 8239 */       if (sort_isNull10) {
/* 8240 */         project_values2[10] = null;
/* 8241 */       } else {
/* 8242 */         project_values2[10] = sort_value10;
/* 8243 */       }
/* 8244 */
/* 8245 */       if (sort_isNull11) {
/* 8246 */         project_values2[11] = null;
/* 8247 */       } else {
/* 8248 */         project_values2[11] = sort_value11;
/* 8249 */       }
/* 8250 */
/* 8251 */       if (sort_isNull12) {
/* 8252 */         project_values2[12] = null;
/* 8253 */       } else {
/* 8254 */         project_values2[12] = sort_value12;
/* 8255 */       }
/* 8256 */
/* 8257 */       Object project_arg130 = sort_isNull13 ? null : project_converter133.apply(sort_value13);
/* 8258 */
/* 8259 */       Double project_result133 = null;
/* 8260 */       try {
/* 8261 */         project_result133 = (Double)project_catalystConverter133.apply(project_udf133.apply(project_arg130));
/* 8262 */       } catch (Exception e) {
/* 8263 */         throw new org.apache.spark.SparkException(project_scalaUDF133.udfErrorMessage(), e);
/* 8264 */       }
/* 8265 */
/* 8266 */       boolean project_isNull402 = project_result133 == null;
/* 8267 */       double project_value402 = -1.0;
/* 8268 */       if (!project_isNull402) {
/* 8269 */         project_value402 = project_result133;
/* 8270 */       }
/* 8271 */       boolean project_isNull400 = false;
/* 8272 */       InternalRow project_value400 = null;
/* 8273 */       if (!false && project_isNull402) {
/* 8274 */         final InternalRow project_value404 = null;
/* 8275 */         project_isNull400 = true;
/* 8276 */         project_value400 = project_value404;
/* 8277 */       } else {
/* 8278 */         Object project_arg131 = sort_isNull13 ? null : project_converter135.apply(sort_value13);
/* 8279 */
/* 8280 */         Double project_result135 = null;
/* 8281 */         try {
/* 8282 */           project_result135 = (Double)project_catalystConverter135.apply(project_udf135.apply(project_arg131));
/* 8283 */         } catch (Exception e) {
/* 8284 */           throw new org.apache.spark.SparkException(project_scalaUDF135.udfErrorMessage(), e);
/* 8285 */         }
/* 8286 */
/* 8287 */         boolean project_isNull406 = project_result135 == null;
/* 8288 */         double project_value406 = -1.0;
/* 8289 */         if (!project_isNull406) {
/* 8290 */           project_value406 = project_result135;
/* 8291 */         }
/* 8292 */         Object project_arg132 = project_isNull406 ? null : project_converter134.apply(project_value406);
/* 8293 */
/* 8294 */         InternalRow project_result134 = null;
/* 8295 */         try {
/* 8296 */           project_result134 = (InternalRow)project_catalystConverter134.apply(project_udf134.apply(project_arg132));
/* 8297 */         } catch (Exception e) {
/* 8298 */           throw new org.apache.spark.SparkException(project_scalaUDF134.udfErrorMessage(), e);
/* 8299 */         }
/* 8300 */
/* 8301 */         boolean project_isNull405 = project_result134 == null;
/* 8302 */         InternalRow project_value405 = null;
/* 8303 */         if (!project_isNull405) {
/* 8304 */           project_value405 = project_result134;
/* 8305 */         }
/* 8306 */         project_isNull400 = project_isNull405;
/* 8307 */         project_value400 = project_value405;
/* 8308 */       }
/* 8309 */       if (project_isNull400) {
/* 8310 */         project_values2[13] = null;
/* 8311 */       } else {
/* 8312 */         project_values2[13] = project_value400;
/* 8313 */       }
/* 8314 */
/* 8315 */       Object project_arg133 = sort_isNull14 ? null : project_converter136.apply(sort_value14);
/* 8316 */
/* 8317 */       Double project_result136 = null;
/* 8318 */       try {
/* 8319 */         project_result136 = (Double)project_catalystConverter136.apply(project_udf136.apply(project_arg133));
/* 8320 */       } catch (Exception e) {
/* 8321 */         throw new org.apache.spark.SparkException(project_scalaUDF136.udfErrorMessage(), e);
/* 8322 */       }
/* 8323 */
/* 8324 */       boolean project_isNull410 = project_result136 == null;
/* 8325 */       double project_value410 = -1.0;
/* 8326 */       if (!project_isNull410) {
/* 8327 */         project_value410 = project_result136;
/* 8328 */       }
/* 8329 */       boolean project_isNull408 = false;
/* 8330 */       InternalRow project_value408 = null;
/* 8331 */       if (!false && project_isNull410) {
/* 8332 */         final InternalRow project_value412 = null;
/* 8333 */         project_isNull408 = true;
/* 8334 */         project_value408 = project_value412;
/* 8335 */       } else {
/* 8336 */         Object project_arg134 = sort_isNull14 ? null : project_converter138.apply(sort_value14);
/* 8337 */
/* 8338 */         Double project_result138 = null;
/* 8339 */         try {
/* 8340 */           project_result138 = (Double)project_catalystConverter138.apply(project_udf138.apply(project_arg134));
/* 8341 */         } catch (Exception e) {
/* 8342 */           throw new org.apache.spark.SparkException(project_scalaUDF138.udfErrorMessage(), e);
/* 8343 */         }
/* 8344 */
/* 8345 */         boolean project_isNull414 = project_result138 == null;
/* 8346 */         double project_value414 = -1.0;
/* 8347 */         if (!project_isNull414) {
/* 8348 */           project_value414 = project_result138;
/* 8349 */         }
/* 8350 */         Object project_arg135 = project_isNull414 ? null : project_converter137.apply(project_value414);
/* 8351 */
/* 8352 */         InternalRow project_result137 = null;
/* 8353 */         try {
/* 8354 */           project_result137 = (InternalRow)project_catalystConverter137.apply(project_udf137.apply(project_arg135));
/* 8355 */         } catch (Exception e) {
/* 8356 */           throw new org.apache.spark.SparkException(project_scalaUDF137.udfErrorMessage(), e);
/* 8357 */         }
/* 8358 */
/* 8359 */         boolean project_isNull413 = project_result137 == null;
/* 8360 */         InternalRow project_value413 = null;
/* 8361 */         if (!project_isNull413) {
/* 8362 */           project_value413 = project_result137;
/* 8363 */         }
/* 8364 */         project_isNull408 = project_isNull413;
/* 8365 */         project_value408 = project_value413;
/* 8366 */       }
/* 8367 */       if (project_isNull408) {
/* 8368 */         project_values2[14] = null;
/* 8369 */       } else {
/* 8370 */         project_values2[14] = project_value408;
/* 8371 */       }
/* 8372 */
/* 8373 */       Object project_arg136 = sort_isNull15 ? null : project_converter139.apply(sort_value15);
/* 8374 */
/* 8375 */       Double project_result139 = null;
/* 8376 */       try {
/* 8377 */         project_result139 = (Double)project_catalystConverter139.apply(project_udf139.apply(project_arg136));
/* 8378 */       } catch (Exception e) {
/* 8379 */         throw new org.apache.spark.SparkException(project_scalaUDF139.udfErrorMessage(), e);
/* 8380 */       }
/* 8381 */
/* 8382 */       boolean project_isNull418 = project_result139 == null;
/* 8383 */       double project_value418 = -1.0;
/* 8384 */       if (!project_isNull418) {
/* 8385 */         project_value418 = project_result139;
/* 8386 */       }
/* 8387 */       boolean project_isNull416 = false;
/* 8388 */       InternalRow project_value416 = null;
/* 8389 */       if (!false && project_isNull418) {
/* 8390 */         final InternalRow project_value420 = null;
/* 8391 */         project_isNull416 = true;
/* 8392 */         project_value416 = project_value420;
/* 8393 */       } else {
/* 8394 */         Object project_arg137 = sort_isNull15 ? null : project_converter141.apply(sort_value15);
/* 8395 */
/* 8396 */         Double project_result141 = null;
/* 8397 */         try {
/* 8398 */           project_result141 = (Double)project_catalystConverter141.apply(project_udf141.apply(project_arg137));
/* 8399 */         } catch (Exception e) {
/* 8400 */           throw new org.apache.spark.SparkException(project_scalaUDF141.udfErrorMessage(), e);
/* 8401 */         }
/* 8402 */
/* 8403 */         boolean project_isNull422 = project_result141 == null;
/* 8404 */         double project_value422 = -1.0;
/* 8405 */         if (!project_isNull422) {
/* 8406 */           project_value422 = project_result141;
/* 8407 */         }
/* 8408 */         Object project_arg138 = project_isNull422 ? null : project_converter140.apply(project_value422);
/* 8409 */
/* 8410 */         InternalRow project_result140 = null;
/* 8411 */         try {
/* 8412 */           project_result140 = (InternalRow)project_catalystConverter140.apply(project_udf140.apply(project_arg138));
/* 8413 */         } catch (Exception e) {
/* 8414 */           throw new org.apache.spark.SparkException(project_scalaUDF140.udfErrorMessage(), e);
/* 8415 */         }
/* 8416 */
/* 8417 */         boolean project_isNull421 = project_result140 == null;
/* 8418 */         InternalRow project_value421 = null;
/* 8419 */         if (!project_isNull421) {
/* 8420 */           project_value421 = project_result140;
/* 8421 */         }
/* 8422 */         project_isNull416 = project_isNull421;
/* 8423 */         project_value416 = project_value421;
/* 8424 */       }
/* 8425 */       if (project_isNull416) {
/* 8426 */         project_values2[15] = null;
/* 8427 */       } else {
/* 8428 */         project_values2[15] = project_value416;
/* 8429 */       }
/* 8430 */
/* 8431 */       if (sort_isNull16) {
/* 8432 */         project_values2[16] = null;
/* 8433 */       } else {
/* 8434 */         project_values2[16] = sort_value16;
/* 8435 */       }
/* 8436 */
/* 8437 */       Object project_arg139 = sort_isNull17 ? null : project_converter142.apply(sort_value17);
/* 8438 */
/* 8439 */       Double project_result142 = null;
/* 8440 */       try {
/* 8441 */         project_result142 = (Double)project_catalystConverter142.apply(project_udf142.apply(project_arg139));
/* 8442 */       } catch (Exception e) {
/* 8443 */         throw new org.apache.spark.SparkException(project_scalaUDF142.udfErrorMessage(), e);
/* 8444 */       }
/* 8445 */
/* 8446 */       boolean project_isNull427 = project_result142 == null;
/* 8447 */       double project_value427 = -1.0;
/* 8448 */       if (!project_isNull427) {
/* 8449 */         project_value427 = project_result142;
/* 8450 */       }
/* 8451 */       boolean project_isNull425 = false;
/* 8452 */       InternalRow project_value425 = null;
/* 8453 */       if (!false && project_isNull427) {
/* 8454 */         final InternalRow project_value429 = null;
/* 8455 */         project_isNull425 = true;
/* 8456 */         project_value425 = project_value429;
/* 8457 */       } else {
/* 8458 */         Object project_arg140 = sort_isNull17 ? null : project_converter144.apply(sort_value17);
/* 8459 */
/* 8460 */         Double project_result144 = null;
/* 8461 */         try {
/* 8462 */           project_result144 = (Double)project_catalystConverter144.apply(project_udf144.apply(project_arg140));
/* 8463 */         } catch (Exception e) {
/* 8464 */           throw new org.apache.spark.SparkException(project_scalaUDF144.udfErrorMessage(), e);
/* 8465 */         }
/* 8466 */
/* 8467 */         boolean project_isNull431 = project_result144 == null;
/* 8468 */         double project_value431 = -1.0;
/* 8469 */         if (!project_isNull431) {
/* 8470 */           project_value431 = project_result144;
/* 8471 */         }
/* 8472 */         Object project_arg141 = project_isNull431 ? null : project_converter143.apply(project_value431);
/* 8473 */
/* 8474 */         InternalRow project_result143 = null;
/* 8475 */         try {
/* 8476 */           project_result143 = (InternalRow)project_catalystConverter143.apply(project_udf143.apply(project_arg141));
/* 8477 */         } catch (Exception e) {
/* 8478 */           throw new org.apache.spark.SparkException(project_scalaUDF143.udfErrorMessage(), e);
/* 8479 */         }
/* 8480 */
/* 8481 */         boolean project_isNull430 = project_result143 == null;
/* 8482 */         InternalRow project_value430 = null;
/* 8483 */         if (!project_isNull430) {
/* 8484 */           project_value430 = project_result143;
/* 8485 */         }
/* 8486 */         project_isNull425 = project_isNull430;
/* 8487 */         project_value425 = project_value430;
/* 8488 */       }
/* 8489 */       if (project_isNull425) {
/* 8490 */         project_values2[17] = null;
/* 8491 */       } else {
/* 8492 */         project_values2[17] = project_value425;
/* 8493 */       }
/* 8494 */
/* 8495 */       Object project_arg142 = sort_isNull18 ? null : project_converter145.apply(sort_value18);
/* 8496 */
/* 8497 */       Double project_result145 = null;
/* 8498 */       try {
/* 8499 */         project_result145 = (Double)project_catalystConverter145.apply(project_udf145.apply(project_arg142));
/* 8500 */       } catch (Exception e) {
/* 8501 */         throw new org.apache.spark.SparkException(project_scalaUDF145.udfErrorMessage(), e);
/* 8502 */       }
/* 8503 */
/* 8504 */       boolean project_isNull435 = project_result145 == null;
/* 8505 */       double project_value435 = -1.0;
/* 8506 */       if (!project_isNull435) {
/* 8507 */         project_value435 = project_result145;
/* 8508 */       }
/* 8509 */       boolean project_isNull433 = false;
/* 8510 */       InternalRow project_value433 = null;
/* 8511 */       if (!false && project_isNull435) {
/* 8512 */         final InternalRow project_value437 = null;
/* 8513 */         project_isNull433 = true;
/* 8514 */         project_value433 = project_value437;
/* 8515 */       } else {
/* 8516 */         Object project_arg143 = sort_isNull18 ? null : project_converter147.apply(sort_value18);
/* 8517 */
/* 8518 */         Double project_result147 = null;
/* 8519 */         try {
/* 8520 */           project_result147 = (Double)project_catalystConverter147.apply(project_udf147.apply(project_arg143));
/* 8521 */         } catch (Exception e) {
/* 8522 */           throw new org.apache.spark.SparkException(project_scalaUDF147.udfErrorMessage(), e);
/* 8523 */         }
/* 8524 */
/* 8525 */         boolean project_isNull439 = project_result147 == null;
/* 8526 */         double project_value439 = -1.0;
/* 8527 */         if (!project_isNull439) {
/* 8528 */           project_value439 = project_result147;
/* 8529 */         }
/* 8530 */         Object project_arg144 = project_isNull439 ? null : project_converter146.apply(project_value439);
/* 8531 */
/* 8532 */         InternalRow project_result146 = null;
/* 8533 */         try {
/* 8534 */           project_result146 = (InternalRow)project_catalystConverter146.apply(project_udf146.apply(project_arg144));
/* 8535 */         } catch (Exception e) {
/* 8536 */           throw new org.apache.spark.SparkException(project_scalaUDF146.udfErrorMessage(), e);
/* 8537 */         }
/* 8538 */
/* 8539 */         boolean project_isNull438 = project_result146 == null;
/* 8540 */         InternalRow project_value438 = null;
/* 8541 */         if (!project_isNull438) {
/* 8542 */           project_value438 = project_result146;
/* 8543 */         }
/* 8544 */         project_isNull433 = project_isNull438;
/* 8545 */         project_value433 = project_value438;
/* 8546 */       }
/* 8547 */       if (project_isNull433) {
/* 8548 */         project_values2[18] = null;
/* 8549 */       } else {
/* 8550 */         project_values2[18] = project_value433;
/* 8551 */       }
/* 8552 */
/* 8553 */       Object project_arg145 = sort_isNull19 ? null : project_converter148.apply(sort_value19);
/* 8554 */
/* 8555 */       Double project_result148 = null;
/* 8556 */       try {
/* 8557 */         project_result148 = (Double)project_catalystConverter148.apply(project_udf148.apply(project_arg145));
/* 8558 */       } catch (Exception e) {
/* 8559 */         throw new org.apache.spark.SparkException(project_scalaUDF148.udfErrorMessage(), e);
/* 8560 */       }
/* 8561 */
/* 8562 */       boolean project_isNull443 = project_result148 == null;
/* 8563 */       double project_value443 = -1.0;
/* 8564 */       if (!project_isNull443) {
/* 8565 */         project_value443 = project_result148;
/* 8566 */       }
/* 8567 */       boolean project_isNull441 = false;
/* 8568 */       InternalRow project_value441 = null;
/* 8569 */       if (!false && project_isNull443) {
/* 8570 */         final InternalRow project_value445 = null;
/* 8571 */         project_isNull441 = true;
/* 8572 */         project_value441 = project_value445;
/* 8573 */       } else {
/* 8574 */         Object project_arg146 = sort_isNull19 ? null : project_converter150.apply(sort_value19);
/* 8575 */
/* 8576 */         Double project_result150 = null;
/* 8577 */         try {
/* 8578 */           project_result150 = (Double)project_catalystConverter150.apply(project_udf150.apply(project_arg146));
/* 8579 */         } catch (Exception e) {
/* 8580 */           throw new org.apache.spark.SparkException(project_scalaUDF150.udfErrorMessage(), e);
/* 8581 */         }
/* 8582 */
/* 8583 */         boolean project_isNull447 = project_result150 == null;
/* 8584 */         double project_value447 = -1.0;
/* 8585 */         if (!project_isNull447) {
/* 8586 */           project_value447 = project_result150;
/* 8587 */         }
/* 8588 */         Object project_arg147 = project_isNull447 ? null : project_converter149.apply(project_value447);
/* 8589 */
/* 8590 */         InternalRow project_result149 = null;
/* 8591 */         try {
/* 8592 */           project_result149 = (InternalRow)project_catalystConverter149.apply(project_udf149.apply(project_arg147));
/* 8593 */         } catch (Exception e) {
/* 8594 */           throw new org.apache.spark.SparkException(project_scalaUDF149.udfErrorMessage(), e);
/* 8595 */         }
/* 8596 */
/* 8597 */         boolean project_isNull446 = project_result149 == null;
/* 8598 */         InternalRow project_value446 = null;
/* 8599 */         if (!project_isNull446) {
/* 8600 */           project_value446 = project_result149;
/* 8601 */         }
/* 8602 */         project_isNull441 = project_isNull446;
/* 8603 */         project_value441 = project_value446;
/* 8604 */       }
/* 8605 */       if (project_isNull441) {
/* 8606 */         project_values2[19] = null;
/* 8607 */       } else {
/* 8608 */         project_values2[19] = project_value441;
/* 8609 */       }
/* 8610 */
/* 8611 */       Object project_arg148 = sort_isNull20 ? null : project_converter151.apply(sort_value20);
/* 8612 */
/* 8613 */       Double project_result151 = null;
/* 8614 */       try {
/* 8615 */         project_result151 = (Double)project_catalystConverter151.apply(project_udf151.apply(project_arg148));
/* 8616 */       } catch (Exception e) {
/* 8617 */         throw new org.apache.spark.SparkException(project_scalaUDF151.udfErrorMessage(), e);
/* 8618 */       }
/* 8619 */
/* 8620 */       boolean project_isNull451 = project_result151 == null;
/* 8621 */       double project_value451 = -1.0;
/* 8622 */       if (!project_isNull451) {
/* 8623 */         project_value451 = project_result151;
/* 8624 */       }
/* 8625 */       boolean project_isNull449 = false;
/* 8626 */       InternalRow project_value449 = null;
/* 8627 */       if (!false && project_isNull451) {
/* 8628 */         final InternalRow project_value453 = null;
/* 8629 */         project_isNull449 = true;
/* 8630 */         project_value449 = project_value453;
/* 8631 */       } else {
/* 8632 */         Object project_arg149 = sort_isNull20 ? null : project_converter153.apply(sort_value20);
/* 8633 */
/* 8634 */         Double project_result153 = null;
/* 8635 */         try {
/* 8636 */           project_result153 = (Double)project_catalystConverter153.apply(project_udf153.apply(project_arg149));
/* 8637 */         } catch (Exception e) {
/* 8638 */           throw new org.apache.spark.SparkException(project_scalaUDF153.udfErrorMessage(), e);
/* 8639 */         }
/* 8640 */
/* 8641 */         boolean project_isNull455 = project_result153 == null;
/* 8642 */         double project_value455 = -1.0;
/* 8643 */         if (!project_isNull455) {
/* 8644 */           project_value455 = project_result153;
/* 8645 */         }
/* 8646 */         Object project_arg150 = project_isNull455 ? null : project_converter152.apply(project_value455);
/* 8647 */
/* 8648 */         InternalRow project_result152 = null;
/* 8649 */         try {
/* 8650 */           project_result152 = (InternalRow)project_catalystConverter152.apply(project_udf152.apply(project_arg150));
/* 8651 */         } catch (Exception e) {
/* 8652 */           throw new org.apache.spark.SparkException(project_scalaUDF152.udfErrorMessage(), e);
/* 8653 */         }
/* 8654 */
/* 8655 */         boolean project_isNull454 = project_result152 == null;
/* 8656 */         InternalRow project_value454 = null;
/* 8657 */         if (!project_isNull454) {
/* 8658 */           project_value454 = project_result152;
/* 8659 */         }
/* 8660 */         project_isNull449 = project_isNull454;
/* 8661 */         project_value449 = project_value454;
/* 8662 */       }
/* 8663 */       if (project_isNull449) {
/* 8664 */         project_values2[20] = null;
/* 8665 */       } else {
/* 8666 */         project_values2[20] = project_value449;
/* 8667 */       }
/* 8668 */
/* 8669 */       Object project_arg151 = sort_isNull21 ? null : project_converter154.apply(sort_value21);
/* 8670 */
/* 8671 */       Double project_result154 = null;
/* 8672 */       try {
/* 8673 */         project_result154 = (Double)project_catalystConverter154.apply(project_udf154.apply(project_arg151));
/* 8674 */       } catch (Exception e) {
/* 8675 */         throw new org.apache.spark.SparkException(project_scalaUDF154.udfErrorMessage(), e);
/* 8676 */       }
/* 8677 */
/* 8678 */       boolean project_isNull459 = project_result154 == null;
/* 8679 */       double project_value459 = -1.0;
/* 8680 */       if (!project_isNull459) {
/* 8681 */         project_value459 = project_result154;
/* 8682 */       }
/* 8683 */       boolean project_isNull457 = false;
/* 8684 */       InternalRow project_value457 = null;
/* 8685 */       if (!false && project_isNull459) {
/* 8686 */         final InternalRow project_value461 = null;
/* 8687 */         project_isNull457 = true;
/* 8688 */         project_value457 = project_value461;
/* 8689 */       } else {
/* 8690 */         Object project_arg152 = sort_isNull21 ? null : project_converter156.apply(sort_value21);
/* 8691 */
/* 8692 */         Double project_result156 = null;
/* 8693 */         try {
/* 8694 */           project_result156 = (Double)project_catalystConverter156.apply(project_udf156.apply(project_arg152));
/* 8695 */         } catch (Exception e) {
/* 8696 */           throw new org.apache.spark.SparkException(project_scalaUDF156.udfErrorMessage(), e);
/* 8697 */         }
/* 8698 */
/* 8699 */         boolean project_isNull463 = project_result156 == null;
/* 8700 */         double project_value463 = -1.0;
/* 8701 */         if (!project_isNull463) {
/* 8702 */           project_value463 = project_result156;
/* 8703 */         }
/* 8704 */         Object project_arg153 = project_isNull463 ? null : project_converter155.apply(project_value463);
/* 8705 */
/* 8706 */         InternalRow project_result155 = null;
/* 8707 */         try {
/* 8708 */           project_result155 = (InternalRow)project_catalystConverter155.apply(project_udf155.apply(project_arg153));
/* 8709 */         } catch (Exception e) {
/* 8710 */           throw new org.apache.spark.SparkException(project_scalaUDF155.udfErrorMessage(), e);
/* 8711 */         }
/* 8712 */
/* 8713 */         boolean project_isNull462 = project_result155 == null;
/* 8714 */         InternalRow project_value462 = null;
/* 8715 */         if (!project_isNull462) {
/* 8716 */           project_value462 = project_result155;
/* 8717 */         }
/* 8718 */         project_isNull457 = project_isNull462;
/* 8719 */         project_value457 = project_value462;
/* 8720 */       }
/* 8721 */       if (project_isNull457) {
/* 8722 */         project_values2[21] = null;
/* 8723 */       } else {
/* 8724 */         project_values2[21] = project_value457;
/* 8725 */       }
/* 8726 */
/* 8727 */       Object project_arg154 = sort_isNull22 ? null : project_converter157.apply(sort_value22);
/* 8728 */
/* 8729 */       Double project_result157 = null;
/* 8730 */       try {
/* 8731 */         project_result157 = (Double)project_catalystConverter157.apply(project_udf157.apply(project_arg154));
/* 8732 */       } catch (Exception e) {
/* 8733 */         throw new org.apache.spark.SparkException(project_scalaUDF157.udfErrorMessage(), e);
/* 8734 */       }
/* 8735 */
/* 8736 */       boolean project_isNull467 = project_result157 == null;
/* 8737 */       double project_value467 = -1.0;
/* 8738 */       if (!project_isNull467) {
/* 8739 */         project_value467 = project_result157;
/* 8740 */       }
/* 8741 */       boolean project_isNull465 = false;
/* 8742 */       InternalRow project_value465 = null;
/* 8743 */       if (!false && project_isNull467) {
/* 8744 */         final InternalRow project_value469 = null;
/* 8745 */         project_isNull465 = true;
/* 8746 */         project_value465 = project_value469;
/* 8747 */       } else {
/* 8748 */         Object project_arg155 = sort_isNull22 ? null : project_converter159.apply(sort_value22);
/* 8749 */
/* 8750 */         Double project_result159 = null;
/* 8751 */         try {
/* 8752 */           project_result159 = (Double)project_catalystConverter159.apply(project_udf159.apply(project_arg155));
/* 8753 */         } catch (Exception e) {
/* 8754 */           throw new org.apache.spark.SparkException(project_scalaUDF159.udfErrorMessage(), e);
/* 8755 */         }
/* 8756 */
/* 8757 */         boolean project_isNull471 = project_result159 == null;
/* 8758 */         double project_value471 = -1.0;
/* 8759 */         if (!project_isNull471) {
/* 8760 */           project_value471 = project_result159;
/* 8761 */         }
/* 8762 */         Object project_arg156 = project_isNull471 ? null : project_converter158.apply(project_value471);
/* 8763 */
/* 8764 */         InternalRow project_result158 = null;
/* 8765 */         try {
/* 8766 */           project_result158 = (InternalRow)project_catalystConverter158.apply(project_udf158.apply(project_arg156));
/* 8767 */         } catch (Exception e) {
/* 8768 */           throw new org.apache.spark.SparkException(project_scalaUDF158.udfErrorMessage(), e);
/* 8769 */         }
/* 8770 */
/* 8771 */         boolean project_isNull470 = project_result158 == null;
/* 8772 */         InternalRow project_value470 = null;
/* 8773 */         if (!project_isNull470) {
/* 8774 */           project_value470 = project_result158;
/* 8775 */         }
/* 8776 */         project_isNull465 = project_isNull470;
/* 8777 */         project_value465 = project_value470;
/* 8778 */       }
/* 8779 */       if (project_isNull465) {
/* 8780 */         project_values2[22] = null;
/* 8781 */       } else {
/* 8782 */         project_values2[22] = project_value465;
/* 8783 */       }
/* 8784 */
/* 8785 */       Object project_arg157 = sort_isNull23 ? null : project_converter160.apply(sort_value23);
/* 8786 */
/* 8787 */       Double project_result160 = null;
/* 8788 */       try {
/* 8789 */         project_result160 = (Double)project_catalystConverter160.apply(project_udf160.apply(project_arg157));
/* 8790 */       } catch (Exception e) {
/* 8791 */         throw new org.apache.spark.SparkException(project_scalaUDF160.udfErrorMessage(), e);
/* 8792 */       }
/* 8793 */
/* 8794 */       boolean project_isNull475 = project_result160 == null;
/* 8795 */       double project_value475 = -1.0;
/* 8796 */       if (!project_isNull475) {
/* 8797 */         project_value475 = project_result160;
/* 8798 */       }
/* 8799 */       boolean project_isNull473 = false;
/* 8800 */       InternalRow project_value473 = null;
/* 8801 */       if (!false && project_isNull475) {
/* 8802 */         final InternalRow project_value477 = null;
/* 8803 */         project_isNull473 = true;
/* 8804 */         project_value473 = project_value477;
/* 8805 */       } else {
/* 8806 */         Object project_arg158 = sort_isNull23 ? null : project_converter162.apply(sort_value23);
/* 8807 */
/* 8808 */         Double project_result162 = null;
/* 8809 */         try {
/* 8810 */           project_result162 = (Double)project_catalystConverter162.apply(project_udf162.apply(project_arg158));
/* 8811 */         } catch (Exception e) {
/* 8812 */           throw new org.apache.spark.SparkException(project_scalaUDF162.udfErrorMessage(), e);
/* 8813 */         }
/* 8814 */
/* 8815 */         boolean project_isNull479 = project_result162 == null;
/* 8816 */         double project_value479 = -1.0;
/* 8817 */         if (!project_isNull479) {
/* 8818 */           project_value479 = project_result162;
/* 8819 */         }
/* 8820 */         Object project_arg159 = project_isNull479 ? null : project_converter161.apply(project_value479);
/* 8821 */
/* 8822 */         InternalRow project_result161 = null;
/* 8823 */         try {
/* 8824 */           project_result161 = (InternalRow)project_catalystConverter161.apply(project_udf161.apply(project_arg159));
/* 8825 */         } catch (Exception e) {
/* 8826 */           throw new org.apache.spark.SparkException(project_scalaUDF161.udfErrorMessage(), e);
/* 8827 */         }
/* 8828 */
/* 8829 */         boolean project_isNull478 = project_result161 == null;
/* 8830 */         InternalRow project_value478 = null;
/* 8831 */         if (!project_isNull478) {
/* 8832 */           project_value478 = project_result161;
/* 8833 */         }
/* 8834 */         project_isNull473 = project_isNull478;
/* 8835 */         project_value473 = project_value478;
/* 8836 */       }
/* 8837 */       if (project_isNull473) {
/* 8838 */         project_values2[23] = null;
/* 8839 */       } else {
/* 8840 */         project_values2[23] = project_value473;
/* 8841 */       }
/* 8842 */
/* 8843 */       Object project_arg160 = sort_isNull24 ? null : project_converter163.apply(sort_value24);
/* 8844 */
/* 8845 */       Double project_result163 = null;
/* 8846 */       try {
/* 8847 */         project_result163 = (Double)project_catalystConverter163.apply(project_udf163.apply(project_arg160));
/* 8848 */       } catch (Exception e) {
/* 8849 */         throw new org.apache.spark.SparkException(project_scalaUDF163.udfErrorMessage(), e);
/* 8850 */       }
/* 8851 */
/* 8852 */       boolean project_isNull483 = project_result163 == null;
/* 8853 */       double project_value483 = -1.0;
/* 8854 */       if (!project_isNull483) {
/* 8855 */         project_value483 = project_result163;
/* 8856 */       }
/* 8857 */       boolean project_isNull481 = false;
/* 8858 */       InternalRow project_value481 = null;
/* 8859 */       if (!false && project_isNull483) {
/* 8860 */         final InternalRow project_value485 = null;
/* 8861 */         project_isNull481 = true;
/* 8862 */         project_value481 = project_value485;
/* 8863 */       } else {
/* 8864 */         Object project_arg161 = sort_isNull24 ? null : project_converter165.apply(sort_value24);
/* 8865 */
/* 8866 */         Double project_result165 = null;
/* 8867 */         try {
/* 8868 */           project_result165 = (Double)project_catalystConverter165.apply(project_udf165.apply(project_arg161));
/* 8869 */         } catch (Exception e) {
/* 8870 */           throw new org.apache.spark.SparkException(project_scalaUDF165.udfErrorMessage(), e);
/* 8871 */         }
/* 8872 */
/* 8873 */         boolean project_isNull487 = project_result165 == null;
/* 8874 */         double project_value487 = -1.0;
/* 8875 */         if (!project_isNull487) {
/* 8876 */           project_value487 = project_result165;
/* 8877 */         }
/* 8878 */         Object project_arg162 = project_isNull487 ? null : project_converter164.apply(project_value487);
/* 8879 */
/* 8880 */         InternalRow project_result164 = null;
/* 8881 */         try {
/* 8882 */           project_result164 = (InternalRow)project_catalystConverter164.apply(project_udf164.apply(project_arg162));
/* 8883 */         } catch (Exception e) {
/* 8884 */           throw new org.apache.spark.SparkException(project_scalaUDF164.udfErrorMessage(), e);
/* 8885 */         }
/* 8886 */
/* 8887 */         boolean project_isNull486 = project_result164 == null;
/* 8888 */         InternalRow project_value486 = null;
/* 8889 */         if (!project_isNull486) {
/* 8890 */           project_value486 = project_result164;
/* 8891 */         }
/* 8892 */         project_isNull481 = project_isNull486;
/* 8893 */         project_value481 = project_value486;
/* 8894 */       }
/* 8895 */       if (project_isNull481) {
/* 8896 */         project_values2[24] = null;
/* 8897 */       } else {
/* 8898 */         project_values2[24] = project_value481;
/* 8899 */       }
/* 8900 */
/* 8901 */       Object project_arg163 = sort_isNull25 ? null : project_converter166.apply(sort_value25);
/* 8902 */
/* 8903 */       Double project_result166 = null;
/* 8904 */       try {
/* 8905 */         project_result166 = (Double)project_catalystConverter166.apply(project_udf166.apply(project_arg163));
/* 8906 */       } catch (Exception e) {
/* 8907 */         throw new org.apache.spark.SparkException(project_scalaUDF166.udfErrorMessage(), e);
/* 8908 */       }
/* 8909 */
/* 8910 */       boolean project_isNull491 = project_result166 == null;
/* 8911 */       double project_value491 = -1.0;
/* 8912 */       if (!project_isNull491) {
/* 8913 */         project_value491 = project_result166;
/* 8914 */       }
/* 8915 */       boolean project_isNull489 = false;
/* 8916 */       InternalRow project_value489 = null;
/* 8917 */       if (!false && project_isNull491) {
/* 8918 */         final InternalRow project_value493 = null;
/* 8919 */         project_isNull489 = true;
/* 8920 */         project_value489 = project_value493;
/* 8921 */       } else {
/* 8922 */         Object project_arg164 = sort_isNull25 ? null : project_converter168.apply(sort_value25);
/* 8923 */
/* 8924 */         Double project_result168 = null;
/* 8925 */         try {
/* 8926 */           project_result168 = (Double)project_catalystConverter168.apply(project_udf168.apply(project_arg164));
/* 8927 */         } catch (Exception e) {
/* 8928 */           throw new org.apache.spark.SparkException(project_scalaUDF168.udfErrorMessage(), e);
/* 8929 */         }
/* 8930 */
/* 8931 */         boolean project_isNull495 = project_result168 == null;
/* 8932 */         double project_value495 = -1.0;
/* 8933 */         if (!project_isNull495) {
/* 8934 */           project_value495 = project_result168;
/* 8935 */         }
/* 8936 */         Object project_arg165 = project_isNull495 ? null : project_converter167.apply(project_value495);
/* 8937 */
/* 8938 */         InternalRow project_result167 = null;
/* 8939 */         try {
/* 8940 */           project_result167 = (InternalRow)project_catalystConverter167.apply(project_udf167.apply(project_arg165));
/* 8941 */         } catch (Exception e) {
/* 8942 */           throw new org.apache.spark.SparkException(project_scalaUDF167.udfErrorMessage(), e);
/* 8943 */         }
/* 8944 */
/* 8945 */         boolean project_isNull494 = project_result167 == null;
/* 8946 */         InternalRow project_value494 = null;
/* 8947 */         if (!project_isNull494) {
/* 8948 */           project_value494 = project_result167;
/* 8949 */         }
/* 8950 */         project_isNull489 = project_isNull494;
/* 8951 */         project_value489 = project_value494;
/* 8952 */       }
/* 8953 */       if (project_isNull489) {
/* 8954 */         project_values2[25] = null;
/* 8955 */       } else {
/* 8956 */         project_values2[25] = project_value489;
/* 8957 */       }
/* 8958 */
/* 8959 */       if (sort_isNull27) {
/* 8960 */         project_values2[26] = null;
/* 8961 */       } else {
/* 8962 */         project_values2[26] = sort_value27;
/* 8963 */       }
/* 8964 */       final InternalRow project_value344 = new org.apache.spark.sql.catalyst.expressions.GenericInternalRow(project_values2);
/* 8965 */       this.project_values2 = null;
/* 8966 */       Object project_arg166 = false ? null : project_converter114.apply(project_value344);
/* 8967 */
/* 8968 */       InternalRow project_result114 = null;
/* 8969 */       try {
/* 8970 */         project_result114 = (InternalRow)project_catalystConverter114.apply(project_udf114.apply(project_arg166));
/* 8971 */       } catch (Exception e) {
/* 8972 */         throw new org.apache.spark.SparkException(project_scalaUDF114.udfErrorMessage(), e);
/* 8973 */       }
/* 8974 */
/* 8975 */       boolean project_isNull343 = project_result114 == null;
/* 8976 */       InternalRow project_value343 = null;
/* 8977 */       if (!project_isNull343) {
/* 8978 */         project_value343 = project_result114;
/* 8979 */       }
/* 8980 */       Object project_arg167 = project_isNull343 ? null : project_converter113.apply(project_value343);
/* 8981 */
/* 8982 */       InternalRow project_result113 = null;
/* 8983 */       try {
/* 8984 */         project_result113 = (InternalRow)project_catalystConverter113.apply(project_udf113.apply(project_arg167));
/* 8985 */       } catch (Exception e) {
/* 8986 */         throw new org.apache.spark.SparkException(project_scalaUDF113.udfErrorMessage(), e);
/* 8987 */       }
/* 8988 */
/* 8989 */       boolean project_isNull342 = project_result113 == null;
/* 8990 */       InternalRow project_value342 = null;
/* 8991 */       if (!project_isNull342) {
/* 8992 */         project_value342 = project_result113;
/* 8993 */       }
/* 8994 */       Object project_arg168 = project_isNull342 ? null : project_converter112.apply(project_value342);
/* 8995 */
/* 8996 */       InternalRow project_result112 = null;
/* 8997 */       try {
/* 8998 */         project_result112 = (InternalRow)project_catalystConverter112.apply(project_udf112.apply(project_arg168));
/* 8999 */       } catch (Exception e) {
/* 9000 */         throw new org.apache.spark.SparkException(project_scalaUDF112.udfErrorMessage(), e);
/* 9001 */       }
/* 9002 */
/* 9003 */       boolean project_isNull341 = project_result112 == null;
/* 9004 */       InternalRow project_value341 = null;
/* 9005 */       if (!project_isNull341) {
/* 9006 */         project_value341 = project_result112;
/* 9007 */       }
/* 9008 */       project_values3 = new Object[27];
/* 9009 */       Object project_arg169 = sort_isNull ? null : project_converter172.apply(sort_value);
/* 9010 */
/* 9011 */       Double project_result172 = null;
/* 9012 */       try {
/* 9013 */         project_result172 = (Double)project_catalystConverter172.apply(project_udf172.apply(project_arg169));
/* 9014 */       } catch (Exception e) {
/* 9015 */         throw new org.apache.spark.SparkException(project_scalaUDF172.udfErrorMessage(), e);
/* 9016 */       }
/* 9017 */
/* 9018 */       boolean project_isNull504 = project_result172 == null;
/* 9019 */       double project_value504 = -1.0;
/* 9020 */       if (!project_isNull504) {
/* 9021 */         project_value504 = project_result172;
/* 9022 */       }
/* 9023 */       boolean project_isNull502 = false;
/* 9024 */       InternalRow project_value502 = null;
/* 9025 */       if (!false && project_isNull504) {
/* 9026 */         final InternalRow project_value506 = null;
/* 9027 */         project_isNull502 = true;
/* 9028 */         project_value502 = project_value506;
/* 9029 */       } else {
/* 9030 */         Object project_arg170 = sort_isNull ? null : project_converter174.apply(sort_value);
/* 9031 */
/* 9032 */         Double project_result174 = null;
/* 9033 */         try {
/* 9034 */           project_result174 = (Double)project_catalystConverter174.apply(project_udf174.apply(project_arg170));
/* 9035 */         } catch (Exception e) {
/* 9036 */           throw new org.apache.spark.SparkException(project_scalaUDF174.udfErrorMessage(), e);
/* 9037 */         }
/* 9038 */
/* 9039 */         boolean project_isNull508 = project_result174 == null;
/* 9040 */         double project_value508 = -1.0;
/* 9041 */         if (!project_isNull508) {
/* 9042 */           project_value508 = project_result174;
/* 9043 */         }
/* 9044 */         Object project_arg171 = project_isNull508 ? null : project_converter173.apply(project_value508);
/* 9045 */
/* 9046 */         InternalRow project_result173 = null;
/* 9047 */         try {
/* 9048 */           project_result173 = (InternalRow)project_catalystConverter173.apply(project_udf173.apply(project_arg171));
/* 9049 */         } catch (Exception e) {
/* 9050 */           throw new org.apache.spark.SparkException(project_scalaUDF173.udfErrorMessage(), e);
/* 9051 */         }
/* 9052 */
/* 9053 */         boolean project_isNull507 = project_result173 == null;
/* 9054 */         InternalRow project_value507 = null;
/* 9055 */         if (!project_isNull507) {
/* 9056 */           project_value507 = project_result173;
/* 9057 */         }
/* 9058 */         project_isNull502 = project_isNull507;
/* 9059 */         project_value502 = project_value507;
/* 9060 */       }
/* 9061 */       if (project_isNull502) {
/* 9062 */         project_values3[0] = null;
/* 9063 */       } else {
/* 9064 */         project_values3[0] = project_value502;
/* 9065 */       }
/* 9066 */
/* 9067 */       Object project_arg172 = sort_isNull1 ? null : project_converter175.apply(sort_value1);
/* 9068 */
/* 9069 */       Double project_result175 = null;
/* 9070 */       try {
/* 9071 */         project_result175 = (Double)project_catalystConverter175.apply(project_udf175.apply(project_arg172));
/* 9072 */       } catch (Exception e) {
/* 9073 */         throw new org.apache.spark.SparkException(project_scalaUDF175.udfErrorMessage(), e);
/* 9074 */       }
/* 9075 */
/* 9076 */       boolean project_isNull512 = project_result175 == null;
/* 9077 */       double project_value512 = -1.0;
/* 9078 */       if (!project_isNull512) {
/* 9079 */         project_value512 = project_result175;
/* 9080 */       }
/* 9081 */       boolean project_isNull510 = false;
/* 9082 */       InternalRow project_value510 = null;
/* 9083 */       if (!false && project_isNull512) {
/* 9084 */         final InternalRow project_value514 = null;
/* 9085 */         project_isNull510 = true;
/* 9086 */         project_value510 = project_value514;
/* 9087 */       } else {
/* 9088 */         Object project_arg173 = sort_isNull1 ? null : project_converter177.apply(sort_value1);
/* 9089 */
/* 9090 */         Double project_result177 = null;
/* 9091 */         try {
/* 9092 */           project_result177 = (Double)project_catalystConverter177.apply(project_udf177.apply(project_arg173));
/* 9093 */         } catch (Exception e) {
/* 9094 */           throw new org.apache.spark.SparkException(project_scalaUDF177.udfErrorMessage(), e);
/* 9095 */         }
/* 9096 */
/* 9097 */         boolean project_isNull516 = project_result177 == null;
/* 9098 */         double project_value516 = -1.0;
/* 9099 */         if (!project_isNull516) {
/* 9100 */           project_value516 = project_result177;
/* 9101 */         }
/* 9102 */         Object project_arg174 = project_isNull516 ? null : project_converter176.apply(project_value516);
/* 9103 */
/* 9104 */         InternalRow project_result176 = null;
/* 9105 */         try {
/* 9106 */           project_result176 = (InternalRow)project_catalystConverter176.apply(project_udf176.apply(project_arg174));
/* 9107 */         } catch (Exception e) {
/* 9108 */           throw new org.apache.spark.SparkException(project_scalaUDF176.udfErrorMessage(), e);
/* 9109 */         }
/* 9110 */
/* 9111 */         boolean project_isNull515 = project_result176 == null;
/* 9112 */         InternalRow project_value515 = null;
/* 9113 */         if (!project_isNull515) {
/* 9114 */           project_value515 = project_result176;
/* 9115 */         }
/* 9116 */         project_isNull510 = project_isNull515;
/* 9117 */         project_value510 = project_value515;
/* 9118 */       }
/* 9119 */       if (project_isNull510) {
/* 9120 */         project_values3[1] = null;
/* 9121 */       } else {
/* 9122 */         project_values3[1] = project_value510;
/* 9123 */       }
/* 9124 */
/* 9125 */       Object project_arg175 = sort_isNull2 ? null : project_converter178.apply(sort_value2);
/* 9126 */
/* 9127 */       Double project_result178 = null;
/* 9128 */       try {
/* 9129 */         project_result178 = (Double)project_catalystConverter178.apply(project_udf178.apply(project_arg175));
/* 9130 */       } catch (Exception e) {
/* 9131 */         throw new org.apache.spark.SparkException(project_scalaUDF178.udfErrorMessage(), e);
/* 9132 */       }
/* 9133 */
/* 9134 */       boolean project_isNull520 = project_result178 == null;
/* 9135 */       double project_value520 = -1.0;
/* 9136 */       if (!project_isNull520) {
/* 9137 */         project_value520 = project_result178;
/* 9138 */       }
/* 9139 */       boolean project_isNull518 = false;
/* 9140 */       InternalRow project_value518 = null;
/* 9141 */       if (!false && project_isNull520) {
/* 9142 */         final InternalRow project_value522 = null;
/* 9143 */         project_isNull518 = true;
/* 9144 */         project_value518 = project_value522;
/* 9145 */       } else {
/* 9146 */         Object project_arg176 = sort_isNull2 ? null : project_converter180.apply(sort_value2);
/* 9147 */
/* 9148 */         Double project_result180 = null;
/* 9149 */         try {
/* 9150 */           project_result180 = (Double)project_catalystConverter180.apply(project_udf180.apply(project_arg176));
/* 9151 */         } catch (Exception e) {
/* 9152 */           throw new org.apache.spark.SparkException(project_scalaUDF180.udfErrorMessage(), e);
/* 9153 */         }
/* 9154 */
/* 9155 */         boolean project_isNull524 = project_result180 == null;
/* 9156 */         double project_value524 = -1.0;
/* 9157 */         if (!project_isNull524) {
/* 9158 */           project_value524 = project_result180;
/* 9159 */         }
/* 9160 */         Object project_arg177 = project_isNull524 ? null : project_converter179.apply(project_value524);
/* 9161 */
/* 9162 */         InternalRow project_result179 = null;
/* 9163 */         try {
/* 9164 */           project_result179 = (InternalRow)project_catalystConverter179.apply(project_udf179.apply(project_arg177));
/* 9165 */         } catch (Exception e) {
/* 9166 */           throw new org.apache.spark.SparkException(project_scalaUDF179.udfErrorMessage(), e);
/* 9167 */         }
/* 9168 */
/* 9169 */         boolean project_isNull523 = project_result179 == null;
/* 9170 */         InternalRow project_value523 = null;
/* 9171 */         if (!project_isNull523) {
/* 9172 */           project_value523 = project_result179;
/* 9173 */         }
/* 9174 */         project_isNull518 = project_isNull523;
/* 9175 */         project_value518 = project_value523;
/* 9176 */       }
/* 9177 */       if (project_isNull518) {
/* 9178 */         project_values3[2] = null;
/* 9179 */       } else {
/* 9180 */         project_values3[2] = project_value518;
/* 9181 */       }
/* 9182 */
/* 9183 */       Object project_arg178 = sort_isNull3 ? null : project_converter181.apply(sort_value3);
/* 9184 */
/* 9185 */       Double project_result181 = null;
/* 9186 */       try {
/* 9187 */         project_result181 = (Double)project_catalystConverter181.apply(project_udf181.apply(project_arg178));
/* 9188 */       } catch (Exception e) {
/* 9189 */         throw new org.apache.spark.SparkException(project_scalaUDF181.udfErrorMessage(), e);
/* 9190 */       }
/* 9191 */
/* 9192 */       boolean project_isNull528 = project_result181 == null;
/* 9193 */       double project_value528 = -1.0;
/* 9194 */       if (!project_isNull528) {
/* 9195 */         project_value528 = project_result181;
/* 9196 */       }
/* 9197 */       boolean project_isNull526 = false;
/* 9198 */       InternalRow project_value526 = null;
/* 9199 */       if (!false && project_isNull528) {
/* 9200 */         final InternalRow project_value530 = null;
/* 9201 */         project_isNull526 = true;
/* 9202 */         project_value526 = project_value530;
/* 9203 */       } else {
/* 9204 */         Object project_arg179 = sort_isNull3 ? null : project_converter183.apply(sort_value3);
/* 9205 */
/* 9206 */         Double project_result183 = null;
/* 9207 */         try {
/* 9208 */           project_result183 = (Double)project_catalystConverter183.apply(project_udf183.apply(project_arg179));
/* 9209 */         } catch (Exception e) {
/* 9210 */           throw new org.apache.spark.SparkException(project_scalaUDF183.udfErrorMessage(), e);
/* 9211 */         }
/* 9212 */
/* 9213 */         boolean project_isNull532 = project_result183 == null;
/* 9214 */         double project_value532 = -1.0;
/* 9215 */         if (!project_isNull532) {
/* 9216 */           project_value532 = project_result183;
/* 9217 */         }
/* 9218 */         Object project_arg180 = project_isNull532 ? null : project_converter182.apply(project_value532);
/* 9219 */
/* 9220 */         InternalRow project_result182 = null;
/* 9221 */         try {
/* 9222 */           project_result182 = (InternalRow)project_catalystConverter182.apply(project_udf182.apply(project_arg180));
/* 9223 */         } catch (Exception e) {
/* 9224 */           throw new org.apache.spark.SparkException(project_scalaUDF182.udfErrorMessage(), e);
/* 9225 */         }
/* 9226 */
/* 9227 */         boolean project_isNull531 = project_result182 == null;
/* 9228 */         InternalRow project_value531 = null;
/* 9229 */         if (!project_isNull531) {
/* 9230 */           project_value531 = project_result182;
/* 9231 */         }
/* 9232 */         project_isNull526 = project_isNull531;
/* 9233 */         project_value526 = project_value531;
/* 9234 */       }
/* 9235 */       if (project_isNull526) {
/* 9236 */         project_values3[3] = null;
/* 9237 */       } else {
/* 9238 */         project_values3[3] = project_value526;
/* 9239 */       }
/* 9240 */
/* 9241 */       Object project_arg181 = sort_isNull4 ? null : project_converter184.apply(sort_value4);
/* 9242 */
/* 9243 */       Double project_result184 = null;
/* 9244 */       try {
/* 9245 */         project_result184 = (Double)project_catalystConverter184.apply(project_udf184.apply(project_arg181));
/* 9246 */       } catch (Exception e) {
/* 9247 */         throw new org.apache.spark.SparkException(project_scalaUDF184.udfErrorMessage(), e);
/* 9248 */       }
/* 9249 */
/* 9250 */       boolean project_isNull536 = project_result184 == null;
/* 9251 */       double project_value536 = -1.0;
/* 9252 */       if (!project_isNull536) {
/* 9253 */         project_value536 = project_result184;
/* 9254 */       }
/* 9255 */       boolean project_isNull534 = false;
/* 9256 */       InternalRow project_value534 = null;
/* 9257 */       if (!false && project_isNull536) {
/* 9258 */         final InternalRow project_value538 = null;
/* 9259 */         project_isNull534 = true;
/* 9260 */         project_value534 = project_value538;
/* 9261 */       } else {
/* 9262 */         Object project_arg182 = sort_isNull4 ? null : project_converter186.apply(sort_value4);
/* 9263 */
/* 9264 */         Double project_result186 = null;
/* 9265 */         try {
/* 9266 */           project_result186 = (Double)project_catalystConverter186.apply(project_udf186.apply(project_arg182));
/* 9267 */         } catch (Exception e) {
/* 9268 */           throw new org.apache.spark.SparkException(project_scalaUDF186.udfErrorMessage(), e);
/* 9269 */         }
/* 9270 */
/* 9271 */         boolean project_isNull540 = project_result186 == null;
/* 9272 */         double project_value540 = -1.0;
/* 9273 */         if (!project_isNull540) {
/* 9274 */           project_value540 = project_result186;
/* 9275 */         }
/* 9276 */         Object project_arg183 = project_isNull540 ? null : project_converter185.apply(project_value540);
/* 9277 */
/* 9278 */         InternalRow project_result185 = null;
/* 9279 */         try {
/* 9280 */           project_result185 = (InternalRow)project_catalystConverter185.apply(project_udf185.apply(project_arg183));
/* 9281 */         } catch (Exception e) {
/* 9282 */           throw new org.apache.spark.SparkException(project_scalaUDF185.udfErrorMessage(), e);
/* 9283 */         }
/* 9284 */
/* 9285 */         boolean project_isNull539 = project_result185 == null;
/* 9286 */         InternalRow project_value539 = null;
/* 9287 */         if (!project_isNull539) {
/* 9288 */           project_value539 = project_result185;
/* 9289 */         }
/* 9290 */         project_isNull534 = project_isNull539;
/* 9291 */         project_value534 = project_value539;
/* 9292 */       }
/* 9293 */       if (project_isNull534) {
/* 9294 */         project_values3[4] = null;
/* 9295 */       } else {
/* 9296 */         project_values3[4] = project_value534;
/* 9297 */       }
/* 9298 */
/* 9299 */       Object project_arg184 = sort_isNull5 ? null : project_converter187.apply(sort_value5);
/* 9300 */
/* 9301 */       Double project_result187 = null;
/* 9302 */       try {
/* 9303 */         project_result187 = (Double)project_catalystConverter187.apply(project_udf187.apply(project_arg184));
/* 9304 */       } catch (Exception e) {
/* 9305 */         throw new org.apache.spark.SparkException(project_scalaUDF187.udfErrorMessage(), e);
/* 9306 */       }
/* 9307 */
/* 9308 */       boolean project_isNull544 = project_result187 == null;
/* 9309 */       double project_value544 = -1.0;
/* 9310 */       if (!project_isNull544) {
/* 9311 */         project_value544 = project_result187;
/* 9312 */       }
/* 9313 */       boolean project_isNull542 = false;
/* 9314 */       InternalRow project_value542 = null;
/* 9315 */       if (!false && project_isNull544) {
/* 9316 */         final InternalRow project_value546 = null;
/* 9317 */         project_isNull542 = true;
/* 9318 */         project_value542 = project_value546;
/* 9319 */       } else {
/* 9320 */         Object project_arg185 = sort_isNull5 ? null : project_converter189.apply(sort_value5);
/* 9321 */
/* 9322 */         Double project_result189 = null;
/* 9323 */         try {
/* 9324 */           project_result189 = (Double)project_catalystConverter189.apply(project_udf189.apply(project_arg185));
/* 9325 */         } catch (Exception e) {
/* 9326 */           throw new org.apache.spark.SparkException(project_scalaUDF189.udfErrorMessage(), e);
/* 9327 */         }
/* 9328 */
/* 9329 */         boolean project_isNull548 = project_result189 == null;
/* 9330 */         double project_value548 = -1.0;
/* 9331 */         if (!project_isNull548) {
/* 9332 */           project_value548 = project_result189;
/* 9333 */         }
/* 9334 */         Object project_arg186 = project_isNull548 ? null : project_converter188.apply(project_value548);
/* 9335 */
/* 9336 */         InternalRow project_result188 = null;
/* 9337 */         try {
/* 9338 */           project_result188 = (InternalRow)project_catalystConverter188.apply(project_udf188.apply(project_arg186));
/* 9339 */         } catch (Exception e) {
/* 9340 */           throw new org.apache.spark.SparkException(project_scalaUDF188.udfErrorMessage(), e);
/* 9341 */         }
/* 9342 */
/* 9343 */         boolean project_isNull547 = project_result188 == null;
/* 9344 */         InternalRow project_value547 = null;
/* 9345 */         if (!project_isNull547) {
/* 9346 */           project_value547 = project_result188;
/* 9347 */         }
/* 9348 */         project_isNull542 = project_isNull547;
/* 9349 */         project_value542 = project_value547;
/* 9350 */       }
/* 9351 */       if (project_isNull542) {
/* 9352 */         project_values3[5] = null;
/* 9353 */       } else {
/* 9354 */         project_values3[5] = project_value542;
/* 9355 */       }
/* 9356 */
/* 9357 */       if (sort_isNull6) {
/* 9358 */         project_values3[6] = null;
/* 9359 */       } else {
/* 9360 */         project_values3[6] = sort_value6;
/* 9361 */       }
/* 9362 */
/* 9363 */       if (sort_isNull7) {
/* 9364 */         project_values3[7] = null;
/* 9365 */       } else {
/* 9366 */         project_values3[7] = sort_value7;
/* 9367 */       }
/* 9368 */
/* 9369 */       if (sort_isNull8) {
/* 9370 */         project_values3[8] = null;
/* 9371 */       } else {
/* 9372 */         project_values3[8] = sort_value8;
/* 9373 */       }
/* 9374 */
/* 9375 */       if (sort_isNull9) {
/* 9376 */         project_values3[9] = null;
/* 9377 */       } else {
/* 9378 */         project_values3[9] = sort_value9;
/* 9379 */       }
/* 9380 */
/* 9381 */       if (sort_isNull10) {
/* 9382 */         project_values3[10] = null;
/* 9383 */       } else {
/* 9384 */         project_values3[10] = sort_value10;
/* 9385 */       }
/* 9386 */
/* 9387 */       if (sort_isNull11) {
/* 9388 */         project_values3[11] = null;
/* 9389 */       } else {
/* 9390 */         project_values3[11] = sort_value11;
/* 9391 */       }
/* 9392 */
/* 9393 */       if (sort_isNull12) {
/* 9394 */         project_values3[12] = null;
/* 9395 */       } else {
/* 9396 */         project_values3[12] = sort_value12;
/* 9397 */       }
/* 9398 */
/* 9399 */       Object project_arg187 = sort_isNull13 ? null : project_converter190.apply(sort_value13);
/* 9400 */
/* 9401 */       Double project_result190 = null;
/* 9402 */       try {
/* 9403 */         project_result190 = (Double)project_catalystConverter190.apply(project_udf190.apply(project_arg187));
/* 9404 */       } catch (Exception e) {
/* 9405 */         throw new org.apache.spark.SparkException(project_scalaUDF190.udfErrorMessage(), e);
/* 9406 */       }
/* 9407 */
/* 9408 */       boolean project_isNull559 = project_result190 == null;
/* 9409 */       double project_value559 = -1.0;
/* 9410 */       if (!project_isNull559) {
/* 9411 */         project_value559 = project_result190;
/* 9412 */       }
/* 9413 */       boolean project_isNull557 = false;
/* 9414 */       InternalRow project_value557 = null;
/* 9415 */       if (!false && project_isNull559) {
/* 9416 */         final InternalRow project_value561 = null;
/* 9417 */         project_isNull557 = true;
/* 9418 */         project_value557 = project_value561;
/* 9419 */       } else {
/* 9420 */         Object project_arg188 = sort_isNull13 ? null : project_converter192.apply(sort_value13);
/* 9421 */
/* 9422 */         Double project_result192 = null;
/* 9423 */         try {
/* 9424 */           project_result192 = (Double)project_catalystConverter192.apply(project_udf192.apply(project_arg188));
/* 9425 */         } catch (Exception e) {
/* 9426 */           throw new org.apache.spark.SparkException(project_scalaUDF192.udfErrorMessage(), e);
/* 9427 */         }
/* 9428 */
/* 9429 */         boolean project_isNull563 = project_result192 == null;
/* 9430 */         double project_value563 = -1.0;
/* 9431 */         if (!project_isNull563) {
/* 9432 */           project_value563 = project_result192;
/* 9433 */         }
/* 9434 */         Object project_arg189 = project_isNull563 ? null : project_converter191.apply(project_value563);
/* 9435 */
/* 9436 */         InternalRow project_result191 = null;
/* 9437 */         try {
/* 9438 */           project_result191 = (InternalRow)project_catalystConverter191.apply(project_udf191.apply(project_arg189));
/* 9439 */         } catch (Exception e) {
/* 9440 */           throw new org.apache.spark.SparkException(project_scalaUDF191.udfErrorMessage(), e);
/* 9441 */         }
/* 9442 */
/* 9443 */         boolean project_isNull562 = project_result191 == null;
/* 9444 */         InternalRow project_value562 = null;
/* 9445 */         if (!project_isNull562) {
/* 9446 */           project_value562 = project_result191;
/* 9447 */         }
/* 9448 */         project_isNull557 = project_isNull562;
/* 9449 */         project_value557 = project_value562;
/* 9450 */       }
/* 9451 */       if (project_isNull557) {
/* 9452 */         project_values3[13] = null;
/* 9453 */       } else {
/* 9454 */         project_values3[13] = project_value557;
/* 9455 */       }
/* 9456 */
/* 9457 */       Object project_arg190 = sort_isNull14 ? null : project_converter193.apply(sort_value14);
/* 9458 */
/* 9459 */       Double project_result193 = null;
/* 9460 */       try {
/* 9461 */         project_result193 = (Double)project_catalystConverter193.apply(project_udf193.apply(project_arg190));
/* 9462 */       } catch (Exception e) {
/* 9463 */         throw new org.apache.spark.SparkException(project_scalaUDF193.udfErrorMessage(), e);
/* 9464 */       }
/* 9465 */
/* 9466 */       boolean project_isNull567 = project_result193 == null;
/* 9467 */       double project_value567 = -1.0;
/* 9468 */       if (!project_isNull567) {
/* 9469 */         project_value567 = project_result193;
/* 9470 */       }
/* 9471 */       boolean project_isNull565 = false;
/* 9472 */       InternalRow project_value565 = null;
/* 9473 */       if (!false && project_isNull567) {
/* 9474 */         final InternalRow project_value569 = null;
/* 9475 */         project_isNull565 = true;
/* 9476 */         project_value565 = project_value569;
/* 9477 */       } else {
/* 9478 */         Object project_arg191 = sort_isNull14 ? null : project_converter195.apply(sort_value14);
/* 9479 */
/* 9480 */         Double project_result195 = null;
/* 9481 */         try {
/* 9482 */           project_result195 = (Double)project_catalystConverter195.apply(project_udf195.apply(project_arg191));
/* 9483 */         } catch (Exception e) {
/* 9484 */           throw new org.apache.spark.SparkException(project_scalaUDF195.udfErrorMessage(), e);
/* 9485 */         }
/* 9486 */
/* 9487 */         boolean project_isNull571 = project_result195 == null;
/* 9488 */         double project_value571 = -1.0;
/* 9489 */         if (!project_isNull571) {
/* 9490 */           project_value571 = project_result195;
/* 9491 */         }
/* 9492 */         Object project_arg192 = project_isNull571 ? null : project_converter194.apply(project_value571);
/* 9493 */
/* 9494 */         InternalRow project_result194 = null;
/* 9495 */         try {
/* 9496 */           project_result194 = (InternalRow)project_catalystConverter194.apply(project_udf194.apply(project_arg192));
/* 9497 */         } catch (Exception e) {
/* 9498 */           throw new org.apache.spark.SparkException(project_scalaUDF194.udfErrorMessage(), e);
/* 9499 */         }
/* 9500 */
/* 9501 */         boolean project_isNull570 = project_result194 == null;
/* 9502 */         InternalRow project_value570 = null;
/* 9503 */         if (!project_isNull570) {
/* 9504 */           project_value570 = project_result194;
/* 9505 */         }
/* 9506 */         project_isNull565 = project_isNull570;
/* 9507 */         project_value565 = project_value570;
/* 9508 */       }
/* 9509 */       if (project_isNull565) {
/* 9510 */         project_values3[14] = null;
/* 9511 */       } else {
/* 9512 */         project_values3[14] = project_value565;
/* 9513 */       }
/* 9514 */
/* 9515 */       Object project_arg193 = sort_isNull15 ? null : project_converter196.apply(sort_value15);
/* 9516 */
/* 9517 */       Double project_result196 = null;
/* 9518 */       try {
/* 9519 */         project_result196 = (Double)project_catalystConverter196.apply(project_udf196.apply(project_arg193));
/* 9520 */       } catch (Exception e) {
/* 9521 */         throw new org.apache.spark.SparkException(project_scalaUDF196.udfErrorMessage(), e);
/* 9522 */       }
/* 9523 */
/* 9524 */       boolean project_isNull575 = project_result196 == null;
/* 9525 */       double project_value575 = -1.0;
/* 9526 */       if (!project_isNull575) {
/* 9527 */         project_value575 = project_result196;
/* 9528 */       }
/* 9529 */       boolean project_isNull573 = false;
/* 9530 */       InternalRow project_value573 = null;
/* 9531 */       if (!false && project_isNull575) {
/* 9532 */         final InternalRow project_value577 = null;
/* 9533 */         project_isNull573 = true;
/* 9534 */         project_value573 = project_value577;
/* 9535 */       } else {
/* 9536 */         Object project_arg194 = sort_isNull15 ? null : project_converter198.apply(sort_value15);
/* 9537 */
/* 9538 */         Double project_result198 = null;
/* 9539 */         try {
/* 9540 */           project_result198 = (Double)project_catalystConverter198.apply(project_udf198.apply(project_arg194));
/* 9541 */         } catch (Exception e) {
/* 9542 */           throw new org.apache.spark.SparkException(project_scalaUDF198.udfErrorMessage(), e);
/* 9543 */         }
/* 9544 */
/* 9545 */         boolean project_isNull579 = project_result198 == null;
/* 9546 */         double project_value579 = -1.0;
/* 9547 */         if (!project_isNull579) {
/* 9548 */           project_value579 = project_result198;
/* 9549 */         }
/* 9550 */         Object project_arg195 = project_isNull579 ? null : project_converter197.apply(project_value579);
/* 9551 */
/* 9552 */         InternalRow project_result197 = null;
/* 9553 */         try {
/* 9554 */           project_result197 = (InternalRow)project_catalystConverter197.apply(project_udf197.apply(project_arg195));
/* 9555 */         } catch (Exception e) {
/* 9556 */           throw new org.apache.spark.SparkException(project_scalaUDF197.udfErrorMessage(), e);
/* 9557 */         }
/* 9558 */
/* 9559 */         boolean project_isNull578 = project_result197 == null;
/* 9560 */         InternalRow project_value578 = null;
/* 9561 */         if (!project_isNull578) {
/* 9562 */           project_value578 = project_result197;
/* 9563 */         }
/* 9564 */         project_isNull573 = project_isNull578;
/* 9565 */         project_value573 = project_value578;
/* 9566 */       }
/* 9567 */       if (project_isNull573) {
/* 9568 */         project_values3[15] = null;
/* 9569 */       } else {
/* 9570 */         project_values3[15] = project_value573;
/* 9571 */       }
/* 9572 */
/* 9573 */       if (sort_isNull16) {
/* 9574 */         project_values3[16] = null;
/* 9575 */       } else {
/* 9576 */         project_values3[16] = sort_value16;
/* 9577 */       }
/* 9578 */
/* 9579 */       Object project_arg196 = sort_isNull17 ? null : project_converter199.apply(sort_value17);
/* 9580 */
/* 9581 */       Double project_result199 = null;
/* 9582 */       try {
/* 9583 */         project_result199 = (Double)project_catalystConverter199.apply(project_udf199.apply(project_arg196));
/* 9584 */       } catch (Exception e) {
/* 9585 */         throw new org.apache.spark.SparkException(project_scalaUDF199.udfErrorMessage(), e);
/* 9586 */       }
/* 9587 */
/* 9588 */       boolean project_isNull584 = project_result199 == null;
/* 9589 */       double project_value584 = -1.0;
/* 9590 */       if (!project_isNull584) {
/* 9591 */         project_value584 = project_result199;
/* 9592 */       }
/* 9593 */       boolean project_isNull582 = false;
/* 9594 */       InternalRow project_value582 = null;
/* 9595 */       if (!false && project_isNull584) {
/* 9596 */         final InternalRow project_value586 = null;
/* 9597 */         project_isNull582 = true;
/* 9598 */         project_value582 = project_value586;
/* 9599 */       } else {
/* 9600 */         Object project_arg197 = sort_isNull17 ? null : project_converter201.apply(sort_value17);
/* 9601 */
/* 9602 */         Double project_result201 = null;
/* 9603 */         try {
/* 9604 */           project_result201 = (Double)project_catalystConverter201.apply(project_udf201.apply(project_arg197));
/* 9605 */         } catch (Exception e) {
/* 9606 */           throw new org.apache.spark.SparkException(project_scalaUDF201.udfErrorMessage(), e);
/* 9607 */         }
/* 9608 */
/* 9609 */         boolean project_isNull588 = project_result201 == null;
/* 9610 */         double project_value588 = -1.0;
/* 9611 */         if (!project_isNull588) {
/* 9612 */           project_value588 = project_result201;
/* 9613 */         }
/* 9614 */         Object project_arg198 = project_isNull588 ? null : project_converter200.apply(project_value588);
/* 9615 */
/* 9616 */         InternalRow project_result200 = null;
/* 9617 */         try {
/* 9618 */           project_result200 = (InternalRow)project_catalystConverter200.apply(project_udf200.apply(project_arg198));
/* 9619 */         } catch (Exception e) {
/* 9620 */           throw new org.apache.spark.SparkException(project_scalaUDF200.udfErrorMessage(), e);
/* 9621 */         }
/* 9622 */
/* 9623 */         boolean project_isNull587 = project_result200 == null;
/* 9624 */         InternalRow project_value587 = null;
/* 9625 */         if (!project_isNull587) {
/* 9626 */           project_value587 = project_result200;
/* 9627 */         }
/* 9628 */         project_isNull582 = project_isNull587;
/* 9629 */         project_value582 = project_value587;
/* 9630 */       }
/* 9631 */       if (project_isNull582) {
/* 9632 */         project_values3[17] = null;
/* 9633 */       } else {
/* 9634 */         project_values3[17] = project_value582;
/* 9635 */       }
/* 9636 */
/* 9637 */       Object project_arg199 = sort_isNull18 ? null : project_converter202.apply(sort_value18);
/* 9638 */
/* 9639 */       Double project_result202 = null;
/* 9640 */       try {
/* 9641 */         project_result202 = (Double)project_catalystConverter202.apply(project_udf202.apply(project_arg199));
/* 9642 */       } catch (Exception e) {
/* 9643 */         throw new org.apache.spark.SparkException(project_scalaUDF202.udfErrorMessage(), e);
/* 9644 */       }
/* 9645 */
/* 9646 */       boolean project_isNull592 = project_result202 == null;
/* 9647 */       double project_value592 = -1.0;
/* 9648 */       if (!project_isNull592) {
/* 9649 */         project_value592 = project_result202;
/* 9650 */       }
/* 9651 */       boolean project_isNull590 = false;
/* 9652 */       InternalRow project_value590 = null;
/* 9653 */       if (!false && project_isNull592) {
/* 9654 */         final InternalRow project_value594 = null;
/* 9655 */         project_isNull590 = true;
/* 9656 */         project_value590 = project_value594;
/* 9657 */       } else {
/* 9658 */         Object project_arg200 = sort_isNull18 ? null : project_converter204.apply(sort_value18);
/* 9659 */
/* 9660 */         Double project_result204 = null;
/* 9661 */         try {
/* 9662 */           project_result204 = (Double)project_catalystConverter204.apply(project_udf204.apply(project_arg200));
/* 9663 */         } catch (Exception e) {
/* 9664 */           throw new org.apache.spark.SparkException(project_scalaUDF204.udfErrorMessage(), e);
/* 9665 */         }
/* 9666 */
/* 9667 */         boolean project_isNull596 = project_result204 == null;
/* 9668 */         double project_value596 = -1.0;
/* 9669 */         if (!project_isNull596) {
/* 9670 */           project_value596 = project_result204;
/* 9671 */         }
/* 9672 */         Object project_arg201 = project_isNull596 ? null : project_converter203.apply(project_value596);
/* 9673 */
/* 9674 */         InternalRow project_result203 = null;
/* 9675 */         try {
/* 9676 */           project_result203 = (InternalRow)project_catalystConverter203.apply(project_udf203.apply(project_arg201));
/* 9677 */         } catch (Exception e) {
/* 9678 */           throw new org.apache.spark.SparkException(project_scalaUDF203.udfErrorMessage(), e);
/* 9679 */         }
/* 9680 */
/* 9681 */         boolean project_isNull595 = project_result203 == null;
/* 9682 */         InternalRow project_value595 = null;
/* 9683 */         if (!project_isNull595) {
/* 9684 */           project_value595 = project_result203;
/* 9685 */         }
/* 9686 */         project_isNull590 = project_isNull595;
/* 9687 */         project_value590 = project_value595;
/* 9688 */       }
/* 9689 */       if (project_isNull590) {
/* 9690 */         project_values3[18] = null;
/* 9691 */       } else {
/* 9692 */         project_values3[18] = project_value590;
/* 9693 */       }
/* 9694 */
/* 9695 */       Object project_arg202 = sort_isNull19 ? null : project_converter205.apply(sort_value19);
/* 9696 */
/* 9697 */       Double project_result205 = null;
/* 9698 */       try {
/* 9699 */         project_result205 = (Double)project_catalystConverter205.apply(project_udf205.apply(project_arg202));
/* 9700 */       } catch (Exception e) {
/* 9701 */         throw new org.apache.spark.SparkException(project_scalaUDF205.udfErrorMessage(), e);
/* 9702 */       }
/* 9703 */
/* 9704 */       boolean project_isNull600 = project_result205 == null;
/* 9705 */       double project_value600 = -1.0;
/* 9706 */       if (!project_isNull600) {
/* 9707 */         project_value600 = project_result205;
/* 9708 */       }
/* 9709 */       boolean project_isNull598 = false;
/* 9710 */       InternalRow project_value598 = null;
/* 9711 */       if (!false && project_isNull600) {
/* 9712 */         final InternalRow project_value602 = null;
/* 9713 */         project_isNull598 = true;
/* 9714 */         project_value598 = project_value602;
/* 9715 */       } else {
/* 9716 */         Object project_arg203 = sort_isNull19 ? null : project_converter207.apply(sort_value19);
/* 9717 */
/* 9718 */         Double project_result207 = null;
/* 9719 */         try {
/* 9720 */           project_result207 = (Double)project_catalystConverter207.apply(project_udf207.apply(project_arg203));
/* 9721 */         } catch (Exception e) {
/* 9722 */           throw new org.apache.spark.SparkException(project_scalaUDF207.udfErrorMessage(), e);
/* 9723 */         }
/* 9724 */
/* 9725 */         boolean project_isNull604 = project_result207 == null;
/* 9726 */         double project_value604 = -1.0;
/* 9727 */         if (!project_isNull604) {
/* 9728 */           project_value604 = project_result207;
/* 9729 */         }
/* 9730 */         Object project_arg204 = project_isNull604 ? null : project_converter206.apply(project_value604);
/* 9731 */
/* 9732 */         InternalRow project_result206 = null;
/* 9733 */         try {
/* 9734 */           project_result206 = (InternalRow)project_catalystConverter206.apply(project_udf206.apply(project_arg204));
/* 9735 */         } catch (Exception e) {
/* 9736 */           throw new org.apache.spark.SparkException(project_scalaUDF206.udfErrorMessage(), e);
/* 9737 */         }
/* 9738 */
/* 9739 */         boolean project_isNull603 = project_result206 == null;
/* 9740 */         InternalRow project_value603 = null;
/* 9741 */         if (!project_isNull603) {
/* 9742 */           project_value603 = project_result206;
/* 9743 */         }
/* 9744 */         project_isNull598 = project_isNull603;
/* 9745 */         project_value598 = project_value603;
/* 9746 */       }
/* 9747 */       if (project_isNull598) {
/* 9748 */         project_values3[19] = null;
/* 9749 */       } else {
/* 9750 */         project_values3[19] = project_value598;
/* 9751 */       }
/* 9752 */
/* 9753 */       Object project_arg205 = sort_isNull20 ? null : project_converter208.apply(sort_value20);
/* 9754 */
/* 9755 */       Double project_result208 = null;
/* 9756 */       try {
/* 9757 */         project_result208 = (Double)project_catalystConverter208.apply(project_udf208.apply(project_arg205));
/* 9758 */       } catch (Exception e) {
/* 9759 */         throw new org.apache.spark.SparkException(project_scalaUDF208.udfErrorMessage(), e);
/* 9760 */       }
/* 9761 */
/* 9762 */       boolean project_isNull608 = project_result208 == null;
/* 9763 */       double project_value608 = -1.0;
/* 9764 */       if (!project_isNull608) {
/* 9765 */         project_value608 = project_result208;
/* 9766 */       }
/* 9767 */       boolean project_isNull606 = false;
/* 9768 */       InternalRow project_value606 = null;
/* 9769 */       if (!false && project_isNull608) {
/* 9770 */         final InternalRow project_value610 = null;
/* 9771 */         project_isNull606 = true;
/* 9772 */         project_value606 = project_value610;
/* 9773 */       } else {
/* 9774 */         Object project_arg206 = sort_isNull20 ? null : project_converter210.apply(sort_value20);
/* 9775 */
/* 9776 */         Double project_result210 = null;
/* 9777 */         try {
/* 9778 */           project_result210 = (Double)project_catalystConverter210.apply(project_udf210.apply(project_arg206));
/* 9779 */         } catch (Exception e) {
/* 9780 */           throw new org.apache.spark.SparkException(project_scalaUDF210.udfErrorMessage(), e);
/* 9781 */         }
/* 9782 */
/* 9783 */         boolean project_isNull612 = project_result210 == null;
/* 9784 */         double project_value612 = -1.0;
/* 9785 */         if (!project_isNull612) {
/* 9786 */           project_value612 = project_result210;
/* 9787 */         }
/* 9788 */         Object project_arg207 = project_isNull612 ? null : project_converter209.apply(project_value612);
/* 9789 */
/* 9790 */         InternalRow project_result209 = null;
/* 9791 */         try {
/* 9792 */           project_result209 = (InternalRow)project_catalystConverter209.apply(project_udf209.apply(project_arg207));
/* 9793 */         } catch (Exception e) {
/* 9794 */           throw new org.apache.spark.SparkException(project_scalaUDF209.udfErrorMessage(), e);
/* 9795 */         }
/* 9796 */
/* 9797 */         boolean project_isNull611 = project_result209 == null;
/* 9798 */         InternalRow project_value611 = null;
/* 9799 */         if (!project_isNull611) {
/* 9800 */           project_value611 = project_result209;
/* 9801 */         }
/* 9802 */         project_isNull606 = project_isNull611;
/* 9803 */         project_value606 = project_value611;
/* 9804 */       }
/* 9805 */       if (project_isNull606) {
/* 9806 */         project_values3[20] = null;
/* 9807 */       } else {
/* 9808 */         project_values3[20] = project_value606;
/* 9809 */       }
/* 9810 */
/* 9811 */       Object project_arg208 = sort_isNull21 ? null : project_converter211.apply(sort_value21);
/* 9812 */
/* 9813 */       Double project_result211 = null;
/* 9814 */       try {
/* 9815 */         project_result211 = (Double)project_catalystConverter211.apply(project_udf211.apply(project_arg208));
/* 9816 */       } catch (Exception e) {
/* 9817 */         throw new org.apache.spark.SparkException(project_scalaUDF211.udfErrorMessage(), e);
/* 9818 */       }
/* 9819 */
/* 9820 */       boolean project_isNull616 = project_result211 == null;
/* 9821 */       double project_value616 = -1.0;
/* 9822 */       if (!project_isNull616) {
/* 9823 */         project_value616 = project_result211;
/* 9824 */       }
/* 9825 */       boolean project_isNull614 = false;
/* 9826 */       InternalRow project_value614 = null;
/* 9827 */       if (!false && project_isNull616) {
/* 9828 */         final InternalRow project_value618 = null;
/* 9829 */         project_isNull614 = true;
/* 9830 */         project_value614 = project_value618;
/* 9831 */       } else {
/* 9832 */         Object project_arg209 = sort_isNull21 ? null : project_converter213.apply(sort_value21);
/* 9833 */
/* 9834 */         Double project_result213 = null;
/* 9835 */         try {
/* 9836 */           project_result213 = (Double)project_catalystConverter213.apply(project_udf213.apply(project_arg209));
/* 9837 */         } catch (Exception e) {
/* 9838 */           throw new org.apache.spark.SparkException(project_scalaUDF213.udfErrorMessage(), e);
/* 9839 */         }
/* 9840 */
/* 9841 */         boolean project_isNull620 = project_result213 == null;
/* 9842 */         double project_value620 = -1.0;
/* 9843 */         if (!project_isNull620) {
/* 9844 */           project_value620 = project_result213;
/* 9845 */         }
/* 9846 */         Object project_arg210 = project_isNull620 ? null : project_converter212.apply(project_value620);
/* 9847 */
/* 9848 */         InternalRow project_result212 = null;
/* 9849 */         try {
/* 9850 */           project_result212 = (InternalRow)project_catalystConverter212.apply(project_udf212.apply(project_arg210));
/* 9851 */         } catch (Exception e) {
/* 9852 */           throw new org.apache.spark.SparkException(project_scalaUDF212.udfErrorMessage(), e);
/* 9853 */         }
/* 9854 */
/* 9855 */         boolean project_isNull619 = project_result212 == null;
/* 9856 */         InternalRow project_value619 = null;
/* 9857 */         if (!project_isNull619) {
/* 9858 */           project_value619 = project_result212;
/* 9859 */         }
/* 9860 */         project_isNull614 = project_isNull619;
/* 9861 */         project_value614 = project_value619;
/* 9862 */       }
/* 9863 */       if (project_isNull614) {
/* 9864 */         project_values3[21] = null;
/* 9865 */       } else {
/* 9866 */         project_values3[21] = project_value614;
/* 9867 */       }
/* 9868 */
/* 9869 */       Object project_arg211 = sort_isNull22 ? null : project_converter214.apply(sort_value22);
/* 9870 */
/* 9871 */       Double project_result214 = null;
/* 9872 */       try {
/* 9873 */         project_result214 = (Double)project_catalystConverter214.apply(project_udf214.apply(project_arg211));
/* 9874 */       } catch (Exception e) {
/* 9875 */         throw new org.apache.spark.SparkException(project_scalaUDF214.udfErrorMessage(), e);
/* 9876 */       }
/* 9877 */
/* 9878 */       boolean project_isNull624 = project_result214 == null;
/* 9879 */       double project_value624 = -1.0;
/* 9880 */       if (!project_isNull624) {
/* 9881 */         project_value624 = project_result214;
/* 9882 */       }
/* 9883 */       boolean project_isNull622 = false;
/* 9884 */       InternalRow project_value622 = null;
/* 9885 */       if (!false && project_isNull624) {
/* 9886 */         final InternalRow project_value626 = null;
/* 9887 */         project_isNull622 = true;
/* 9888 */         project_value622 = project_value626;
/* 9889 */       } else {
/* 9890 */         Object project_arg212 = sort_isNull22 ? null : project_converter216.apply(sort_value22);
/* 9891 */
/* 9892 */         Double project_result216 = null;
/* 9893 */         try {
/* 9894 */           project_result216 = (Double)project_catalystConverter216.apply(project_udf216.apply(project_arg212));
/* 9895 */         } catch (Exception e) {
/* 9896 */           throw new org.apache.spark.SparkException(project_scalaUDF216.udfErrorMessage(), e);
/* 9897 */         }
/* 9898 */
/* 9899 */         boolean project_isNull628 = project_result216 == null;
/* 9900 */         double project_value628 = -1.0;
/* 9901 */         if (!project_isNull628) {
/* 9902 */           project_value628 = project_result216;
/* 9903 */         }
/* 9904 */         Object project_arg213 = project_isNull628 ? null : project_converter215.apply(project_value628);
/* 9905 */
/* 9906 */         InternalRow project_result215 = null;
/* 9907 */         try {
/* 9908 */           project_result215 = (InternalRow)project_catalystConverter215.apply(project_udf215.apply(project_arg213));
/* 9909 */         } catch (Exception e) {
/* 9910 */           throw new org.apache.spark.SparkException(project_scalaUDF215.udfErrorMessage(), e);
/* 9911 */         }
/* 9912 */
/* 9913 */         boolean project_isNull627 = project_result215 == null;
/* 9914 */         InternalRow project_value627 = null;
/* 9915 */         if (!project_isNull627) {
/* 9916 */           project_value627 = project_result215;
/* 9917 */         }
/* 9918 */         project_isNull622 = project_isNull627;
/* 9919 */         project_value622 = project_value627;
/* 9920 */       }
/* 9921 */       if (project_isNull622) {
/* 9922 */         project_values3[22] = null;
/* 9923 */       } else {
/* 9924 */         project_values3[22] = project_value622;
/* 9925 */       }
/* 9926 */
/* 9927 */       Object project_arg214 = sort_isNull23 ? null : project_converter217.apply(sort_value23);
/* 9928 */
/* 9929 */       Double project_result217 = null;
/* 9930 */       try {
/* 9931 */         project_result217 = (Double)project_catalystConverter217.apply(project_udf217.apply(project_arg214));
/* 9932 */       } catch (Exception e) {
/* 9933 */         throw new org.apache.spark.SparkException(project_scalaUDF217.udfErrorMessage(), e);
/* 9934 */       }
/* 9935 */
/* 9936 */       boolean project_isNull632 = project_result217 == null;
/* 9937 */       double project_value632 = -1.0;
/* 9938 */       if (!project_isNull632) {
/* 9939 */         project_value632 = project_result217;
/* 9940 */       }
/* 9941 */       boolean project_isNull630 = false;
/* 9942 */       InternalRow project_value630 = null;
/* 9943 */       if (!false && project_isNull632) {
/* 9944 */         final InternalRow project_value634 = null;
/* 9945 */         project_isNull630 = true;
/* 9946 */         project_value630 = project_value634;
/* 9947 */       } else {
/* 9948 */         Object project_arg215 = sort_isNull23 ? null : project_converter219.apply(sort_value23);
/* 9949 */
/* 9950 */         Double project_result219 = null;
/* 9951 */         try {
/* 9952 */           project_result219 = (Double)project_catalystConverter219.apply(project_udf219.apply(project_arg215));
/* 9953 */         } catch (Exception e) {
/* 9954 */           throw new org.apache.spark.SparkException(project_scalaUDF219.udfErrorMessage(), e);
/* 9955 */         }
/* 9956 */
/* 9957 */         boolean project_isNull636 = project_result219 == null;
/* 9958 */         double project_value636 = -1.0;
/* 9959 */         if (!project_isNull636) {
/* 9960 */           project_value636 = project_result219;
/* 9961 */         }
/* 9962 */         Object project_arg216 = project_isNull636 ? null : project_converter218.apply(project_value636);
/* 9963 */
/* 9964 */         InternalRow project_result218 = null;
/* 9965 */         try {
/* 9966 */           project_result218 = (InternalRow)project_catalystConverter218.apply(project_udf218.apply(project_arg216));
/* 9967 */         } catch (Exception e) {
/* 9968 */           throw new org.apache.spark.SparkException(project_scalaUDF218.udfErrorMessage(), e);
/* 9969 */         }
/* 9970 */
/* 9971 */         boolean project_isNull635 = project_result218 == null;
/* 9972 */         InternalRow project_value635 = null;
/* 9973 */         if (!project_isNull635) {
/* 9974 */           project_value635 = project_result218;
/* 9975 */         }
/* 9976 */         project_isNull630 = project_isNull635;
/* 9977 */         project_value630 = project_value635;
/* 9978 */       }
/* 9979 */       if (project_isNull630) {
/* 9980 */         project_values3[23] = null;
/* 9981 */       } else {
/* 9982 */         project_values3[23] = project_value630;
/* 9983 */       }
/* 9984 */
/* 9985 */       Object project_arg217 = sort_isNull24 ? null : project_converter220.apply(sort_value24);
/* 9986 */
/* 9987 */       Double project_result220 = null;
/* 9988 */       try {
/* 9989 */         project_result220 = (Double)project_catalystConverter220.apply(project_udf220.apply(project_arg217));
/* 9990 */       } catch (Exception e) {
/* 9991 */         throw new org.apache.spark.SparkException(project_scalaUDF220.udfErrorMessage(), e);
/* 9992 */       }
/* 9993 */
/* 9994 */       boolean project_isNull640 = project_result220 == null;
/* 9995 */       double project_value640 = -1.0;
/* 9996 */       if (!project_isNull640) {
/* 9997 */         project_value640 = project_result220;
/* 9998 */       }
/* 9999 */       boolean project_isNull638 = false;
/* 10000 */       InternalRow project_value638 = null;
/* 10001 */       if (!false && project_isNull640) {
/* 10002 */         final InternalRow project_value642 = null;
/* 10003 */         project_isNull638 = true;
/* 10004 */         project_value638 = project_value642;
/* 10005 */       } else {
/* 10006 */         Object project_arg218 = sort_isNull24 ? null : project_converter222.apply(sort_value24);
/* 10007 */
/* 10008 */         Double project_result222 = null;
/* 10009 */         try {
/* 10010 */           project_result222 = (Double)project_catalystConverter222.apply(project_udf222.apply(project_arg218));
/* 10011 */         } catch (Exception e) {
/* 10012 */           throw new org.apache.spark.SparkException(project_scalaUDF222.udfErrorMessage(), e);
/* 10013 */         }
/* 10014 */
/* 10015 */         boolean project_isNull644 = project_result222 == null;
/* 10016 */         double project_value644 = -1.0;
/* 10017 */         if (!project_isNull644) {
/* 10018 */           project_value644 = project_result222;
/* 10019 */         }
/* 10020 */         Object project_arg219 = project_isNull644 ? null : project_converter221.apply(project_value644);
/* 10021 */
/* 10022 */         InternalRow project_result221 = null;
/* 10023 */         try {
/* 10024 */           project_result221 = (InternalRow)project_catalystConverter221.apply(project_udf221.apply(project_arg219));
/* 10025 */         } catch (Exception e) {
/* 10026 */           throw new org.apache.spark.SparkException(project_scalaUDF221.udfErrorMessage(), e);
/* 10027 */         }
/* 10028 */
/* 10029 */         boolean project_isNull643 = project_result221 == null;
/* 10030 */         InternalRow project_value643 = null;
/* 10031 */         if (!project_isNull643) {
/* 10032 */           project_value643 = project_result221;
/* 10033 */         }
/* 10034 */         project_isNull638 = project_isNull643;
/* 10035 */         project_value638 = project_value643;
/* 10036 */       }
/* 10037 */       if (project_isNull638) {
/* 10038 */         project_values3[24] = null;
/* 10039 */       } else {
/* 10040 */         project_values3[24] = project_value638;
/* 10041 */       }
/* 10042 */
/* 10043 */       Object project_arg220 = sort_isNull25 ? null : project_converter223.apply(sort_value25);
/* 10044 */
/* 10045 */       Double project_result223 = null;
/* 10046 */       try {
/* 10047 */         project_result223 = (Double)project_catalystConverter223.apply(project_udf223.apply(project_arg220));
/* 10048 */       } catch (Exception e) {
/* 10049 */         throw new org.apache.spark.SparkException(project_scalaUDF223.udfErrorMessage(), e);
/* 10050 */       }
/* 10051 */
/* 10052 */       boolean project_isNull648 = project_result223 == null;
/* 10053 */       double project_value648 = -1.0;
/* 10054 */       if (!project_isNull648) {
/* 10055 */         project_value648 = project_result223;
/* 10056 */       }
/* 10057 */       boolean project_isNull646 = false;
/* 10058 */       InternalRow project_value646 = null;
/* 10059 */       if (!false && project_isNull648) {
/* 10060 */         final InternalRow project_value650 = null;
/* 10061 */         project_isNull646 = true;
/* 10062 */         project_value646 = project_value650;
/* 10063 */       } else {
/* 10064 */         Object project_arg221 = sort_isNull25 ? null : project_converter225.apply(sort_value25);
/* 10065 */
/* 10066 */         Double project_result225 = null;
/* 10067 */         try {
/* 10068 */           project_result225 = (Double)project_catalystConverter225.apply(project_udf225.apply(project_arg221));
/* 10069 */         } catch (Exception e) {
/* 10070 */           throw new org.apache.spark.SparkException(project_scalaUDF225.udfErrorMessage(), e);
/* 10071 */         }
/* 10072 */
/* 10073 */         boolean project_isNull652 = project_result225 == null;
/* 10074 */         double project_value652 = -1.0;
/* 10075 */         if (!project_isNull652) {
/* 10076 */           project_value652 = project_result225;
/* 10077 */         }
/* 10078 */         Object project_arg222 = project_isNull652 ? null : project_converter224.apply(project_value652);
/* 10079 */
/* 10080 */         InternalRow project_result224 = null;
/* 10081 */         try {
/* 10082 */           project_result224 = (InternalRow)project_catalystConverter224.apply(project_udf224.apply(project_arg222));
/* 10083 */         } catch (Exception e) {
/* 10084 */           throw new org.apache.spark.SparkException(project_scalaUDF224.udfErrorMessage(), e);
/* 10085 */         }
/* 10086 */
/* 10087 */         boolean project_isNull651 = project_result224 == null;
/* 10088 */         InternalRow project_value651 = null;
/* 10089 */         if (!project_isNull651) {
/* 10090 */           project_value651 = project_result224;
/* 10091 */         }
/* 10092 */         project_isNull646 = project_isNull651;
/* 10093 */         project_value646 = project_value651;
/* 10094 */       }
/* 10095 */       if (project_isNull646) {
/* 10096 */         project_values3[25] = null;
/* 10097 */       } else {
/* 10098 */         project_values3[25] = project_value646;
/* 10099 */       }
/* 10100 */
/* 10101 */       if (sort_isNull27) {
/* 10102 */         project_values3[26] = null;
/* 10103 */       } else {
/* 10104 */         project_values3[26] = sort_value27;
/* 10105 */       }
/* 10106 */       final InternalRow project_value501 = new org.apache.spark.sql.catalyst.expressions.GenericInternalRow(project_values3);
/* 10107 */       this.project_values3 = null;
/* 10108 */       Object project_arg223 = false ? null : project_converter171.apply(project_value501);
/* 10109 */
/* 10110 */       InternalRow project_result171 = null;
/* 10111 */       try {
/* 10112 */         project_result171 = (InternalRow)project_catalystConverter171.apply(project_udf171.apply(project_arg223));
/* 10113 */       } catch (Exception e) {
/* 10114 */         throw new org.apache.spark.SparkException(project_scalaUDF171.udfErrorMessage(), e);
/* 10115 */       }
/* 10116 */
/* 10117 */       boolean project_isNull500 = project_result171 == null;
/* 10118 */       InternalRow project_value500 = null;
/* 10119 */       if (!project_isNull500) {
/* 10120 */         project_value500 = project_result171;
/* 10121 */       }
/* 10122 */       Object project_arg224 = project_isNull500 ? null : project_converter170.apply(project_value500);
/* 10123 */
/* 10124 */       InternalRow project_result170 = null;
/* 10125 */       try {
/* 10126 */         project_result170 = (InternalRow)project_catalystConverter170.apply(project_udf170.apply(project_arg224));
/* 10127 */       } catch (Exception e) {
/* 10128 */         throw new org.apache.spark.SparkException(project_scalaUDF170.udfErrorMessage(), e);
/* 10129 */       }
/* 10130 */
/* 10131 */       boolean project_isNull499 = project_result170 == null;
/* 10132 */       InternalRow project_value499 = null;
/* 10133 */       if (!project_isNull499) {
/* 10134 */         project_value499 = project_result170;
/* 10135 */       }
/* 10136 */       Object project_arg225 = project_isNull499 ? null : project_converter169.apply(project_value499);
/* 10137 */
/* 10138 */       Double project_result169 = null;
/* 10139 */       try {
/* 10140 */         project_result169 = (Double)project_catalystConverter169.apply(project_udf169.apply(project_arg225));
/* 10141 */       } catch (Exception e) {
/* 10142 */         throw new org.apache.spark.SparkException(project_scalaUDF169.udfErrorMessage(), e);
/* 10143 */       }
/* 10144 */
/* 10145 */       boolean project_isNull498 = project_result169 == null;
/* 10146 */       double project_value498 = -1.0;
/* 10147 */       if (!project_isNull498) {
/* 10148 */         project_value498 = project_result169;
/* 10149 */       }
/* 10150 */       project_values4 = new Object[27];
/* 10151 */       Object project_arg226 = sort_isNull ? null : project_converter229.apply(sort_value);
/* 10152 */
/* 10153 */       Double project_result229 = null;
/* 10154 */       try {
/* 10155 */         project_result229 = (Double)project_catalystConverter229.apply(project_udf229.apply(project_arg226));
/* 10156 */       } catch (Exception e) {
/* 10157 */         throw new org.apache.spark.SparkException(project_scalaUDF229.udfErrorMessage(), e);
/* 10158 */       }
/* 10159 */
/* 10160 */       boolean project_isNull663 = project_result229 == null;
/* 10161 */       double project_value663 = -1.0;
/* 10162 */       if (!project_isNull663) {
/* 10163 */         project_value663 = project_result229;
/* 10164 */       }
/* 10165 */       boolean project_isNull661 = false;
/* 10166 */       InternalRow project_value661 = null;
/* 10167 */       if (!false && project_isNull663) {
/* 10168 */         final InternalRow project_value665 = null;
/* 10169 */         project_isNull661 = true;
/* 10170 */         project_value661 = project_value665;
/* 10171 */       } else {
/* 10172 */         Object project_arg227 = sort_isNull ? null : project_converter231.apply(sort_value);
/* 10173 */
/* 10174 */         Double project_result231 = null;
/* 10175 */         try {
/* 10176 */           project_result231 = (Double)project_catalystConverter231.apply(project_udf231.apply(project_arg227));
/* 10177 */         } catch (Exception e) {
/* 10178 */           throw new org.apache.spark.SparkException(project_scalaUDF231.udfErrorMessage(), e);
/* 10179 */         }
/* 10180 */
/* 10181 */         boolean project_isNull667 = project_result231 == null;
/* 10182 */         double project_value667 = -1.0;
/* 10183 */         if (!project_isNull667) {
/* 10184 */           project_value667 = project_result231;
/* 10185 */         }
/* 10186 */         Object project_arg228 = project_isNull667 ? null : project_converter230.apply(project_value667);
/* 10187 */
/* 10188 */         InternalRow project_result230 = null;
/* 10189 */         try {
/* 10190 */           project_result230 = (InternalRow)project_catalystConverter230.apply(project_udf230.apply(project_arg228));
/* 10191 */         } catch (Exception e) {
/* 10192 */           throw new org.apache.spark.SparkException(project_scalaUDF230.udfErrorMessage(), e);
/* 10193 */         }
/* 10194 */
/* 10195 */         boolean project_isNull666 = project_result230 == null;
/* 10196 */         InternalRow project_value666 = null;
/* 10197 */         if (!project_isNull666) {
/* 10198 */           project_value666 = project_result230;
/* 10199 */         }
/* 10200 */         project_isNull661 = project_isNull666;
/* 10201 */         project_value661 = project_value666;
/* 10202 */       }
/* 10203 */       if (project_isNull661) {
/* 10204 */         project_values4[0] = null;
/* 10205 */       } else {
/* 10206 */         project_values4[0] = project_value661;
/* 10207 */       }
/* 10208 */
/* 10209 */       Object project_arg229 = sort_isNull1 ? null : project_converter232.apply(sort_value1);
/* 10210 */
/* 10211 */       Double project_result232 = null;
/* 10212 */       try {
/* 10213 */         project_result232 = (Double)project_catalystConverter232.apply(project_udf232.apply(project_arg229));
/* 10214 */       } catch (Exception e) {
/* 10215 */         throw new org.apache.spark.SparkException(project_scalaUDF232.udfErrorMessage(), e);
/* 10216 */       }
/* 10217 */
/* 10218 */       boolean project_isNull671 = project_result232 == null;
/* 10219 */       double project_value671 = -1.0;
/* 10220 */       if (!project_isNull671) {
/* 10221 */         project_value671 = project_result232;
/* 10222 */       }
/* 10223 */       boolean project_isNull669 = false;
/* 10224 */       InternalRow project_value669 = null;
/* 10225 */       if (!false && project_isNull671) {
/* 10226 */         final InternalRow project_value673 = null;
/* 10227 */         project_isNull669 = true;
/* 10228 */         project_value669 = project_value673;
/* 10229 */       } else {
/* 10230 */         Object project_arg230 = sort_isNull1 ? null : project_converter234.apply(sort_value1);
/* 10231 */
/* 10232 */         Double project_result234 = null;
/* 10233 */         try {
/* 10234 */           project_result234 = (Double)project_catalystConverter234.apply(project_udf234.apply(project_arg230));
/* 10235 */         } catch (Exception e) {
/* 10236 */           throw new org.apache.spark.SparkException(project_scalaUDF234.udfErrorMessage(), e);
/* 10237 */         }
/* 10238 */
/* 10239 */         boolean project_isNull675 = project_result234 == null;
/* 10240 */         double project_value675 = -1.0;
/* 10241 */         if (!project_isNull675) {
/* 10242 */           project_value675 = project_result234;
/* 10243 */         }
/* 10244 */         Object project_arg231 = project_isNull675 ? null : project_converter233.apply(project_value675);
/* 10245 */
/* 10246 */         InternalRow project_result233 = null;
/* 10247 */         try {
/* 10248 */           project_result233 = (InternalRow)project_catalystConverter233.apply(project_udf233.apply(project_arg231));
/* 10249 */         } catch (Exception e) {
/* 10250 */           throw new org.apache.spark.SparkException(project_scalaUDF233.udfErrorMessage(), e);
/* 10251 */         }
/* 10252 */
/* 10253 */         boolean project_isNull674 = project_result233 == null;
/* 10254 */         InternalRow project_value674 = null;
/* 10255 */         if (!project_isNull674) {
/* 10256 */           project_value674 = project_result233;
/* 10257 */         }
/* 10258 */         project_isNull669 = project_isNull674;
/* 10259 */         project_value669 = project_value674;
/* 10260 */       }
/* 10261 */       if (project_isNull669) {
/* 10262 */         project_values4[1] = null;
/* 10263 */       } else {
/* 10264 */         project_values4[1] = project_value669;
/* 10265 */       }
/* 10266 */
/* 10267 */       Object project_arg232 = sort_isNull2 ? null : project_converter235.apply(sort_value2);
/* 10268 */
/* 10269 */       Double project_result235 = null;
/* 10270 */       try {
/* 10271 */         project_result235 = (Double)project_catalystConverter235.apply(project_udf235.apply(project_arg232));
/* 10272 */       } catch (Exception e) {
/* 10273 */         throw new org.apache.spark.SparkException(project_scalaUDF235.udfErrorMessage(), e);
/* 10274 */       }
/* 10275 */
/* 10276 */       boolean project_isNull679 = project_result235 == null;
/* 10277 */       double project_value679 = -1.0;
/* 10278 */       if (!project_isNull679) {
/* 10279 */         project_value679 = project_result235;
/* 10280 */       }
/* 10281 */       boolean project_isNull677 = false;
/* 10282 */       InternalRow project_value677 = null;
/* 10283 */       if (!false && project_isNull679) {
/* 10284 */         final InternalRow project_value681 = null;
/* 10285 */         project_isNull677 = true;
/* 10286 */         project_value677 = project_value681;
/* 10287 */       } else {
/* 10288 */         Object project_arg233 = sort_isNull2 ? null : project_converter237.apply(sort_value2);
/* 10289 */
/* 10290 */         Double project_result237 = null;
/* 10291 */         try {
/* 10292 */           project_result237 = (Double)project_catalystConverter237.apply(project_udf237.apply(project_arg233));
/* 10293 */         } catch (Exception e) {
/* 10294 */           throw new org.apache.spark.SparkException(project_scalaUDF237.udfErrorMessage(), e);
/* 10295 */         }
/* 10296 */
/* 10297 */         boolean project_isNull683 = project_result237 == null;
/* 10298 */         double project_value683 = -1.0;
/* 10299 */         if (!project_isNull683) {
/* 10300 */           project_value683 = project_result237;
/* 10301 */         }
/* 10302 */         Object project_arg234 = project_isNull683 ? null : project_converter236.apply(project_value683);
/* 10303 */
/* 10304 */         InternalRow project_result236 = null;
/* 10305 */         try {
/* 10306 */           project_result236 = (InternalRow)project_catalystConverter236.apply(project_udf236.apply(project_arg234));
/* 10307 */         } catch (Exception e) {
/* 10308 */           throw new org.apache.spark.SparkException(project_scalaUDF236.udfErrorMessage(), e);
/* 10309 */         }
/* 10310 */
/* 10311 */         boolean project_isNull682 = project_result236 == null;
/* 10312 */         InternalRow project_value682 = null;
/* 10313 */         if (!project_isNull682) {
/* 10314 */           project_value682 = project_result236;
/* 10315 */         }
/* 10316 */         project_isNull677 = project_isNull682;
/* 10317 */         project_value677 = project_value682;
/* 10318 */       }
/* 10319 */       if (project_isNull677) {
/* 10320 */         project_values4[2] = null;
/* 10321 */       } else {
/* 10322 */         project_values4[2] = project_value677;
/* 10323 */       }
/* 10324 */
/* 10325 */       Object project_arg235 = sort_isNull3 ? null : project_converter238.apply(sort_value3);
/* 10326 */
/* 10327 */       Double project_result238 = null;
/* 10328 */       try {
/* 10329 */         project_result238 = (Double)project_catalystConverter238.apply(project_udf238.apply(project_arg235));
/* 10330 */       } catch (Exception e) {
/* 10331 */         throw new org.apache.spark.SparkException(project_scalaUDF238.udfErrorMessage(), e);
/* 10332 */       }
/* 10333 */
/* 10334 */       boolean project_isNull687 = project_result238 == null;
/* 10335 */       double project_value687 = -1.0;
/* 10336 */       if (!project_isNull687) {
/* 10337 */         project_value687 = project_result238;
/* 10338 */       }
/* 10339 */       boolean project_isNull685 = false;
/* 10340 */       InternalRow project_value685 = null;
/* 10341 */       if (!false && project_isNull687) {
/* 10342 */         final InternalRow project_value689 = null;
/* 10343 */         project_isNull685 = true;
/* 10344 */         project_value685 = project_value689;
/* 10345 */       } else {
/* 10346 */         Object project_arg236 = sort_isNull3 ? null : project_converter240.apply(sort_value3);
/* 10347 */
/* 10348 */         Double project_result240 = null;
/* 10349 */         try {
/* 10350 */           project_result240 = (Double)project_catalystConverter240.apply(project_udf240.apply(project_arg236));
/* 10351 */         } catch (Exception e) {
/* 10352 */           throw new org.apache.spark.SparkException(project_scalaUDF240.udfErrorMessage(), e);
/* 10353 */         }
/* 10354 */
/* 10355 */         boolean project_isNull691 = project_result240 == null;
/* 10356 */         double project_value691 = -1.0;
/* 10357 */         if (!project_isNull691) {
/* 10358 */           project_value691 = project_result240;
/* 10359 */         }
/* 10360 */         Object project_arg237 = project_isNull691 ? null : project_converter239.apply(project_value691);
/* 10361 */
/* 10362 */         InternalRow project_result239 = null;
/* 10363 */         try {
/* 10364 */           project_result239 = (InternalRow)project_catalystConverter239.apply(project_udf239.apply(project_arg237));
/* 10365 */         } catch (Exception e) {
/* 10366 */           throw new org.apache.spark.SparkException(project_scalaUDF239.udfErrorMessage(), e);
/* 10367 */         }
/* 10368 */
/* 10369 */         boolean project_isNull690 = project_result239 == null;
/* 10370 */         InternalRow project_value690 = null;
/* 10371 */         if (!project_isNull690) {
/* 10372 */           project_value690 = project_result239;
/* 10373 */         }
/* 10374 */         project_isNull685 = project_isNull690;
/* 10375 */         project_value685 = project_value690;
/* 10376 */       }
/* 10377 */       if (project_isNull685) {
/* 10378 */         project_values4[3] = null;
/* 10379 */       } else {
/* 10380 */         project_values4[3] = project_value685;
/* 10381 */       }
/* 10382 */
/* 10383 */       Object project_arg238 = sort_isNull4 ? null : project_converter241.apply(sort_value4);
/* 10384 */
/* 10385 */       Double project_result241 = null;
/* 10386 */       try {
/* 10387 */         project_result241 = (Double)project_catalystConverter241.apply(project_udf241.apply(project_arg238));
/* 10388 */       } catch (Exception e) {
/* 10389 */         throw new org.apache.spark.SparkException(project_scalaUDF241.udfErrorMessage(), e);
/* 10390 */       }
/* 10391 */
/* 10392 */       boolean project_isNull695 = project_result241 == null;
/* 10393 */       double project_value695 = -1.0;
/* 10394 */       if (!project_isNull695) {
/* 10395 */         project_value695 = project_result241;
/* 10396 */       }
/* 10397 */       boolean project_isNull693 = false;
/* 10398 */       InternalRow project_value693 = null;
/* 10399 */       if (!false && project_isNull695) {
/* 10400 */         final InternalRow project_value697 = null;
/* 10401 */         project_isNull693 = true;
/* 10402 */         project_value693 = project_value697;
/* 10403 */       } else {
/* 10404 */         Object project_arg239 = sort_isNull4 ? null : project_converter243.apply(sort_value4);
/* 10405 */
/* 10406 */         Double project_result243 = null;
/* 10407 */         try {
/* 10408 */           project_result243 = (Double)project_catalystConverter243.apply(project_udf243.apply(project_arg239));
/* 10409 */         } catch (Exception e) {
/* 10410 */           throw new org.apache.spark.SparkException(project_scalaUDF243.udfErrorMessage(), e);
/* 10411 */         }
/* 10412 */
/* 10413 */         boolean project_isNull699 = project_result243 == null;
/* 10414 */         double project_value699 = -1.0;
/* 10415 */         if (!project_isNull699) {
/* 10416 */           project_value699 = project_result243;
/* 10417 */         }
/* 10418 */         Object project_arg240 = project_isNull699 ? null : project_converter242.apply(project_value699);
/* 10419 */
/* 10420 */         InternalRow project_result242 = null;
/* 10421 */         try {
/* 10422 */           project_result242 = (InternalRow)project_catalystConverter242.apply(project_udf242.apply(project_arg240));
/* 10423 */         } catch (Exception e) {
/* 10424 */           throw new org.apache.spark.SparkException(project_scalaUDF242.udfErrorMessage(), e);
/* 10425 */         }
/* 10426 */
/* 10427 */         boolean project_isNull698 = project_result242 == null;
/* 10428 */         InternalRow project_value698 = null;
/* 10429 */         if (!project_isNull698) {
/* 10430 */           project_value698 = project_result242;
/* 10431 */         }
/* 10432 */         project_isNull693 = project_isNull698;
/* 10433 */         project_value693 = project_value698;
/* 10434 */       }
/* 10435 */       if (project_isNull693) {
/* 10436 */         project_values4[4] = null;
/* 10437 */       } else {
/* 10438 */         project_values4[4] = project_value693;
/* 10439 */       }
/* 10440 */
/* 10441 */       Object project_arg241 = sort_isNull5 ? null : project_converter244.apply(sort_value5);
/* 10442 */
/* 10443 */       Double project_result244 = null;
/* 10444 */       try {
/* 10445 */         project_result244 = (Double)project_catalystConverter244.apply(project_udf244.apply(project_arg241));
/* 10446 */       } catch (Exception e) {
/* 10447 */         throw new org.apache.spark.SparkException(project_scalaUDF244.udfErrorMessage(), e);
/* 10448 */       }
/* 10449 */
/* 10450 */       boolean project_isNull703 = project_result244 == null;
/* 10451 */       double project_value703 = -1.0;
/* 10452 */       if (!project_isNull703) {
/* 10453 */         project_value703 = project_result244;
/* 10454 */       }
/* 10455 */       boolean project_isNull701 = false;
/* 10456 */       InternalRow project_value701 = null;
/* 10457 */       if (!false && project_isNull703) {
/* 10458 */         final InternalRow project_value705 = null;
/* 10459 */         project_isNull701 = true;
/* 10460 */         project_value701 = project_value705;
/* 10461 */       } else {
/* 10462 */         Object project_arg242 = sort_isNull5 ? null : project_converter246.apply(sort_value5);
/* 10463 */
/* 10464 */         Double project_result246 = null;
/* 10465 */         try {
/* 10466 */           project_result246 = (Double)project_catalystConverter246.apply(project_udf246.apply(project_arg242));
/* 10467 */         } catch (Exception e) {
/* 10468 */           throw new org.apache.spark.SparkException(project_scalaUDF246.udfErrorMessage(), e);
/* 10469 */         }
/* 10470 */
/* 10471 */         boolean project_isNull707 = project_result246 == null;
/* 10472 */         double project_value707 = -1.0;
/* 10473 */         if (!project_isNull707) {
/* 10474 */           project_value707 = project_result246;
/* 10475 */         }
/* 10476 */         Object project_arg243 = project_isNull707 ? null : project_converter245.apply(project_value707);
/* 10477 */
/* 10478 */         InternalRow project_result245 = null;
/* 10479 */         try {
/* 10480 */           project_result245 = (InternalRow)project_catalystConverter245.apply(project_udf245.apply(project_arg243));
/* 10481 */         } catch (Exception e) {
/* 10482 */           throw new org.apache.spark.SparkException(project_scalaUDF245.udfErrorMessage(), e);
/* 10483 */         }
/* 10484 */
/* 10485 */         boolean project_isNull706 = project_result245 == null;
/* 10486 */         InternalRow project_value706 = null;
/* 10487 */         if (!project_isNull706) {
/* 10488 */           project_value706 = project_result245;
/* 10489 */         }
/* 10490 */         project_isNull701 = project_isNull706;
/* 10491 */         project_value701 = project_value706;
/* 10492 */       }
/* 10493 */       if (project_isNull701) {
/* 10494 */         project_values4[5] = null;
/* 10495 */       } else {
/* 10496 */         project_values4[5] = project_value701;
/* 10497 */       }
/* 10498 */
/* 10499 */       if (sort_isNull6) {
/* 10500 */         project_values4[6] = null;
/* 10501 */       } else {
/* 10502 */         project_values4[6] = sort_value6;
/* 10503 */       }
/* 10504 */
/* 10505 */       if (sort_isNull7) {
/* 10506 */         project_values4[7] = null;
/* 10507 */       } else {
/* 10508 */         project_values4[7] = sort_value7;
/* 10509 */       }
/* 10510 */
/* 10511 */       if (sort_isNull8) {
/* 10512 */         project_values4[8] = null;
/* 10513 */       } else {
/* 10514 */         project_values4[8] = sort_value8;
/* 10515 */       }
/* 10516 */
/* 10517 */       if (sort_isNull9) {
/* 10518 */         project_values4[9] = null;
/* 10519 */       } else {
/* 10520 */         project_values4[9] = sort_value9;
/* 10521 */       }
/* 10522 */
/* 10523 */       if (sort_isNull10) {
/* 10524 */         project_values4[10] = null;
/* 10525 */       } else {
/* 10526 */         project_values4[10] = sort_value10;
/* 10527 */       }
/* 10528 */
/* 10529 */       if (sort_isNull11) {
/* 10530 */         project_values4[11] = null;
/* 10531 */       } else {
/* 10532 */         project_values4[11] = sort_value11;
/* 10533 */       }
/* 10534 */
/* 10535 */       if (sort_isNull12) {
/* 10536 */         project_values4[12] = null;
/* 10537 */       } else {
/* 10538 */         project_values4[12] = sort_value12;
/* 10539 */       }
/* 10540 */
/* 10541 */       Object project_arg244 = sort_isNull13 ? null : project_converter247.apply(sort_value13);
/* 10542 */
/* 10543 */       Double project_result247 = null;
/* 10544 */       try {
/* 10545 */         project_result247 = (Double)project_catalystConverter247.apply(project_udf247.apply(project_arg244));
/* 10546 */       } catch (Exception e) {
/* 10547 */         throw new org.apache.spark.SparkException(project_scalaUDF247.udfErrorMessage(), e);
/* 10548 */       }
/* 10549 */
/* 10550 */       boolean project_isNull718 = project_result247 == null;
/* 10551 */       double project_value718 = -1.0;
/* 10552 */       if (!project_isNull718) {
/* 10553 */         project_value718 = project_result247;
/* 10554 */       }
/* 10555 */       boolean project_isNull716 = false;
/* 10556 */       InternalRow project_value716 = null;
/* 10557 */       if (!false && project_isNull718) {
/* 10558 */         final InternalRow project_value720 = null;
/* 10559 */         project_isNull716 = true;
/* 10560 */         project_value716 = project_value720;
/* 10561 */       } else {
/* 10562 */         Object project_arg245 = sort_isNull13 ? null : project_converter249.apply(sort_value13);
/* 10563 */
/* 10564 */         Double project_result249 = null;
/* 10565 */         try {
/* 10566 */           project_result249 = (Double)project_catalystConverter249.apply(project_udf249.apply(project_arg245));
/* 10567 */         } catch (Exception e) {
/* 10568 */           throw new org.apache.spark.SparkException(project_scalaUDF249.udfErrorMessage(), e);
/* 10569 */         }
/* 10570 */
/* 10571 */         boolean project_isNull722 = project_result249 == null;
/* 10572 */         double project_value722 = -1.0;
/* 10573 */         if (!project_isNull722) {
/* 10574 */           project_value722 = project_result249;
/* 10575 */         }
/* 10576 */         Object project_arg246 = project_isNull722 ? null : project_converter248.apply(project_value722);
/* 10577 */
/* 10578 */         InternalRow project_result248 = null;
/* 10579 */         try {
/* 10580 */           project_result248 = (InternalRow)project_catalystConverter248.apply(project_udf248.apply(project_arg246));
/* 10581 */         } catch (Exception e) {
/* 10582 */           throw new org.apache.spark.SparkException(project_scalaUDF248.udfErrorMessage(), e);
/* 10583 */         }
/* 10584 */
/* 10585 */         boolean project_isNull721 = project_result248 == null;
/* 10586 */         InternalRow project_value721 = null;
/* 10587 */         if (!project_isNull721) {
/* 10588 */           project_value721 = project_result248;
/* 10589 */         }
/* 10590 */         project_isNull716 = project_isNull721;
/* 10591 */         project_value716 = project_value721;
/* 10592 */       }
/* 10593 */       if (project_isNull716) {
/* 10594 */         project_values4[13] = null;
/* 10595 */       } else {
/* 10596 */         project_values4[13] = project_value716;
/* 10597 */       }
/* 10598 */
/* 10599 */       Object project_arg247 = sort_isNull14 ? null : project_converter250.apply(sort_value14);
/* 10600 */
/* 10601 */       Double project_result250 = null;
/* 10602 */       try {
/* 10603 */         project_result250 = (Double)project_catalystConverter250.apply(project_udf250.apply(project_arg247));
/* 10604 */       } catch (Exception e) {
/* 10605 */         throw new org.apache.spark.SparkException(project_scalaUDF250.udfErrorMessage(), e);
/* 10606 */       }
/* 10607 */
/* 10608 */       boolean project_isNull726 = project_result250 == null;
/* 10609 */       double project_value726 = -1.0;
/* 10610 */       if (!project_isNull726) {
/* 10611 */         project_value726 = project_result250;
/* 10612 */       }
/* 10613 */       boolean project_isNull724 = false;
/* 10614 */       InternalRow project_value724 = null;
/* 10615 */       if (!false && project_isNull726) {
/* 10616 */         final InternalRow project_value728 = null;
/* 10617 */         project_isNull724 = true;
/* 10618 */         project_value724 = project_value728;
/* 10619 */       } else {
/* 10620 */         Object project_arg248 = sort_isNull14 ? null : project_converter252.apply(sort_value14);
/* 10621 */
/* 10622 */         Double project_result252 = null;
/* 10623 */         try {
/* 10624 */           project_result252 = (Double)project_catalystConverter252.apply(project_udf252.apply(project_arg248));
/* 10625 */         } catch (Exception e) {
/* 10626 */           throw new org.apache.spark.SparkException(project_scalaUDF252.udfErrorMessage(), e);
/* 10627 */         }
/* 10628 */
/* 10629 */         boolean project_isNull730 = project_result252 == null;
/* 10630 */         double project_value730 = -1.0;
/* 10631 */         if (!project_isNull730) {
/* 10632 */           project_value730 = project_result252;
/* 10633 */         }
/* 10634 */         Object project_arg249 = project_isNull730 ? null : project_converter251.apply(project_value730);
/* 10635 */
/* 10636 */         InternalRow project_result251 = null;
/* 10637 */         try {
/* 10638 */           project_result251 = (InternalRow)project_catalystConverter251.apply(project_udf251.apply(project_arg249));
/* 10639 */         } catch (Exception e) {
/* 10640 */           throw new org.apache.spark.SparkException(project_scalaUDF251.udfErrorMessage(), e);
/* 10641 */         }
/* 10642 */
/* 10643 */         boolean project_isNull729 = project_result251 == null;
/* 10644 */         InternalRow project_value729 = null;
/* 10645 */         if (!project_isNull729) {
/* 10646 */           project_value729 = project_result251;
/* 10647 */         }
/* 10648 */         project_isNull724 = project_isNull729;
/* 10649 */         project_value724 = project_value729;
/* 10650 */       }
/* 10651 */       if (project_isNull724) {
/* 10652 */         project_values4[14] = null;
/* 10653 */       } else {
/* 10654 */         project_values4[14] = project_value724;
/* 10655 */       }
/* 10656 */
/* 10657 */       Object project_arg250 = sort_isNull15 ? null : project_converter253.apply(sort_value15);
/* 10658 */
/* 10659 */       Double project_result253 = null;
/* 10660 */       try {
/* 10661 */         project_result253 = (Double)project_catalystConverter253.apply(project_udf253.apply(project_arg250));
/* 10662 */       } catch (Exception e) {
/* 10663 */         throw new org.apache.spark.SparkException(project_scalaUDF253.udfErrorMessage(), e);
/* 10664 */       }
/* 10665 */
/* 10666 */       boolean project_isNull734 = project_result253 == null;
/* 10667 */       double project_value734 = -1.0;
/* 10668 */       if (!project_isNull734) {
/* 10669 */         project_value734 = project_result253;
/* 10670 */       }
/* 10671 */       boolean project_isNull732 = false;
/* 10672 */       InternalRow project_value732 = null;
/* 10673 */       if (!false && project_isNull734) {
/* 10674 */         final InternalRow project_value736 = null;
/* 10675 */         project_isNull732 = true;
/* 10676 */         project_value732 = project_value736;
/* 10677 */       } else {
/* 10678 */         Object project_arg251 = sort_isNull15 ? null : project_converter255.apply(sort_value15);
/* 10679 */
/* 10680 */         Double project_result255 = null;
/* 10681 */         try {
/* 10682 */           project_result255 = (Double)project_catalystConverter255.apply(project_udf255.apply(project_arg251));
/* 10683 */         } catch (Exception e) {
/* 10684 */           throw new org.apache.spark.SparkException(project_scalaUDF255.udfErrorMessage(), e);
/* 10685 */         }
/* 10686 */
/* 10687 */         boolean project_isNull738 = project_result255 == null;
/* 10688 */         double project_value738 = -1.0;
/* 10689 */         if (!project_isNull738) {
/* 10690 */           project_value738 = project_result255;
/* 10691 */         }
/* 10692 */         Object project_arg252 = project_isNull738 ? null : project_converter254.apply(project_value738);
/* 10693 */
/* 10694 */         InternalRow project_result254 = null;
/* 10695 */         try {
/* 10696 */           project_result254 = (InternalRow)project_catalystConverter254.apply(project_udf254.apply(project_arg252));
/* 10697 */         } catch (Exception e) {
/* 10698 */           throw new org.apache.spark.SparkException(project_scalaUDF254.udfErrorMessage(), e);
/* 10699 */         }
/* 10700 */
/* 10701 */         boolean project_isNull737 = project_result254 == null;
/* 10702 */         InternalRow project_value737 = null;
/* 10703 */         if (!project_isNull737) {
/* 10704 */           project_value737 = project_result254;
/* 10705 */         }
/* 10706 */         project_isNull732 = project_isNull737;
/* 10707 */         project_value732 = project_value737;
/* 10708 */       }
/* 10709 */       if (project_isNull732) {
/* 10710 */         project_values4[15] = null;
/* 10711 */       } else {
/* 10712 */         project_values4[15] = project_value732;
/* 10713 */       }
/* 10714 */
/* 10715 */       if (sort_isNull16) {
/* 10716 */         project_values4[16] = null;
/* 10717 */       } else {
/* 10718 */         project_values4[16] = sort_value16;
/* 10719 */       }
/* 10720 */
/* 10721 */       Object project_arg253 = sort_isNull17 ? null : project_converter256.apply(sort_value17);
/* 10722 */
/* 10723 */       Double project_result256 = null;
/* 10724 */       try {
/* 10725 */         project_result256 = (Double)project_catalystConverter256.apply(project_udf256.apply(project_arg253));
/* 10726 */       } catch (Exception e) {
/* 10727 */         throw new org.apache.spark.SparkException(project_scalaUDF256.udfErrorMessage(), e);
/* 10728 */       }
/* 10729 */
/* 10730 */       boolean project_isNull743 = project_result256 == null;
/* 10731 */       double project_value743 = -1.0;
/* 10732 */       if (!project_isNull743) {
/* 10733 */         project_value743 = project_result256;
/* 10734 */       }
/* 10735 */       boolean project_isNull741 = false;
/* 10736 */       InternalRow project_value741 = null;
/* 10737 */       if (!false && project_isNull743) {
/* 10738 */         final InternalRow project_value745 = null;
/* 10739 */         project_isNull741 = true;
/* 10740 */         project_value741 = project_value745;
/* 10741 */       } else {
/* 10742 */         Object project_arg254 = sort_isNull17 ? null : project_converter258.apply(sort_value17);
/* 10743 */
/* 10744 */         Double project_result258 = null;
/* 10745 */         try {
/* 10746 */           project_result258 = (Double)project_catalystConverter258.apply(project_udf258.apply(project_arg254));
/* 10747 */         } catch (Exception e) {
/* 10748 */           throw new org.apache.spark.SparkException(project_scalaUDF258.udfErrorMessage(), e);
/* 10749 */         }
/* 10750 */
/* 10751 */         boolean project_isNull747 = project_result258 == null;
/* 10752 */         double project_value747 = -1.0;
/* 10753 */         if (!project_isNull747) {
/* 10754 */           project_value747 = project_result258;
/* 10755 */         }
/* 10756 */         Object project_arg255 = project_isNull747 ? null : project_converter257.apply(project_value747);
/* 10757 */
/* 10758 */         InternalRow project_result257 = null;
/* 10759 */         try {
/* 10760 */           project_result257 = (InternalRow)project_catalystConverter257.apply(project_udf257.apply(project_arg255));
/* 10761 */         } catch (Exception e) {
/* 10762 */           throw new org.apache.spark.SparkException(project_scalaUDF257.udfErrorMessage(), e);
/* 10763 */         }
/* 10764 */
/* 10765 */         boolean project_isNull746 = project_result257 == null;
/* 10766 */         InternalRow project_value746 = null;
/* 10767 */         if (!project_isNull746) {
/* 10768 */           project_value746 = project_result257;
/* 10769 */         }
/* 10770 */         project_isNull741 = project_isNull746;
/* 10771 */         project_value741 = project_value746;
/* 10772 */       }
/* 10773 */       if (project_isNull741) {
/* 10774 */         project_values4[17] = null;
/* 10775 */       } else {
/* 10776 */         project_values4[17] = project_value741;
/* 10777 */       }
/* 10778 */
/* 10779 */       Object project_arg256 = sort_isNull18 ? null : project_converter259.apply(sort_value18);
/* 10780 */
/* 10781 */       Double project_result259 = null;
/* 10782 */       try {
/* 10783 */         project_result259 = (Double)project_catalystConverter259.apply(project_udf259.apply(project_arg256));
/* 10784 */       } catch (Exception e) {
/* 10785 */         throw new org.apache.spark.SparkException(project_scalaUDF259.udfErrorMessage(), e);
/* 10786 */       }
/* 10787 */
/* 10788 */       boolean project_isNull751 = project_result259 == null;
/* 10789 */       double project_value751 = -1.0;
/* 10790 */       if (!project_isNull751) {
/* 10791 */         project_value751 = project_result259;
/* 10792 */       }
/* 10793 */       boolean project_isNull749 = false;
/* 10794 */       InternalRow project_value749 = null;
/* 10795 */       if (!false && project_isNull751) {
/* 10796 */         final InternalRow project_value753 = null;
/* 10797 */         project_isNull749 = true;
/* 10798 */         project_value749 = project_value753;
/* 10799 */       } else {
/* 10800 */         Object project_arg257 = sort_isNull18 ? null : project_converter261.apply(sort_value18);
/* 10801 */
/* 10802 */         Double project_result261 = null;
/* 10803 */         try {
/* 10804 */           project_result261 = (Double)project_catalystConverter261.apply(project_udf261.apply(project_arg257));
/* 10805 */         } catch (Exception e) {
/* 10806 */           throw new org.apache.spark.SparkException(project_scalaUDF261.udfErrorMessage(), e);
/* 10807 */         }
/* 10808 */
/* 10809 */         boolean project_isNull755 = project_result261 == null;
/* 10810 */         double project_value755 = -1.0;
/* 10811 */         if (!project_isNull755) {
/* 10812 */           project_value755 = project_result261;
/* 10813 */         }
/* 10814 */         Object project_arg258 = project_isNull755 ? null : project_converter260.apply(project_value755);
/* 10815 */
/* 10816 */         InternalRow project_result260 = null;
/* 10817 */         try {
/* 10818 */           project_result260 = (InternalRow)project_catalystConverter260.apply(project_udf260.apply(project_arg258));
/* 10819 */         } catch (Exception e) {
/* 10820 */           throw new org.apache.spark.SparkException(project_scalaUDF260.udfErrorMessage(), e);
/* 10821 */         }
/* 10822 */
/* 10823 */         boolean project_isNull754 = project_result260 == null;
/* 10824 */         InternalRow project_value754 = null;
/* 10825 */         if (!project_isNull754) {
/* 10826 */           project_value754 = project_result260;
/* 10827 */         }
/* 10828 */         project_isNull749 = project_isNull754;
/* 10829 */         project_value749 = project_value754;
/* 10830 */       }
/* 10831 */       if (project_isNull749) {
/* 10832 */         project_values4[18] = null;
/* 10833 */       } else {
/* 10834 */         project_values4[18] = project_value749;
/* 10835 */       }
/* 10836 */
/* 10837 */       Object project_arg259 = sort_isNull19 ? null : project_converter262.apply(sort_value19);
/* 10838 */
/* 10839 */       Double project_result262 = null;
/* 10840 */       try {
/* 10841 */         project_result262 = (Double)project_catalystConverter262.apply(project_udf262.apply(project_arg259));
/* 10842 */       } catch (Exception e) {
/* 10843 */         throw new org.apache.spark.SparkException(project_scalaUDF262.udfErrorMessage(), e);
/* 10844 */       }
/* 10845 */
/* 10846 */       boolean project_isNull759 = project_result262 == null;
/* 10847 */       double project_value759 = -1.0;
/* 10848 */       if (!project_isNull759) {
/* 10849 */         project_value759 = project_result262;
/* 10850 */       }
/* 10851 */       boolean project_isNull757 = false;
/* 10852 */       InternalRow project_value757 = null;
/* 10853 */       if (!false && project_isNull759) {
/* 10854 */         final InternalRow project_value761 = null;
/* 10855 */         project_isNull757 = true;
/* 10856 */         project_value757 = project_value761;
/* 10857 */       } else {
/* 10858 */         Object project_arg260 = sort_isNull19 ? null : project_converter264.apply(sort_value19);
/* 10859 */
/* 10860 */         Double project_result264 = null;
/* 10861 */         try {
/* 10862 */           project_result264 = (Double)project_catalystConverter264.apply(project_udf264.apply(project_arg260));
/* 10863 */         } catch (Exception e) {
/* 10864 */           throw new org.apache.spark.SparkException(project_scalaUDF264.udfErrorMessage(), e);
/* 10865 */         }
/* 10866 */
/* 10867 */         boolean project_isNull763 = project_result264 == null;
/* 10868 */         double project_value763 = -1.0;
/* 10869 */         if (!project_isNull763) {
/* 10870 */           project_value763 = project_result264;
/* 10871 */         }
/* 10872 */         Object project_arg261 = project_isNull763 ? null : project_converter263.apply(project_value763);
/* 10873 */
/* 10874 */         InternalRow project_result263 = null;
/* 10875 */         try {
/* 10876 */           project_result263 = (InternalRow)project_catalystConverter263.apply(project_udf263.apply(project_arg261));
/* 10877 */         } catch (Exception e) {
/* 10878 */           throw new org.apache.spark.SparkException(project_scalaUDF263.udfErrorMessage(), e);
/* 10879 */         }
/* 10880 */
/* 10881 */         boolean project_isNull762 = project_result263 == null;
/* 10882 */         InternalRow project_value762 = null;
/* 10883 */         if (!project_isNull762) {
/* 10884 */           project_value762 = project_result263;
/* 10885 */         }
/* 10886 */         project_isNull757 = project_isNull762;
/* 10887 */         project_value757 = project_value762;
/* 10888 */       }
/* 10889 */       if (project_isNull757) {
/* 10890 */         project_values4[19] = null;
/* 10891 */       } else {
/* 10892 */         project_values4[19] = project_value757;
/* 10893 */       }
/* 10894 */
/* 10895 */       Object project_arg262 = sort_isNull20 ? null : project_converter265.apply(sort_value20);
/* 10896 */
/* 10897 */       Double project_result265 = null;
/* 10898 */       try {
/* 10899 */         project_result265 = (Double)project_catalystConverter265.apply(project_udf265.apply(project_arg262));
/* 10900 */       } catch (Exception e) {
/* 10901 */         throw new org.apache.spark.SparkException(project_scalaUDF265.udfErrorMessage(), e);
/* 10902 */       }
/* 10903 */
/* 10904 */       boolean project_isNull767 = project_result265 == null;
/* 10905 */       double project_value767 = -1.0;
/* 10906 */       if (!project_isNull767) {
/* 10907 */         project_value767 = project_result265;
/* 10908 */       }
/* 10909 */       boolean project_isNull765 = false;
/* 10910 */       InternalRow project_value765 = null;
/* 10911 */       if (!false && project_isNull767) {
/* 10912 */         final InternalRow project_value769 = null;
/* 10913 */         project_isNull765 = true;
/* 10914 */         project_value765 = project_value769;
/* 10915 */       } else {
/* 10916 */         Object project_arg263 = sort_isNull20 ? null : project_converter267.apply(sort_value20);
/* 10917 */
/* 10918 */         Double project_result267 = null;
/* 10919 */         try {
/* 10920 */           project_result267 = (Double)project_catalystConverter267.apply(project_udf267.apply(project_arg263));
/* 10921 */         } catch (Exception e) {
/* 10922 */           throw new org.apache.spark.SparkException(project_scalaUDF267.udfErrorMessage(), e);
/* 10923 */         }
/* 10924 */
/* 10925 */         boolean project_isNull771 = project_result267 == null;
/* 10926 */         double project_value771 = -1.0;
/* 10927 */         if (!project_isNull771) {
/* 10928 */           project_value771 = project_result267;
/* 10929 */         }
/* 10930 */         Object project_arg264 = project_isNull771 ? null : project_converter266.apply(project_value771);
/* 10931 */
/* 10932 */         InternalRow project_result266 = null;
/* 10933 */         try {
/* 10934 */           project_result266 = (InternalRow)project_catalystConverter266.apply(project_udf266.apply(project_arg264));
/* 10935 */         } catch (Exception e) {
/* 10936 */           throw new org.apache.spark.SparkException(project_scalaUDF266.udfErrorMessage(), e);
/* 10937 */         }
/* 10938 */
/* 10939 */         boolean project_isNull770 = project_result266 == null;
/* 10940 */         InternalRow project_value770 = null;
/* 10941 */         if (!project_isNull770) {
/* 10942 */           project_value770 = project_result266;
/* 10943 */         }
/* 10944 */         project_isNull765 = project_isNull770;
/* 10945 */         project_value765 = project_value770;
/* 10946 */       }
/* 10947 */       if (project_isNull765) {
/* 10948 */         project_values4[20] = null;
/* 10949 */       } else {
/* 10950 */         project_values4[20] = project_value765;
/* 10951 */       }
/* 10952 */
/* 10953 */       Object project_arg265 = sort_isNull21 ? null : project_converter268.apply(sort_value21);
/* 10954 */
/* 10955 */       Double project_result268 = null;
/* 10956 */       try {
/* 10957 */         project_result268 = (Double)project_catalystConverter268.apply(project_udf268.apply(project_arg265));
/* 10958 */       } catch (Exception e) {
/* 10959 */         throw new org.apache.spark.SparkException(project_scalaUDF268.udfErrorMessage(), e);
/* 10960 */       }
/* 10961 */
/* 10962 */       boolean project_isNull775 = project_result268 == null;
/* 10963 */       double project_value775 = -1.0;
/* 10964 */       if (!project_isNull775) {
/* 10965 */         project_value775 = project_result268;
/* 10966 */       }
/* 10967 */       boolean project_isNull773 = false;
/* 10968 */       InternalRow project_value773 = null;
/* 10969 */       if (!false && project_isNull775) {
/* 10970 */         final InternalRow project_value777 = null;
/* 10971 */         project_isNull773 = true;
/* 10972 */         project_value773 = project_value777;
/* 10973 */       } else {
/* 10974 */         Object project_arg266 = sort_isNull21 ? null : project_converter270.apply(sort_value21);
/* 10975 */
/* 10976 */         Double project_result270 = null;
/* 10977 */         try {
/* 10978 */           project_result270 = (Double)project_catalystConverter270.apply(project_udf270.apply(project_arg266));
/* 10979 */         } catch (Exception e) {
/* 10980 */           throw new org.apache.spark.SparkException(project_scalaUDF270.udfErrorMessage(), e);
/* 10981 */         }
/* 10982 */
/* 10983 */         boolean project_isNull779 = project_result270 == null;
/* 10984 */         double project_value779 = -1.0;
/* 10985 */         if (!project_isNull779) {
/* 10986 */           project_value779 = project_result270;
/* 10987 */         }
/* 10988 */         Object project_arg267 = project_isNull779 ? null : project_converter269.apply(project_value779);
/* 10989 */
/* 10990 */         InternalRow project_result269 = null;
/* 10991 */         try {
/* 10992 */           project_result269 = (InternalRow)project_catalystConverter269.apply(project_udf269.apply(project_arg267));
/* 10993 */         } catch (Exception e) {
/* 10994 */           throw new org.apache.spark.SparkException(project_scalaUDF269.udfErrorMessage(), e);
/* 10995 */         }
/* 10996 */
/* 10997 */         boolean project_isNull778 = project_result269 == null;
/* 10998 */         InternalRow project_value778 = null;
/* 10999 */         if (!project_isNull778) {
/* 11000 */           project_value778 = project_result269;
/* 11001 */         }
/* 11002 */         project_isNull773 = project_isNull778;
/* 11003 */         project_value773 = project_value778;
/* 11004 */       }
/* 11005 */       if (project_isNull773) {
/* 11006 */         project_values4[21] = null;
/* 11007 */       } else {
/* 11008 */         project_values4[21] = project_value773;
/* 11009 */       }
/* 11010 */
/* 11011 */       Object project_arg268 = sort_isNull22 ? null : project_converter271.apply(sort_value22);
/* 11012 */
/* 11013 */       Double project_result271 = null;
/* 11014 */       try {
/* 11015 */         project_result271 = (Double)project_catalystConverter271.apply(project_udf271.apply(project_arg268));
/* 11016 */       } catch (Exception e) {
/* 11017 */         throw new org.apache.spark.SparkException(project_scalaUDF271.udfErrorMessage(), e);
/* 11018 */       }
/* 11019 */
/* 11020 */       boolean project_isNull783 = project_result271 == null;
/* 11021 */       double project_value783 = -1.0;
/* 11022 */       if (!project_isNull783) {
/* 11023 */         project_value783 = project_result271;
/* 11024 */       }
/* 11025 */       boolean project_isNull781 = false;
/* 11026 */       InternalRow project_value781 = null;
/* 11027 */       if (!false && project_isNull783) {
/* 11028 */         final InternalRow project_value785 = null;
/* 11029 */         project_isNull781 = true;
/* 11030 */         project_value781 = project_value785;
/* 11031 */       } else {
/* 11032 */         Object project_arg269 = sort_isNull22 ? null : project_converter273.apply(sort_value22);
/* 11033 */
/* 11034 */         Double project_result273 = null;
/* 11035 */         try {
/* 11036 */           project_result273 = (Double)project_catalystConverter273.apply(project_udf273.apply(project_arg269));
/* 11037 */         } catch (Exception e) {
/* 11038 */           throw new org.apache.spark.SparkException(project_scalaUDF273.udfErrorMessage(), e);
/* 11039 */         }
/* 11040 */
/* 11041 */         boolean project_isNull787 = project_result273 == null;
/* 11042 */         double project_value787 = -1.0;
/* 11043 */         if (!project_isNull787) {
/* 11044 */           project_value787 = project_result273;
/* 11045 */         }
/* 11046 */         Object project_arg270 = project_isNull787 ? null : project_converter272.apply(project_value787);
/* 11047 */
/* 11048 */         InternalRow project_result272 = null;
/* 11049 */         try {
/* 11050 */           project_result272 = (InternalRow)project_catalystConverter272.apply(project_udf272.apply(project_arg270));
/* 11051 */         } catch (Exception e) {
/* 11052 */           throw new org.apache.spark.SparkException(project_scalaUDF272.udfErrorMessage(), e);
/* 11053 */         }
/* 11054 */
/* 11055 */         boolean project_isNull786 = project_result272 == null;
/* 11056 */         InternalRow project_value786 = null;
/* 11057 */         if (!project_isNull786) {
/* 11058 */           project_value786 = project_result272;
/* 11059 */         }
/* 11060 */         project_isNull781 = project_isNull786;
/* 11061 */         project_value781 = project_value786;
/* 11062 */       }
/* 11063 */       if (project_isNull781) {
/* 11064 */         project_values4[22] = null;
/* 11065 */       } else {
/* 11066 */         project_values4[22] = project_value781;
/* 11067 */       }
/* 11068 */
/* 11069 */       Object project_arg271 = sort_isNull23 ? null : project_converter274.apply(sort_value23);
/* 11070 */
/* 11071 */       Double project_result274 = null;
/* 11072 */       try {
/* 11073 */         project_result274 = (Double)project_catalystConverter274.apply(project_udf274.apply(project_arg271));
/* 11074 */       } catch (Exception e) {
/* 11075 */         throw new org.apache.spark.SparkException(project_scalaUDF274.udfErrorMessage(), e);
/* 11076 */       }
/* 11077 */
/* 11078 */       boolean project_isNull791 = project_result274 == null;
/* 11079 */       double project_value791 = -1.0;
/* 11080 */       if (!project_isNull791) {
/* 11081 */         project_value791 = project_result274;
/* 11082 */       }
/* 11083 */       boolean project_isNull789 = false;
/* 11084 */       InternalRow project_value789 = null;
/* 11085 */       if (!false && project_isNull791) {
/* 11086 */         final InternalRow project_value793 = null;
/* 11087 */         project_isNull789 = true;
/* 11088 */         project_value789 = project_value793;
/* 11089 */       } else {
/* 11090 */         Object project_arg272 = sort_isNull23 ? null : project_converter276.apply(sort_value23);
/* 11091 */
/* 11092 */         Double project_result276 = null;
/* 11093 */         try {
/* 11094 */           project_result276 = (Double)project_catalystConverter276.apply(project_udf276.apply(project_arg272));
/* 11095 */         } catch (Exception e) {
/* 11096 */           throw new org.apache.spark.SparkException(project_scalaUDF276.udfErrorMessage(), e);
/* 11097 */         }
/* 11098 */
/* 11099 */         boolean project_isNull795 = project_result276 == null;
/* 11100 */         double project_value795 = -1.0;
/* 11101 */         if (!project_isNull795) {
/* 11102 */           project_value795 = project_result276;
/* 11103 */         }
/* 11104 */         Object project_arg273 = project_isNull795 ? null : project_converter275.apply(project_value795);
/* 11105 */
/* 11106 */         InternalRow project_result275 = null;
/* 11107 */         try {
/* 11108 */           project_result275 = (InternalRow)project_catalystConverter275.apply(project_udf275.apply(project_arg273));
/* 11109 */         } catch (Exception e) {
/* 11110 */           throw new org.apache.spark.SparkException(project_scalaUDF275.udfErrorMessage(), e);
/* 11111 */         }
/* 11112 */
/* 11113 */         boolean project_isNull794 = project_result275 == null;
/* 11114 */         InternalRow project_value794 = null;
/* 11115 */         if (!project_isNull794) {
/* 11116 */           project_value794 = project_result275;
/* 11117 */         }
/* 11118 */         project_isNull789 = project_isNull794;
/* 11119 */         project_value789 = project_value794;
/* 11120 */       }
/* 11121 */       if (project_isNull789) {
/* 11122 */         project_values4[23] = null;
/* 11123 */       } else {
/* 11124 */         project_values4[23] = project_value789;
/* 11125 */       }
/* 11126 */
/* 11127 */       Object project_arg274 = sort_isNull24 ? null : project_converter277.apply(sort_value24);
/* 11128 */
/* 11129 */       Double project_result277 = null;
/* 11130 */       try {
/* 11131 */         project_result277 = (Double)project_catalystConverter277.apply(project_udf277.apply(project_arg274));
/* 11132 */       } catch (Exception e) {
/* 11133 */         throw new org.apache.spark.SparkException(project_scalaUDF277.udfErrorMessage(), e);
/* 11134 */       }
/* 11135 */
/* 11136 */       boolean project_isNull799 = project_result277 == null;
/* 11137 */       double project_value799 = -1.0;
/* 11138 */       if (!project_isNull799) {
/* 11139 */         project_value799 = project_result277;
/* 11140 */       }
/* 11141 */       boolean project_isNull797 = false;
/* 11142 */       InternalRow project_value797 = null;
/* 11143 */       if (!false && project_isNull799) {
/* 11144 */         final InternalRow project_value801 = null;
/* 11145 */         project_isNull797 = true;
/* 11146 */         project_value797 = project_value801;
/* 11147 */       } else {
/* 11148 */         Object project_arg275 = sort_isNull24 ? null : project_converter279.apply(sort_value24);
/* 11149 */
/* 11150 */         Double project_result279 = null;
/* 11151 */         try {
/* 11152 */           project_result279 = (Double)project_catalystConverter279.apply(project_udf279.apply(project_arg275));
/* 11153 */         } catch (Exception e) {
/* 11154 */           throw new org.apache.spark.SparkException(project_scalaUDF279.udfErrorMessage(), e);
/* 11155 */         }
/* 11156 */
/* 11157 */         boolean project_isNull803 = project_result279 == null;
/* 11158 */         double project_value803 = -1.0;
/* 11159 */         if (!project_isNull803) {
/* 11160 */           project_value803 = project_result279;
/* 11161 */         }
/* 11162 */         Object project_arg276 = project_isNull803 ? null : project_converter278.apply(project_value803);
/* 11163 */
/* 11164 */         InternalRow project_result278 = null;
/* 11165 */         try {
/* 11166 */           project_result278 = (InternalRow)project_catalystConverter278.apply(project_udf278.apply(project_arg276));
/* 11167 */         } catch (Exception e) {
/* 11168 */           throw new org.apache.spark.SparkException(project_scalaUDF278.udfErrorMessage(), e);
/* 11169 */         }
/* 11170 */
/* 11171 */         boolean project_isNull802 = project_result278 == null;
/* 11172 */         InternalRow project_value802 = null;
/* 11173 */         if (!project_isNull802) {
/* 11174 */           project_value802 = project_result278;
/* 11175 */         }
/* 11176 */         project_isNull797 = project_isNull802;
/* 11177 */         project_value797 = project_value802;
/* 11178 */       }
/* 11179 */       if (project_isNull797) {
/* 11180 */         project_values4[24] = null;
/* 11181 */       } else {
/* 11182 */         project_values4[24] = project_value797;
/* 11183 */       }
/* 11184 */
/* 11185 */       Object project_arg277 = sort_isNull25 ? null : project_converter280.apply(sort_value25);
/* 11186 */
/* 11187 */       Double project_result280 = null;
/* 11188 */       try {
/* 11189 */         project_result280 = (Double)project_catalystConverter280.apply(project_udf280.apply(project_arg277));
/* 11190 */       } catch (Exception e) {
/* 11191 */         throw new org.apache.spark.SparkException(project_scalaUDF280.udfErrorMessage(), e);
/* 11192 */       }
/* 11193 */
/* 11194 */       boolean project_isNull807 = project_result280 == null;
/* 11195 */       double project_value807 = -1.0;
/* 11196 */       if (!project_isNull807) {
/* 11197 */         project_value807 = project_result280;
/* 11198 */       }
/* 11199 */       boolean project_isNull805 = false;
/* 11200 */       InternalRow project_value805 = null;
/* 11201 */       if (!false && project_isNull807) {
/* 11202 */         final InternalRow project_value809 = null;
/* 11203 */         project_isNull805 = true;
/* 11204 */         project_value805 = project_value809;
/* 11205 */       } else {
/* 11206 */         Object project_arg278 = sort_isNull25 ? null : project_converter282.apply(sort_value25);
/* 11207 */
/* 11208 */         Double project_result282 = null;
/* 11209 */         try {
/* 11210 */           project_result282 = (Double)project_catalystConverter282.apply(project_udf282.apply(project_arg278));
/* 11211 */         } catch (Exception e) {
/* 11212 */           throw new org.apache.spark.SparkException(project_scalaUDF282.udfErrorMessage(), e);
/* 11213 */         }
/* 11214 */
/* 11215 */         boolean project_isNull811 = project_result282 == null;
/* 11216 */         double project_value811 = -1.0;
/* 11217 */         if (!project_isNull811) {
/* 11218 */           project_value811 = project_result282;
/* 11219 */         }
/* 11220 */         Object project_arg279 = project_isNull811 ? null : project_converter281.apply(project_value811);
/* 11221 */
/* 11222 */         InternalRow project_result281 = null;
/* 11223 */         try {
/* 11224 */           project_result281 = (InternalRow)project_catalystConverter281.apply(project_udf281.apply(project_arg279));
/* 11225 */         } catch (Exception e) {
/* 11226 */           throw new org.apache.spark.SparkException(project_scalaUDF281.udfErrorMessage(), e);
/* 11227 */         }
/* 11228 */
/* 11229 */         boolean project_isNull810 = project_result281 == null;
/* 11230 */         InternalRow project_value810 = null;
/* 11231 */         if (!project_isNull810) {
/* 11232 */           project_value810 = project_result281;
/* 11233 */         }
/* 11234 */         project_isNull805 = project_isNull810;
/* 11235 */         project_value805 = project_value810;
/* 11236 */       }
/* 11237 */       if (project_isNull805) {
/* 11238 */         project_values4[25] = null;
/* 11239 */       } else {
/* 11240 */         project_values4[25] = project_value805;
/* 11241 */       }
/* 11242 */
/* 11243 */       if (sort_isNull27) {
/* 11244 */         project_values4[26] = null;
/* 11245 */       } else {
/* 11246 */         project_values4[26] = sort_value27;
/* 11247 */       }
/* 11248 */       final InternalRow project_value660 = new org.apache.spark.sql.catalyst.expressions.GenericInternalRow(project_values4);
/* 11249 */       this.project_values4 = null;
/* 11250 */       Object project_arg280 = false ? null : project_converter228.apply(project_value660);
/* 11251 */
/* 11252 */       InternalRow project_result228 = null;
/* 11253 */       try {
/* 11254 */         project_result228 = (InternalRow)project_catalystConverter228.apply(project_udf228.apply(project_arg280));
/* 11255 */       } catch (Exception e) {
/* 11256 */         throw new org.apache.spark.SparkException(project_scalaUDF228.udfErrorMessage(), e);
/* 11257 */       }
/* 11258 */
/* 11259 */       boolean project_isNull659 = project_result228 == null;
/* 11260 */       InternalRow project_value659 = null;
/* 11261 */       if (!project_isNull659) {
/* 11262 */         project_value659 = project_result228;
/* 11263 */       }
/* 11264 */       Object project_arg281 = project_isNull659 ? null : project_converter227.apply(project_value659);
/* 11265 */
/* 11266 */       InternalRow project_result227 = null;
/* 11267 */       try {
/* 11268 */         project_result227 = (InternalRow)project_catalystConverter227.apply(project_udf227.apply(project_arg281));
/* 11269 */       } catch (Exception e) {
/* 11270 */         throw new org.apache.spark.SparkException(project_scalaUDF227.udfErrorMessage(), e);
/* 11271 */       }
/* 11272 */
/* 11273 */       boolean project_isNull658 = project_result227 == null;
/* 11274 */       InternalRow project_value658 = null;
/* 11275 */       if (!project_isNull658) {
/* 11276 */         project_value658 = project_result227;
/* 11277 */       }
/* 11278 */       Object project_arg282 = project_isNull658 ? null : project_converter226.apply(project_value658);
/* 11279 */
/* 11280 */       Double project_result226 = null;
/* 11281 */       try {
/* 11282 */         project_result226 = (Double)project_catalystConverter226.apply(project_udf226.apply(project_arg282));
/* 11283 */       } catch (Exception e) {
/* 11284 */         throw new org.apache.spark.SparkException(project_scalaUDF226.udfErrorMessage(), e);
/* 11285 */       }
/* 11286 */
/* 11287 */       boolean project_isNull657 = project_result226 == null;
/* 11288 */       double project_value657 = -1.0;
/* 11289 */       if (!project_isNull657) {
/* 11290 */         project_value657 = project_result226;
/* 11291 */       }
/* 11292 */       boolean project_isNull655 = false;
/* 11293 */       UTF8String project_value655 = null;
/* 11294 */       if (!false && project_isNull657) {
/* 11295 */         final UTF8String project_value814 = null;
/* 11296 */         project_isNull655 = true;
/* 11297 */         project_value655 = project_value814;
/* 11298 */       } else {
/* 11299 */         project_values5 = new Object[27];
/* 11300 */         Object project_arg283 = sort_isNull ? null : project_converter287.apply(sort_value);
/* 11301 */
/* 11302 */         Double project_result287 = null;
/* 11303 */         try {
/* 11304 */           project_result287 = (Double)project_catalystConverter287.apply(project_udf287.apply(project_arg283));
/* 11305 */         } catch (Exception e) {
/* 11306 */           throw new org.apache.spark.SparkException(project_scalaUDF287.udfErrorMessage(), e);
/* 11307 */         }
/* 11308 */
/* 11309 */         boolean project_isNull822 = project_result287 == null;
/* 11310 */         double project_value822 = -1.0;
/* 11311 */         if (!project_isNull822) {
/* 11312 */           project_value822 = project_result287;
/* 11313 */         }
/* 11314 */         boolean project_isNull820 = false;
/* 11315 */         InternalRow project_value820 = null;
/* 11316 */         if (!false && project_isNull822) {
/* 11317 */           final InternalRow project_value824 = null;
/* 11318 */           project_isNull820 = true;
/* 11319 */           project_value820 = project_value824;
/* 11320 */         } else {
/* 11321 */           Object project_arg284 = sort_isNull ? null : project_converter289.apply(sort_value);
/* 11322 */
/* 11323 */           Double project_result289 = null;
/* 11324 */           try {
/* 11325 */             project_result289 = (Double)project_catalystConverter289.apply(project_udf289.apply(project_arg284));
/* 11326 */           } catch (Exception e) {
/* 11327 */             throw new org.apache.spark.SparkException(project_scalaUDF289.udfErrorMessage(), e);
/* 11328 */           }
/* 11329 */
/* 11330 */           boolean project_isNull826 = project_result289 == null;
/* 11331 */           double project_value826 = -1.0;
/* 11332 */           if (!project_isNull826) {
/* 11333 */             project_value826 = project_result289;
/* 11334 */           }
/* 11335 */           Object project_arg285 = project_isNull826 ? null : project_converter288.apply(project_value826);
/* 11336 */
/* 11337 */           InternalRow project_result288 = null;
/* 11338 */           try {
/* 11339 */             project_result288 = (InternalRow)project_catalystConverter288.apply(project_udf288.apply(project_arg285));
/* 11340 */           } catch (Exception e) {
/* 11341 */             throw new org.apache.spark.SparkException(project_scalaUDF288.udfErrorMessage(), e);
/* 11342 */           }
/* 11343 */
/* 11344 */           boolean project_isNull825 = project_result288 == null;
/* 11345 */           InternalRow project_value825 = null;
/* 11346 */           if (!project_isNull825) {
/* 11347 */             project_value825 = project_result288;
/* 11348 */           }
/* 11349 */           project_isNull820 = project_isNull825;
/* 11350 */           project_value820 = project_value825;
/* 11351 */         }
/* 11352 */         if (project_isNull820) {
/* 11353 */           project_values5[0] = null;
/* 11354 */         } else {
/* 11355 */           project_values5[0] = project_value820;
/* 11356 */         }
/* 11357 */
/* 11358 */         Object project_arg286 = sort_isNull1 ? null : project_converter290.apply(sort_value1);
/* 11359 */
/* 11360 */         Double project_result290 = null;
/* 11361 */         try {
/* 11362 */           project_result290 = (Double)project_catalystConverter290.apply(project_udf290.apply(project_arg286));
/* 11363 */         } catch (Exception e) {
/* 11364 */           throw new org.apache.spark.SparkException(project_scalaUDF290.udfErrorMessage(), e);
/* 11365 */         }
/* 11366 */
/* 11367 */         boolean project_isNull830 = project_result290 == null;
/* 11368 */         double project_value830 = -1.0;
/* 11369 */         if (!project_isNull830) {
/* 11370 */           project_value830 = project_result290;
/* 11371 */         }
/* 11372 */         boolean project_isNull828 = false;
/* 11373 */         InternalRow project_value828 = null;
/* 11374 */         if (!false && project_isNull830) {
/* 11375 */           final InternalRow project_value832 = null;
/* 11376 */           project_isNull828 = true;
/* 11377 */           project_value828 = project_value832;
/* 11378 */         } else {
/* 11379 */           Object project_arg287 = sort_isNull1 ? null : project_converter292.apply(sort_value1);
/* 11380 */
/* 11381 */           Double project_result292 = null;
/* 11382 */           try {
/* 11383 */             project_result292 = (Double)project_catalystConverter292.apply(project_udf292.apply(project_arg287));
/* 11384 */           } catch (Exception e) {
/* 11385 */             throw new org.apache.spark.SparkException(project_scalaUDF292.udfErrorMessage(), e);
/* 11386 */           }
/* 11387 */
/* 11388 */           boolean project_isNull834 = project_result292 == null;
/* 11389 */           double project_value834 = -1.0;
/* 11390 */           if (!project_isNull834) {
/* 11391 */             project_value834 = project_result292;
/* 11392 */           }
/* 11393 */           Object project_arg288 = project_isNull834 ? null : project_converter291.apply(project_value834);
/* 11394 */
/* 11395 */           InternalRow project_result291 = null;
/* 11396 */           try {
/* 11397 */             project_result291 = (InternalRow)project_catalystConverter291.apply(project_udf291.apply(project_arg288));
/* 11398 */           } catch (Exception e) {
/* 11399 */             throw new org.apache.spark.SparkException(project_scalaUDF291.udfErrorMessage(), e);
/* 11400 */           }
/* 11401 */
/* 11402 */           boolean project_isNull833 = project_result291 == null;
/* 11403 */           InternalRow project_value833 = null;
/* 11404 */           if (!project_isNull833) {
/* 11405 */             project_value833 = project_result291;
/* 11406 */           }
/* 11407 */           project_isNull828 = project_isNull833;
/* 11408 */           project_value828 = project_value833;
/* 11409 */         }
/* 11410 */         if (project_isNull828) {
/* 11411 */           project_values5[1] = null;
/* 11412 */         } else {
/* 11413 */           project_values5[1] = project_value828;
/* 11414 */         }
/* 11415 */
/* 11416 */         Object project_arg289 = sort_isNull2 ? null : project_converter293.apply(sort_value2);
/* 11417 */
/* 11418 */         Double project_result293 = null;
/* 11419 */         try {
/* 11420 */           project_result293 = (Double)project_catalystConverter293.apply(project_udf293.apply(project_arg289));
/* 11421 */         } catch (Exception e) {
/* 11422 */           throw new org.apache.spark.SparkException(project_scalaUDF293.udfErrorMessage(), e);
/* 11423 */         }
/* 11424 */
/* 11425 */         boolean project_isNull838 = project_result293 == null;
/* 11426 */         double project_value838 = -1.0;
/* 11427 */         if (!project_isNull838) {
/* 11428 */           project_value838 = project_result293;
/* 11429 */         }
/* 11430 */         boolean project_isNull836 = false;
/* 11431 */         InternalRow project_value836 = null;
/* 11432 */         if (!false && project_isNull838) {
/* 11433 */           final InternalRow project_value840 = null;
/* 11434 */           project_isNull836 = true;
/* 11435 */           project_value836 = project_value840;
/* 11436 */         } else {
/* 11437 */           Object project_arg290 = sort_isNull2 ? null : project_converter295.apply(sort_value2);
/* 11438 */
/* 11439 */           Double project_result295 = null;
/* 11440 */           try {
/* 11441 */             project_result295 = (Double)project_catalystConverter295.apply(project_udf295.apply(project_arg290));
/* 11442 */           } catch (Exception e) {
/* 11443 */             throw new org.apache.spark.SparkException(project_scalaUDF295.udfErrorMessage(), e);
/* 11444 */           }
/* 11445 */
/* 11446 */           boolean project_isNull842 = project_result295 == null;
/* 11447 */           double project_value842 = -1.0;
/* 11448 */           if (!project_isNull842) {
/* 11449 */             project_value842 = project_result295;
/* 11450 */           }
/* 11451 */           Object project_arg291 = project_isNull842 ? null : project_converter294.apply(project_value842);
/* 11452 */
/* 11453 */           InternalRow project_result294 = null;
/* 11454 */           try {
/* 11455 */             project_result294 = (InternalRow)project_catalystConverter294.apply(project_udf294.apply(project_arg291));
/* 11456 */           } catch (Exception e) {
/* 11457 */             throw new org.apache.spark.SparkException(project_scalaUDF294.udfErrorMessage(), e);
/* 11458 */           }
/* 11459 */
/* 11460 */           boolean project_isNull841 = project_result294 == null;
/* 11461 */           InternalRow project_value841 = null;
/* 11462 */           if (!project_isNull841) {
/* 11463 */             project_value841 = project_result294;
/* 11464 */           }
/* 11465 */           project_isNull836 = project_isNull841;
/* 11466 */           project_value836 = project_value841;
/* 11467 */         }
/* 11468 */         if (project_isNull836) {
/* 11469 */           project_values5[2] = null;
/* 11470 */         } else {
/* 11471 */           project_values5[2] = project_value836;
/* 11472 */         }
/* 11473 */
/* 11474 */         Object project_arg292 = sort_isNull3 ? null : project_converter296.apply(sort_value3);
/* 11475 */
/* 11476 */         Double project_result296 = null;
/* 11477 */         try {
/* 11478 */           project_result296 = (Double)project_catalystConverter296.apply(project_udf296.apply(project_arg292));
/* 11479 */         } catch (Exception e) {
/* 11480 */           throw new org.apache.spark.SparkException(project_scalaUDF296.udfErrorMessage(), e);
/* 11481 */         }
/* 11482 */
/* 11483 */         boolean project_isNull846 = project_result296 == null;
/* 11484 */         double project_value846 = -1.0;
/* 11485 */         if (!project_isNull846) {
/* 11486 */           project_value846 = project_result296;
/* 11487 */         }
/* 11488 */         boolean project_isNull844 = false;
/* 11489 */         InternalRow project_value844 = null;
/* 11490 */         if (!false && project_isNull846) {
/* 11491 */           final InternalRow project_value848 = null;
/* 11492 */           project_isNull844 = true;
/* 11493 */           project_value844 = project_value848;
/* 11494 */         } else {
/* 11495 */           Object project_arg293 = sort_isNull3 ? null : project_converter298.apply(sort_value3);
/* 11496 */
/* 11497 */           Double project_result298 = null;
/* 11498 */           try {
/* 11499 */             project_result298 = (Double)project_catalystConverter298.apply(project_udf298.apply(project_arg293));
/* 11500 */           } catch (Exception e) {
/* 11501 */             throw new org.apache.spark.SparkException(project_scalaUDF298.udfErrorMessage(), e);
/* 11502 */           }
/* 11503 */
/* 11504 */           boolean project_isNull850 = project_result298 == null;
/* 11505 */           double project_value850 = -1.0;
/* 11506 */           if (!project_isNull850) {
/* 11507 */             project_value850 = project_result298;
/* 11508 */           }
/* 11509 */           Object project_arg294 = project_isNull850 ? null : project_converter297.apply(project_value850);
/* 11510 */
/* 11511 */           InternalRow project_result297 = null;
/* 11512 */           try {
/* 11513 */             project_result297 = (InternalRow)project_catalystConverter297.apply(project_udf297.apply(project_arg294));
/* 11514 */           } catch (Exception e) {
/* 11515 */             throw new org.apache.spark.SparkException(project_scalaUDF297.udfErrorMessage(), e);
/* 11516 */           }
/* 11517 */
/* 11518 */           boolean project_isNull849 = project_result297 == null;
/* 11519 */           InternalRow project_value849 = null;
/* 11520 */           if (!project_isNull849) {
/* 11521 */             project_value849 = project_result297;
/* 11522 */           }
/* 11523 */           project_isNull844 = project_isNull849;
/* 11524 */           project_value844 = project_value849;
/* 11525 */         }
/* 11526 */         if (project_isNull844) {
/* 11527 */           project_values5[3] = null;
/* 11528 */         } else {
/* 11529 */           project_values5[3] = project_value844;
/* 11530 */         }
/* 11531 */
/* 11532 */         Object project_arg295 = sort_isNull4 ? null : project_converter299.apply(sort_value4);
/* 11533 */
/* 11534 */         Double project_result299 = null;
/* 11535 */         try {
/* 11536 */           project_result299 = (Double)project_catalystConverter299.apply(project_udf299.apply(project_arg295));
/* 11537 */         } catch (Exception e) {
/* 11538 */           throw new org.apache.spark.SparkException(project_scalaUDF299.udfErrorMessage(), e);
/* 11539 */         }
/* 11540 */
/* 11541 */         boolean project_isNull854 = project_result299 == null;
/* 11542 */         double project_value854 = -1.0;
/* 11543 */         if (!project_isNull854) {
/* 11544 */           project_value854 = project_result299;
/* 11545 */         }
/* 11546 */         boolean project_isNull852 = false;
/* 11547 */         InternalRow project_value852 = null;
/* 11548 */         if (!false && project_isNull854) {
/* 11549 */           final InternalRow project_value856 = null;
/* 11550 */           project_isNull852 = true;
/* 11551 */           project_value852 = project_value856;
/* 11552 */         } else {
/* 11553 */           Object project_arg296 = sort_isNull4 ? null : project_converter301.apply(sort_value4);
/* 11554 */
/* 11555 */           Double project_result301 = null;
/* 11556 */           try {
/* 11557 */             project_result301 = (Double)project_catalystConverter301.apply(project_udf301.apply(project_arg296));
/* 11558 */           } catch (Exception e) {
/* 11559 */             throw new org.apache.spark.SparkException(project_scalaUDF301.udfErrorMessage(), e);
/* 11560 */           }
/* 11561 */
/* 11562 */           boolean project_isNull858 = project_result301 == null;
/* 11563 */           double project_value858 = -1.0;
/* 11564 */           if (!project_isNull858) {
/* 11565 */             project_value858 = project_result301;
/* 11566 */           }
/* 11567 */           Object project_arg297 = project_isNull858 ? null : project_converter300.apply(project_value858);
/* 11568 */
/* 11569 */           InternalRow project_result300 = null;
/* 11570 */           try {
/* 11571 */             project_result300 = (InternalRow)project_catalystConverter300.apply(project_udf300.apply(project_arg297));
/* 11572 */           } catch (Exception e) {
/* 11573 */             throw new org.apache.spark.SparkException(project_scalaUDF300.udfErrorMessage(), e);
/* 11574 */           }
/* 11575 */
/* 11576 */           boolean project_isNull857 = project_result300 == null;
/* 11577 */           InternalRow project_value857 = null;
/* 11578 */           if (!project_isNull857) {
/* 11579 */             project_value857 = project_result300;
/* 11580 */           }
/* 11581 */           project_isNull852 = project_isNull857;
/* 11582 */           project_value852 = project_value857;
/* 11583 */         }
/* 11584 */         if (project_isNull852) {
/* 11585 */           project_values5[4] = null;
/* 11586 */         } else {
/* 11587 */           project_values5[4] = project_value852;
/* 11588 */         }
/* 11589 */
/* 11590 */         Object project_arg298 = sort_isNull5 ? null : project_converter302.apply(sort_value5);
/* 11591 */
/* 11592 */         Double project_result302 = null;
/* 11593 */         try {
/* 11594 */           project_result302 = (Double)project_catalystConverter302.apply(project_udf302.apply(project_arg298));
/* 11595 */         } catch (Exception e) {
/* 11596 */           throw new org.apache.spark.SparkException(project_scalaUDF302.udfErrorMessage(), e);
/* 11597 */         }
/* 11598 */
/* 11599 */         boolean project_isNull862 = project_result302 == null;
/* 11600 */         double project_value862 = -1.0;
/* 11601 */         if (!project_isNull862) {
/* 11602 */           project_value862 = project_result302;
/* 11603 */         }
/* 11604 */         boolean project_isNull860 = false;
/* 11605 */         InternalRow project_value860 = null;
/* 11606 */         if (!false && project_isNull862) {
/* 11607 */           final InternalRow project_value864 = null;
/* 11608 */           project_isNull860 = true;
/* 11609 */           project_value860 = project_value864;
/* 11610 */         } else {
/* 11611 */           Object project_arg299 = sort_isNull5 ? null : project_converter304.apply(sort_value5);
/* 11612 */
/* 11613 */           Double project_result304 = null;
/* 11614 */           try {
/* 11615 */             project_result304 = (Double)project_catalystConverter304.apply(project_udf304.apply(project_arg299));
/* 11616 */           } catch (Exception e) {
/* 11617 */             throw new org.apache.spark.SparkException(project_scalaUDF304.udfErrorMessage(), e);
/* 11618 */           }
/* 11619 */
/* 11620 */           boolean project_isNull866 = project_result304 == null;
/* 11621 */           double project_value866 = -1.0;
/* 11622 */           if (!project_isNull866) {
/* 11623 */             project_value866 = project_result304;
/* 11624 */           }
/* 11625 */           Object project_arg300 = project_isNull866 ? null : project_converter303.apply(project_value866);
/* 11626 */
/* 11627 */           InternalRow project_result303 = null;
/* 11628 */           try {
/* 11629 */             project_result303 = (InternalRow)project_catalystConverter303.apply(project_udf303.apply(project_arg300));
/* 11630 */           } catch (Exception e) {
/* 11631 */             throw new org.apache.spark.SparkException(project_scalaUDF303.udfErrorMessage(), e);
/* 11632 */           }
/* 11633 */
/* 11634 */           boolean project_isNull865 = project_result303 == null;
/* 11635 */           InternalRow project_value865 = null;
/* 11636 */           if (!project_isNull865) {
/* 11637 */             project_value865 = project_result303;
/* 11638 */           }
/* 11639 */           project_isNull860 = project_isNull865;
/* 11640 */           project_value860 = project_value865;
/* 11641 */         }
/* 11642 */         if (project_isNull860) {
/* 11643 */           project_values5[5] = null;
/* 11644 */         } else {
/* 11645 */           project_values5[5] = project_value860;
/* 11646 */         }
/* 11647 */
/* 11648 */         if (sort_isNull6) {
/* 11649 */           project_values5[6] = null;
/* 11650 */         } else {
/* 11651 */           project_values5[6] = sort_value6;
/* 11652 */         }
/* 11653 */
/* 11654 */         if (sort_isNull7) {
/* 11655 */           project_values5[7] = null;
/* 11656 */         } else {
/* 11657 */           project_values5[7] = sort_value7;
/* 11658 */         }
/* 11659 */
/* 11660 */         if (sort_isNull8) {
/* 11661 */           project_values5[8] = null;
/* 11662 */         } else {
/* 11663 */           project_values5[8] = sort_value8;
/* 11664 */         }
/* 11665 */
/* 11666 */         if (sort_isNull9) {
/* 11667 */           project_values5[9] = null;
/* 11668 */         } else {
/* 11669 */           project_values5[9] = sort_value9;
/* 11670 */         }
/* 11671 */
/* 11672 */         if (sort_isNull10) {
/* 11673 */           project_values5[10] = null;
/* 11674 */         } else {
/* 11675 */           project_values5[10] = sort_value10;
/* 11676 */         }
/* 11677 */
/* 11678 */         if (sort_isNull11) {
/* 11679 */           project_values5[11] = null;
/* 11680 */         } else {
/* 11681 */           project_values5[11] = sort_value11;
/* 11682 */         }
/* 11683 */
/* 11684 */         if (sort_isNull12) {
/* 11685 */           project_values5[12] = null;
/* 11686 */         } else {
/* 11687 */           project_values5[12] = sort_value12;
/* 11688 */         }
/* 11689 */
/* 11690 */         Object project_arg301 = sort_isNull13 ? null : project_converter305.apply(sort_value13);
/* 11691 */
/* 11692 */         Double project_result305 = null;
/* 11693 */         try {
/* 11694 */           project_result305 = (Double)project_catalystConverter305.apply(project_udf305.apply(project_arg301));
/* 11695 */         } catch (Exception e) {
/* 11696 */           throw new org.apache.spark.SparkException(project_scalaUDF305.udfErrorMessage(), e);
/* 11697 */         }
/* 11698 */
/* 11699 */         boolean project_isNull877 = project_result305 == null;
/* 11700 */         double project_value877 = -1.0;
/* 11701 */         if (!project_isNull877) {
/* 11702 */           project_value877 = project_result305;
/* 11703 */         }
/* 11704 */         boolean project_isNull875 = false;
/* 11705 */         InternalRow project_value875 = null;
/* 11706 */         if (!false && project_isNull877) {
/* 11707 */           final InternalRow project_value879 = null;
/* 11708 */           project_isNull875 = true;
/* 11709 */           project_value875 = project_value879;
/* 11710 */         } else {
/* 11711 */           Object project_arg302 = sort_isNull13 ? null : project_converter307.apply(sort_value13);
/* 11712 */
/* 11713 */           Double project_result307 = null;
/* 11714 */           try {
/* 11715 */             project_result307 = (Double)project_catalystConverter307.apply(project_udf307.apply(project_arg302));
/* 11716 */           } catch (Exception e) {
/* 11717 */             throw new org.apache.spark.SparkException(project_scalaUDF307.udfErrorMessage(), e);
/* 11718 */           }
/* 11719 */
/* 11720 */           boolean project_isNull881 = project_result307 == null;
/* 11721 */           double project_value881 = -1.0;
/* 11722 */           if (!project_isNull881) {
/* 11723 */             project_value881 = project_result307;
/* 11724 */           }
/* 11725 */           Object project_arg303 = project_isNull881 ? null : project_converter306.apply(project_value881);
/* 11726 */
/* 11727 */           InternalRow project_result306 = null;
/* 11728 */           try {
/* 11729 */             project_result306 = (InternalRow)project_catalystConverter306.apply(project_udf306.apply(project_arg303));
/* 11730 */           } catch (Exception e) {
/* 11731 */             throw new org.apache.spark.SparkException(project_scalaUDF306.udfErrorMessage(), e);
/* 11732 */           }
/* 11733 */
/* 11734 */           boolean project_isNull880 = project_result306 == null;
/* 11735 */           InternalRow project_value880 = null;
/* 11736 */           if (!project_isNull880) {
/* 11737 */             project_value880 = project_result306;
/* 11738 */           }
/* 11739 */           project_isNull875 = project_isNull880;
/* 11740 */           project_value875 = project_value880;
/* 11741 */         }
/* 11742 */         if (project_isNull875) {
/* 11743 */           project_values5[13] = null;
/* 11744 */         } else {
/* 11745 */           project_values5[13] = project_value875;
/* 11746 */         }
/* 11747 */
/* 11748 */         Object project_arg304 = sort_isNull14 ? null : project_converter308.apply(sort_value14);
/* 11749 */
/* 11750 */         Double project_result308 = null;
/* 11751 */         try {
/* 11752 */           project_result308 = (Double)project_catalystConverter308.apply(project_udf308.apply(project_arg304));
/* 11753 */         } catch (Exception e) {
/* 11754 */           throw new org.apache.spark.SparkException(project_scalaUDF308.udfErrorMessage(), e);
/* 11755 */         }
/* 11756 */
/* 11757 */         boolean project_isNull885 = project_result308 == null;
/* 11758 */         double project_value885 = -1.0;
/* 11759 */         if (!project_isNull885) {
/* 11760 */           project_value885 = project_result308;
/* 11761 */         }
/* 11762 */         boolean project_isNull883 = false;
/* 11763 */         InternalRow project_value883 = null;
/* 11764 */         if (!false && project_isNull885) {
/* 11765 */           final InternalRow project_value887 = null;
/* 11766 */           project_isNull883 = true;
/* 11767 */           project_value883 = project_value887;
/* 11768 */         } else {
/* 11769 */           Object project_arg305 = sort_isNull14 ? null : project_converter310.apply(sort_value14);
/* 11770 */
/* 11771 */           Double project_result310 = null;
/* 11772 */           try {
/* 11773 */             project_result310 = (Double)project_catalystConverter310.apply(project_udf310.apply(project_arg305));
/* 11774 */           } catch (Exception e) {
/* 11775 */             throw new org.apache.spark.SparkException(project_scalaUDF310.udfErrorMessage(), e);
/* 11776 */           }
/* 11777 */
/* 11778 */           boolean project_isNull889 = project_result310 == null;
/* 11779 */           double project_value889 = -1.0;
/* 11780 */           if (!project_isNull889) {
/* 11781 */             project_value889 = project_result310;
/* 11782 */           }
/* 11783 */           Object project_arg306 = project_isNull889 ? null : project_converter309.apply(project_value889);
/* 11784 */
/* 11785 */           InternalRow project_result309 = null;
/* 11786 */           try {
/* 11787 */             project_result309 = (InternalRow)project_catalystConverter309.apply(project_udf309.apply(project_arg306));
/* 11788 */           } catch (Exception e) {
/* 11789 */             throw new org.apache.spark.SparkException(project_scalaUDF309.udfErrorMessage(), e);
/* 11790 */           }
/* 11791 */
/* 11792 */           boolean project_isNull888 = project_result309 == null;
/* 11793 */           InternalRow project_value888 = null;
/* 11794 */           if (!project_isNull888) {
/* 11795 */             project_value888 = project_result309;
/* 11796 */           }
/* 11797 */           project_isNull883 = project_isNull888;
/* 11798 */           project_value883 = project_value888;
/* 11799 */         }
/* 11800 */         if (project_isNull883) {
/* 11801 */           project_values5[14] = null;
/* 11802 */         } else {
/* 11803 */           project_values5[14] = project_value883;
/* 11804 */         }
/* 11805 */
/* 11806 */         Object project_arg307 = sort_isNull15 ? null : project_converter311.apply(sort_value15);
/* 11807 */
/* 11808 */         Double project_result311 = null;
/* 11809 */         try {
/* 11810 */           project_result311 = (Double)project_catalystConverter311.apply(project_udf311.apply(project_arg307));
/* 11811 */         } catch (Exception e) {
/* 11812 */           throw new org.apache.spark.SparkException(project_scalaUDF311.udfErrorMessage(), e);
/* 11813 */         }
/* 11814 */
/* 11815 */         boolean project_isNull893 = project_result311 == null;
/* 11816 */         double project_value893 = -1.0;
/* 11817 */         if (!project_isNull893) {
/* 11818 */           project_value893 = project_result311;
/* 11819 */         }
/* 11820 */         boolean project_isNull891 = false;
/* 11821 */         InternalRow project_value891 = null;
/* 11822 */         if (!false && project_isNull893) {
/* 11823 */           final InternalRow project_value895 = null;
/* 11824 */           project_isNull891 = true;
/* 11825 */           project_value891 = project_value895;
/* 11826 */         } else {
/* 11827 */           Object project_arg308 = sort_isNull15 ? null : project_converter313.apply(sort_value15);
/* 11828 */
/* 11829 */           Double project_result313 = null;
/* 11830 */           try {
/* 11831 */             project_result313 = (Double)project_catalystConverter313.apply(project_udf313.apply(project_arg308));
/* 11832 */           } catch (Exception e) {
/* 11833 */             throw new org.apache.spark.SparkException(project_scalaUDF313.udfErrorMessage(), e);
/* 11834 */           }
/* 11835 */
/* 11836 */           boolean project_isNull897 = project_result313 == null;
/* 11837 */           double project_value897 = -1.0;
/* 11838 */           if (!project_isNull897) {
/* 11839 */             project_value897 = project_result313;
/* 11840 */           }
/* 11841 */           Object project_arg309 = project_isNull897 ? null : project_converter312.apply(project_value897);
/* 11842 */
/* 11843 */           InternalRow project_result312 = null;
/* 11844 */           try {
/* 11845 */             project_result312 = (InternalRow)project_catalystConverter312.apply(project_udf312.apply(project_arg309));
/* 11846 */           } catch (Exception e) {
/* 11847 */             throw new org.apache.spark.SparkException(project_scalaUDF312.udfErrorMessage(), e);
/* 11848 */           }
/* 11849 */
/* 11850 */           boolean project_isNull896 = project_result312 == null;
/* 11851 */           InternalRow project_value896 = null;
/* 11852 */           if (!project_isNull896) {
/* 11853 */             project_value896 = project_result312;
/* 11854 */           }
/* 11855 */           project_isNull891 = project_isNull896;
/* 11856 */           project_value891 = project_value896;
/* 11857 */         }
/* 11858 */         if (project_isNull891) {
/* 11859 */           project_values5[15] = null;
/* 11860 */         } else {
/* 11861 */           project_values5[15] = project_value891;
/* 11862 */         }
/* 11863 */
/* 11864 */         if (sort_isNull16) {
/* 11865 */           project_values5[16] = null;
/* 11866 */         } else {
/* 11867 */           project_values5[16] = sort_value16;
/* 11868 */         }
/* 11869 */
/* 11870 */         Object project_arg310 = sort_isNull17 ? null : project_converter314.apply(sort_value17);
/* 11871 */
/* 11872 */         Double project_result314 = null;
/* 11873 */         try {
/* 11874 */           project_result314 = (Double)project_catalystConverter314.apply(project_udf314.apply(project_arg310));
/* 11875 */         } catch (Exception e) {
/* 11876 */           throw new org.apache.spark.SparkException(project_scalaUDF314.udfErrorMessage(), e);
/* 11877 */         }
/* 11878 */
/* 11879 */         boolean project_isNull902 = project_result314 == null;
/* 11880 */         double project_value902 = -1.0;
/* 11881 */         if (!project_isNull902) {
/* 11882 */           project_value902 = project_result314;
/* 11883 */         }
/* 11884 */         boolean project_isNull900 = false;
/* 11885 */         InternalRow project_value900 = null;
/* 11886 */         if (!false && project_isNull902) {
/* 11887 */           final InternalRow project_value904 = null;
/* 11888 */           project_isNull900 = true;
/* 11889 */           project_value900 = project_value904;
/* 11890 */         } else {
/* 11891 */           Object project_arg311 = sort_isNull17 ? null : project_converter316.apply(sort_value17);
/* 11892 */
/* 11893 */           Double project_result316 = null;
/* 11894 */           try {
/* 11895 */             project_result316 = (Double)project_catalystConverter316.apply(project_udf316.apply(project_arg311));
/* 11896 */           } catch (Exception e) {
/* 11897 */             throw new org.apache.spark.SparkException(project_scalaUDF316.udfErrorMessage(), e);
/* 11898 */           }
/* 11899 */
/* 11900 */           boolean project_isNull906 = project_result316 == null;
/* 11901 */           double project_value906 = -1.0;
/* 11902 */           if (!project_isNull906) {
/* 11903 */             project_value906 = project_result316;
/* 11904 */           }
/* 11905 */           Object project_arg312 = project_isNull906 ? null : project_converter315.apply(project_value906);
/* 11906 */
/* 11907 */           InternalRow project_result315 = null;
/* 11908 */           try {
/* 11909 */             project_result315 = (InternalRow)project_catalystConverter315.apply(project_udf315.apply(project_arg312));
/* 11910 */           } catch (Exception e) {
/* 11911 */             throw new org.apache.spark.SparkException(project_scalaUDF315.udfErrorMessage(), e);
/* 11912 */           }
/* 11913 */
/* 11914 */           boolean project_isNull905 = project_result315 == null;
/* 11915 */           InternalRow project_value905 = null;
/* 11916 */           if (!project_isNull905) {
/* 11917 */             project_value905 = project_result315;
/* 11918 */           }
/* 11919 */           project_isNull900 = project_isNull905;
/* 11920 */           project_value900 = project_value905;
/* 11921 */         }
/* 11922 */         if (project_isNull900) {
/* 11923 */           project_values5[17] = null;
/* 11924 */         } else {
/* 11925 */           project_values5[17] = project_value900;
/* 11926 */         }
/* 11927 */
/* 11928 */         Object project_arg313 = sort_isNull18 ? null : project_converter317.apply(sort_value18);
/* 11929 */
/* 11930 */         Double project_result317 = null;
/* 11931 */         try {
/* 11932 */           project_result317 = (Double)project_catalystConverter317.apply(project_udf317.apply(project_arg313));
/* 11933 */         } catch (Exception e) {
/* 11934 */           throw new org.apache.spark.SparkException(project_scalaUDF317.udfErrorMessage(), e);
/* 11935 */         }
/* 11936 */
/* 11937 */         boolean project_isNull910 = project_result317 == null;
/* 11938 */         double project_value910 = -1.0;
/* 11939 */         if (!project_isNull910) {
/* 11940 */           project_value910 = project_result317;
/* 11941 */         }
/* 11942 */         boolean project_isNull908 = false;
/* 11943 */         InternalRow project_value908 = null;
/* 11944 */         if (!false && project_isNull910) {
/* 11945 */           final InternalRow project_value912 = null;
/* 11946 */           project_isNull908 = true;
/* 11947 */           project_value908 = project_value912;
/* 11948 */         } else {
/* 11949 */           Object project_arg314 = sort_isNull18 ? null : project_converter319.apply(sort_value18);
/* 11950 */
/* 11951 */           Double project_result319 = null;
/* 11952 */           try {
/* 11953 */             project_result319 = (Double)project_catalystConverter319.apply(project_udf319.apply(project_arg314));
/* 11954 */           } catch (Exception e) {
/* 11955 */             throw new org.apache.spark.SparkException(project_scalaUDF319.udfErrorMessage(), e);
/* 11956 */           }
/* 11957 */
/* 11958 */           boolean project_isNull914 = project_result319 == null;
/* 11959 */           double project_value914 = -1.0;
/* 11960 */           if (!project_isNull914) {
/* 11961 */             project_value914 = project_result319;
/* 11962 */           }
/* 11963 */           Object project_arg315 = project_isNull914 ? null : project_converter318.apply(project_value914);
/* 11964 */
/* 11965 */           InternalRow project_result318 = null;
/* 11966 */           try {
/* 11967 */             project_result318 = (InternalRow)project_catalystConverter318.apply(project_udf318.apply(project_arg315));
/* 11968 */           } catch (Exception e) {
/* 11969 */             throw new org.apache.spark.SparkException(project_scalaUDF318.udfErrorMessage(), e);
/* 11970 */           }
/* 11971 */
/* 11972 */           boolean project_isNull913 = project_result318 == null;
/* 11973 */           InternalRow project_value913 = null;
/* 11974 */           if (!project_isNull913) {
/* 11975 */             project_value913 = project_result318;
/* 11976 */           }
/* 11977 */           project_isNull908 = project_isNull913;
/* 11978 */           project_value908 = project_value913;
/* 11979 */         }
/* 11980 */         if (project_isNull908) {
/* 11981 */           project_values5[18] = null;
/* 11982 */         } else {
/* 11983 */           project_values5[18] = project_value908;
/* 11984 */         }
/* 11985 */
/* 11986 */         Object project_arg316 = sort_isNull19 ? null : project_converter320.apply(sort_value19);
/* 11987 */
/* 11988 */         Double project_result320 = null;
/* 11989 */         try {
/* 11990 */           project_result320 = (Double)project_catalystConverter320.apply(project_udf320.apply(project_arg316));
/* 11991 */         } catch (Exception e) {
/* 11992 */           throw new org.apache.spark.SparkException(project_scalaUDF320.udfErrorMessage(), e);
/* 11993 */         }
/* 11994 */
/* 11995 */         boolean project_isNull918 = project_result320 == null;
/* 11996 */         double project_value918 = -1.0;
/* 11997 */         if (!project_isNull918) {
/* 11998 */           project_value918 = project_result320;
/* 11999 */         }
/* 12000 */         boolean project_isNull916 = false;
/* 12001 */         InternalRow project_value916 = null;
/* 12002 */         if (!false && project_isNull918) {
/* 12003 */           final InternalRow project_value920 = null;
/* 12004 */           project_isNull916 = true;
/* 12005 */           project_value916 = project_value920;
/* 12006 */         } else {
/* 12007 */           Object project_arg317 = sort_isNull19 ? null : project_converter322.apply(sort_value19);
/* 12008 */
/* 12009 */           Double project_result322 = null;
/* 12010 */           try {
/* 12011 */             project_result322 = (Double)project_catalystConverter322.apply(project_udf322.apply(project_arg317));
/* 12012 */           } catch (Exception e) {
/* 12013 */             throw new org.apache.spark.SparkException(project_scalaUDF322.udfErrorMessage(), e);
/* 12014 */           }
/* 12015 */
/* 12016 */           boolean project_isNull922 = project_result322 == null;
/* 12017 */           double project_value922 = -1.0;
/* 12018 */           if (!project_isNull922) {
/* 12019 */             project_value922 = project_result322;
/* 12020 */           }
/* 12021 */           Object project_arg318 = project_isNull922 ? null : project_converter321.apply(project_value922);
/* 12022 */
/* 12023 */           InternalRow project_result321 = null;
/* 12024 */           try {
/* 12025 */             project_result321 = (InternalRow)project_catalystConverter321.apply(project_udf321.apply(project_arg318));
/* 12026 */           } catch (Exception e) {
/* 12027 */             throw new org.apache.spark.SparkException(project_scalaUDF321.udfErrorMessage(), e);
/* 12028 */           }
/* 12029 */
/* 12030 */           boolean project_isNull921 = project_result321 == null;
/* 12031 */           InternalRow project_value921 = null;
/* 12032 */           if (!project_isNull921) {
/* 12033 */             project_value921 = project_result321;
/* 12034 */           }
/* 12035 */           project_isNull916 = project_isNull921;
/* 12036 */           project_value916 = project_value921;
/* 12037 */         }
/* 12038 */         if (project_isNull916) {
/* 12039 */           project_values5[19] = null;
/* 12040 */         } else {
/* 12041 */           project_values5[19] = project_value916;
/* 12042 */         }
/* 12043 */
/* 12044 */         Object project_arg319 = sort_isNull20 ? null : project_converter323.apply(sort_value20);
/* 12045 */
/* 12046 */         Double project_result323 = null;
/* 12047 */         try {
/* 12048 */           project_result323 = (Double)project_catalystConverter323.apply(project_udf323.apply(project_arg319));
/* 12049 */         } catch (Exception e) {
/* 12050 */           throw new org.apache.spark.SparkException(project_scalaUDF323.udfErrorMessage(), e);
/* 12051 */         }
/* 12052 */
/* 12053 */         boolean project_isNull926 = project_result323 == null;
/* 12054 */         double project_value926 = -1.0;
/* 12055 */         if (!project_isNull926) {
/* 12056 */           project_value926 = project_result323;
/* 12057 */         }
/* 12058 */         boolean project_isNull924 = false;
/* 12059 */         InternalRow project_value924 = null;
/* 12060 */         if (!false && project_isNull926) {
/* 12061 */           final InternalRow project_value928 = null;
/* 12062 */           project_isNull924 = true;
/* 12063 */           project_value924 = project_value928;
/* 12064 */         } else {
/* 12065 */           Object project_arg320 = sort_isNull20 ? null : project_converter325.apply(sort_value20);
/* 12066 */
/* 12067 */           Double project_result325 = null;
/* 12068 */           try {
/* 12069 */             project_result325 = (Double)project_catalystConverter325.apply(project_udf325.apply(project_arg320));
/* 12070 */           } catch (Exception e) {
/* 12071 */             throw new org.apache.spark.SparkException(project_scalaUDF325.udfErrorMessage(), e);
/* 12072 */           }
/* 12073 */
/* 12074 */           boolean project_isNull930 = project_result325 == null;
/* 12075 */           double project_value930 = -1.0;
/* 12076 */           if (!project_isNull930) {
/* 12077 */             project_value930 = project_result325;
/* 12078 */           }
/* 12079 */           Object project_arg321 = project_isNull930 ? null : project_converter324.apply(project_value930);
/* 12080 */
/* 12081 */           InternalRow project_result324 = null;
/* 12082 */           try {
/* 12083 */             project_result324 = (InternalRow)project_catalystConverter324.apply(project_udf324.apply(project_arg321));
/* 12084 */           } catch (Exception e) {
/* 12085 */             throw new org.apache.spark.SparkException(project_scalaUDF324.udfErrorMessage(), e);
/* 12086 */           }
/* 12087 */
/* 12088 */           boolean project_isNull929 = project_result324 == null;
/* 12089 */           InternalRow project_value929 = null;
/* 12090 */           if (!project_isNull929) {
/* 12091 */             project_value929 = project_result324;
/* 12092 */           }
/* 12093 */           project_isNull924 = project_isNull929;
/* 12094 */           project_value924 = project_value929;
/* 12095 */         }
/* 12096 */         if (project_isNull924) {
/* 12097 */           project_values5[20] = null;
/* 12098 */         } else {
/* 12099 */           project_values5[20] = project_value924;
/* 12100 */         }
/* 12101 */
/* 12102 */         Object project_arg322 = sort_isNull21 ? null : project_converter326.apply(sort_value21);
/* 12103 */
/* 12104 */         Double project_result326 = null;
/* 12105 */         try {
/* 12106 */           project_result326 = (Double)project_catalystConverter326.apply(project_udf326.apply(project_arg322));
/* 12107 */         } catch (Exception e) {
/* 12108 */           throw new org.apache.spark.SparkException(project_scalaUDF326.udfErrorMessage(), e);
/* 12109 */         }
/* 12110 */
/* 12111 */         boolean project_isNull934 = project_result326 == null;
/* 12112 */         double project_value934 = -1.0;
/* 12113 */         if (!project_isNull934) {
/* 12114 */           project_value934 = project_result326;
/* 12115 */         }
/* 12116 */         boolean project_isNull932 = false;
/* 12117 */         InternalRow project_value932 = null;
/* 12118 */         if (!false && project_isNull934) {
/* 12119 */           final InternalRow project_value936 = null;
/* 12120 */           project_isNull932 = true;
/* 12121 */           project_value932 = project_value936;
/* 12122 */         } else {
/* 12123 */           Object project_arg323 = sort_isNull21 ? null : project_converter328.apply(sort_value21);
/* 12124 */
/* 12125 */           Double project_result328 = null;
/* 12126 */           try {
/* 12127 */             project_result328 = (Double)project_catalystConverter328.apply(project_udf328.apply(project_arg323));
/* 12128 */           } catch (Exception e) {
/* 12129 */             throw new org.apache.spark.SparkException(project_scalaUDF328.udfErrorMessage(), e);
/* 12130 */           }
/* 12131 */
/* 12132 */           boolean project_isNull938 = project_result328 == null;
/* 12133 */           double project_value938 = -1.0;
/* 12134 */           if (!project_isNull938) {
/* 12135 */             project_value938 = project_result328;
/* 12136 */           }
/* 12137 */           Object project_arg324 = project_isNull938 ? null : project_converter327.apply(project_value938);
/* 12138 */
/* 12139 */           InternalRow project_result327 = null;
/* 12140 */           try {
/* 12141 */             project_result327 = (InternalRow)project_catalystConverter327.apply(project_udf327.apply(project_arg324));
/* 12142 */           } catch (Exception e) {
/* 12143 */             throw new org.apache.spark.SparkException(project_scalaUDF327.udfErrorMessage(), e);
/* 12144 */           }
/* 12145 */
/* 12146 */           boolean project_isNull937 = project_result327 == null;
/* 12147 */           InternalRow project_value937 = null;
/* 12148 */           if (!project_isNull937) {
/* 12149 */             project_value937 = project_result327;
/* 12150 */           }
/* 12151 */           project_isNull932 = project_isNull937;
/* 12152 */           project_value932 = project_value937;
/* 12153 */         }
/* 12154 */         if (project_isNull932) {
/* 12155 */           project_values5[21] = null;
/* 12156 */         } else {
/* 12157 */           project_values5[21] = project_value932;
/* 12158 */         }
/* 12159 */
/* 12160 */         Object project_arg325 = sort_isNull22 ? null : project_converter329.apply(sort_value22);
/* 12161 */
/* 12162 */         Double project_result329 = null;
/* 12163 */         try {
/* 12164 */           project_result329 = (Double)project_catalystConverter329.apply(project_udf329.apply(project_arg325));
/* 12165 */         } catch (Exception e) {
/* 12166 */           throw new org.apache.spark.SparkException(project_scalaUDF329.udfErrorMessage(), e);
/* 12167 */         }
/* 12168 */
/* 12169 */         boolean project_isNull942 = project_result329 == null;
/* 12170 */         double project_value942 = -1.0;
/* 12171 */         if (!project_isNull942) {
/* 12172 */           project_value942 = project_result329;
/* 12173 */         }
/* 12174 */         boolean project_isNull940 = false;
/* 12175 */         InternalRow project_value940 = null;
/* 12176 */         if (!false && project_isNull942) {
/* 12177 */           final InternalRow project_value944 = null;
/* 12178 */           project_isNull940 = true;
/* 12179 */           project_value940 = project_value944;
/* 12180 */         } else {
/* 12181 */           Object project_arg326 = sort_isNull22 ? null : project_converter331.apply(sort_value22);
/* 12182 */
/* 12183 */           Double project_result331 = null;
/* 12184 */           try {
/* 12185 */             project_result331 = (Double)project_catalystConverter331.apply(project_udf331.apply(project_arg326));
/* 12186 */           } catch (Exception e) {
/* 12187 */             throw new org.apache.spark.SparkException(project_scalaUDF331.udfErrorMessage(), e);
/* 12188 */           }
/* 12189 */
/* 12190 */           boolean project_isNull946 = project_result331 == null;
/* 12191 */           double project_value946 = -1.0;
/* 12192 */           if (!project_isNull946) {
/* 12193 */             project_value946 = project_result331;
/* 12194 */           }
/* 12195 */           Object project_arg327 = project_isNull946 ? null : project_converter330.apply(project_value946);
/* 12196 */
/* 12197 */           InternalRow project_result330 = null;
/* 12198 */           try {
/* 12199 */             project_result330 = (InternalRow)project_catalystConverter330.apply(project_udf330.apply(project_arg327));
/* 12200 */           } catch (Exception e) {
/* 12201 */             throw new org.apache.spark.SparkException(project_scalaUDF330.udfErrorMessage(), e);
/* 12202 */           }
/* 12203 */
/* 12204 */           boolean project_isNull945 = project_result330 == null;
/* 12205 */           InternalRow project_value945 = null;
/* 12206 */           if (!project_isNull945) {
/* 12207 */             project_value945 = project_result330;
/* 12208 */           }
/* 12209 */           project_isNull940 = project_isNull945;
/* 12210 */           project_value940 = project_value945;
/* 12211 */         }
/* 12212 */         if (project_isNull940) {
/* 12213 */           project_values5[22] = null;
/* 12214 */         } else {
/* 12215 */           project_values5[22] = project_value940;
/* 12216 */         }
/* 12217 */
/* 12218 */         Object project_arg328 = sort_isNull23 ? null : project_converter332.apply(sort_value23);
/* 12219 */
/* 12220 */         Double project_result332 = null;
/* 12221 */         try {
/* 12222 */           project_result332 = (Double)project_catalystConverter332.apply(project_udf332.apply(project_arg328));
/* 12223 */         } catch (Exception e) {
/* 12224 */           throw new org.apache.spark.SparkException(project_scalaUDF332.udfErrorMessage(), e);
/* 12225 */         }
/* 12226 */
/* 12227 */         boolean project_isNull950 = project_result332 == null;
/* 12228 */         double project_value950 = -1.0;
/* 12229 */         if (!project_isNull950) {
/* 12230 */           project_value950 = project_result332;
/* 12231 */         }
/* 12232 */         boolean project_isNull948 = false;
/* 12233 */         InternalRow project_value948 = null;
/* 12234 */         if (!false && project_isNull950) {
/* 12235 */           final InternalRow project_value952 = null;
/* 12236 */           project_isNull948 = true;
/* 12237 */           project_value948 = project_value952;
/* 12238 */         } else {
/* 12239 */           Object project_arg329 = sort_isNull23 ? null : project_converter334.apply(sort_value23);
/* 12240 */
/* 12241 */           Double project_result334 = null;
/* 12242 */           try {
/* 12243 */             project_result334 = (Double)project_catalystConverter334.apply(project_udf334.apply(project_arg329));
/* 12244 */           } catch (Exception e) {
/* 12245 */             throw new org.apache.spark.SparkException(project_scalaUDF334.udfErrorMessage(), e);
/* 12246 */           }
/* 12247 */
/* 12248 */           boolean project_isNull954 = project_result334 == null;
/* 12249 */           double project_value954 = -1.0;
/* 12250 */           if (!project_isNull954) {
/* 12251 */             project_value954 = project_result334;
/* 12252 */           }
/* 12253 */           Object project_arg330 = project_isNull954 ? null : project_converter333.apply(project_value954);
/* 12254 */
/* 12255 */           InternalRow project_result333 = null;
/* 12256 */           try {
/* 12257 */             project_result333 = (InternalRow)project_catalystConverter333.apply(project_udf333.apply(project_arg330));
/* 12258 */           } catch (Exception e) {
/* 12259 */             throw new org.apache.spark.SparkException(project_scalaUDF333.udfErrorMessage(), e);
/* 12260 */           }
/* 12261 */
/* 12262 */           boolean project_isNull953 = project_result333 == null;
/* 12263 */           InternalRow project_value953 = null;
/* 12264 */           if (!project_isNull953) {
/* 12265 */             project_value953 = project_result333;
/* 12266 */           }
/* 12267 */           project_isNull948 = project_isNull953;
/* 12268 */           project_value948 = project_value953;
/* 12269 */         }
/* 12270 */         if (project_isNull948) {
/* 12271 */           project_values5[23] = null;
/* 12272 */         } else {
/* 12273 */           project_values5[23] = project_value948;
/* 12274 */         }
/* 12275 */
/* 12276 */         Object project_arg331 = sort_isNull24 ? null : project_converter335.apply(sort_value24);
/* 12277 */
/* 12278 */         Double project_result335 = null;
/* 12279 */         try {
/* 12280 */           project_result335 = (Double)project_catalystConverter335.apply(project_udf335.apply(project_arg331));
/* 12281 */         } catch (Exception e) {
/* 12282 */           throw new org.apache.spark.SparkException(project_scalaUDF335.udfErrorMessage(), e);
/* 12283 */         }
/* 12284 */
/* 12285 */         boolean project_isNull958 = project_result335 == null;
/* 12286 */         double project_value958 = -1.0;
/* 12287 */         if (!project_isNull958) {
/* 12288 */           project_value958 = project_result335;
/* 12289 */         }
/* 12290 */         boolean project_isNull956 = false;
/* 12291 */         InternalRow project_value956 = null;
/* 12292 */         if (!false && project_isNull958) {
/* 12293 */           final InternalRow project_value960 = null;
/* 12294 */           project_isNull956 = true;
/* 12295 */           project_value956 = project_value960;
/* 12296 */         } else {
/* 12297 */           Object project_arg332 = sort_isNull24 ? null : project_converter337.apply(sort_value24);
/* 12298 */
/* 12299 */           Double project_result337 = null;
/* 12300 */           try {
/* 12301 */             project_result337 = (Double)project_catalystConverter337.apply(project_udf337.apply(project_arg332));
/* 12302 */           } catch (Exception e) {
/* 12303 */             throw new org.apache.spark.SparkException(project_scalaUDF337.udfErrorMessage(), e);
/* 12304 */           }
/* 12305 */
/* 12306 */           boolean project_isNull962 = project_result337 == null;
/* 12307 */           double project_value962 = -1.0;
/* 12308 */           if (!project_isNull962) {
/* 12309 */             project_value962 = project_result337;
/* 12310 */           }
/* 12311 */           Object project_arg333 = project_isNull962 ? null : project_converter336.apply(project_value962);
/* 12312 */
/* 12313 */           InternalRow project_result336 = null;
/* 12314 */           try {
/* 12315 */             project_result336 = (InternalRow)project_catalystConverter336.apply(project_udf336.apply(project_arg333));
/* 12316 */           } catch (Exception e) {
/* 12317 */             throw new org.apache.spark.SparkException(project_scalaUDF336.udfErrorMessage(), e);
/* 12318 */           }
/* 12319 */
/* 12320 */           boolean project_isNull961 = project_result336 == null;
/* 12321 */           InternalRow project_value961 = null;
/* 12322 */           if (!project_isNull961) {
/* 12323 */             project_value961 = project_result336;
/* 12324 */           }
/* 12325 */           project_isNull956 = project_isNull961;
/* 12326 */           project_value956 = project_value961;
/* 12327 */         }
/* 12328 */         if (project_isNull956) {
/* 12329 */           project_values5[24] = null;
/* 12330 */         } else {
/* 12331 */           project_values5[24] = project_value956;
/* 12332 */         }
/* 12333 */
/* 12334 */         Object project_arg334 = sort_isNull25 ? null : project_converter338.apply(sort_value25);
/* 12335 */
/* 12336 */         Double project_result338 = null;
/* 12337 */         try {
/* 12338 */           project_result338 = (Double)project_catalystConverter338.apply(project_udf338.apply(project_arg334));
/* 12339 */         } catch (Exception e) {
/* 12340 */           throw new org.apache.spark.SparkException(project_scalaUDF338.udfErrorMessage(), e);
/* 12341 */         }
/* 12342 */
/* 12343 */         boolean project_isNull966 = project_result338 == null;
/* 12344 */         double project_value966 = -1.0;
/* 12345 */         if (!project_isNull966) {
/* 12346 */           project_value966 = project_result338;
/* 12347 */         }
/* 12348 */         boolean project_isNull964 = false;
/* 12349 */         InternalRow project_value964 = null;
/* 12350 */         if (!false && project_isNull966) {
/* 12351 */           final InternalRow project_value968 = null;
/* 12352 */           project_isNull964 = true;
/* 12353 */           project_value964 = project_value968;
/* 12354 */         } else {
/* 12355 */           Object project_arg335 = sort_isNull25 ? null : project_converter340.apply(sort_value25);
/* 12356 */
/* 12357 */           Double project_result340 = null;
/* 12358 */           try {
/* 12359 */             project_result340 = (Double)project_catalystConverter340.apply(project_udf340.apply(project_arg335));
/* 12360 */           } catch (Exception e) {
/* 12361 */             throw new org.apache.spark.SparkException(project_scalaUDF340.udfErrorMessage(), e);
/* 12362 */           }
/* 12363 */
/* 12364 */           boolean project_isNull970 = project_result340 == null;
/* 12365 */           double project_value970 = -1.0;
/* 12366 */           if (!project_isNull970) {
/* 12367 */             project_value970 = project_result340;
/* 12368 */           }
/* 12369 */           Object project_arg336 = project_isNull970 ? null : project_converter339.apply(project_value970);
/* 12370 */
/* 12371 */           InternalRow project_result339 = null;
/* 12372 */           try {
/* 12373 */             project_result339 = (InternalRow)project_catalystConverter339.apply(project_udf339.apply(project_arg336));
/* 12374 */           } catch (Exception e) {
/* 12375 */             throw new org.apache.spark.SparkException(project_scalaUDF339.udfErrorMessage(), e);
/* 12376 */           }
/* 12377 */
/* 12378 */           boolean project_isNull969 = project_result339 == null;
/* 12379 */           InternalRow project_value969 = null;
/* 12380 */           if (!project_isNull969) {
/* 12381 */             project_value969 = project_result339;
/* 12382 */           }
/* 12383 */           project_isNull964 = project_isNull969;
/* 12384 */           project_value964 = project_value969;
/* 12385 */         }
/* 12386 */         if (project_isNull964) {
/* 12387 */           project_values5[25] = null;
/* 12388 */         } else {
/* 12389 */           project_values5[25] = project_value964;
/* 12390 */         }
/* 12391 */
/* 12392 */         if (sort_isNull27) {
/* 12393 */           project_values5[26] = null;
/* 12394 */         } else {
/* 12395 */           project_values5[26] = sort_value27;
/* 12396 */         }
/* 12397 */         final InternalRow project_value819 = new org.apache.spark.sql.catalyst.expressions.GenericInternalRow(project_values5);
/* 12398 */         this.project_values5 = null;
/* 12399 */         Object project_arg337 = false ? null : project_converter286.apply(project_value819);
/* 12400 */
/* 12401 */         InternalRow project_result286 = null;
/* 12402 */         try {
/* 12403 */           project_result286 = (InternalRow)project_catalystConverter286.apply(project_udf286.apply(project_arg337));
/* 12404 */         } catch (Exception e) {
/* 12405 */           throw new org.apache.spark.SparkException(project_scalaUDF286.udfErrorMessage(), e);
/* 12406 */         }
/* 12407 */
/* 12408 */         boolean project_isNull818 = project_result286 == null;
/* 12409 */         InternalRow project_value818 = null;
/* 12410 */         if (!project_isNull818) {
/* 12411 */           project_value818 = project_result286;
/* 12412 */         }
/* 12413 */         Object project_arg338 = project_isNull818 ? null : project_converter285.apply(project_value818);
/* 12414 */
/* 12415 */         InternalRow project_result285 = null;
/* 12416 */         try {
/* 12417 */           project_result285 = (InternalRow)project_catalystConverter285.apply(project_udf285.apply(project_arg338));
/* 12418 */         } catch (Exception e) {
/* 12419 */           throw new org.apache.spark.SparkException(project_scalaUDF285.udfErrorMessage(), e);
/* 12420 */         }
/* 12421 */
/* 12422 */         boolean project_isNull817 = project_result285 == null;
/* 12423 */         InternalRow project_value817 = null;
/* 12424 */         if (!project_isNull817) {
/* 12425 */           project_value817 = project_result285;
/* 12426 */         }
/* 12427 */         Object project_arg339 = project_isNull817 ? null : project_converter284.apply(project_value817);
/* 12428 */
/* 12429 */         Double project_result284 = null;
/* 12430 */         try {
/* 12431 */           project_result284 = (Double)project_catalystConverter284.apply(project_udf284.apply(project_arg339));
/* 12432 */         } catch (Exception e) {
/* 12433 */           throw new org.apache.spark.SparkException(project_scalaUDF284.udfErrorMessage(), e);
/* 12434 */         }
/* 12435 */
/* 12436 */         boolean project_isNull816 = project_result284 == null;
/* 12437 */         double project_value816 = -1.0;
/* 12438 */         if (!project_isNull816) {
/* 12439 */           project_value816 = project_result284;
/* 12440 */         }
/* 12441 */         Object project_arg340 = project_isNull816 ? null : project_converter283.apply(project_value816);
/* 12442 */
/* 12443 */         UTF8String project_result283 = null;
/* 12444 */         try {
/* 12445 */           project_result283 = (UTF8String)project_catalystConverter283.apply(project_udf283.apply(project_arg340));
/* 12446 */         } catch (Exception e) {
/* 12447 */           throw new org.apache.spark.SparkException(project_scalaUDF283.udfErrorMessage(), e);
/* 12448 */         }
/* 12449 */
/* 12450 */         boolean project_isNull815 = project_result283 == null;
/* 12451 */         UTF8String project_value815 = null;
/* 12452 */         if (!project_isNull815) {
/* 12453 */           project_value815 = project_result283;
/* 12454 */         }
/* 12455 */         project_isNull655 = project_isNull815;
/* 12456 */         project_value655 = project_value815;
/* 12457 */       }
/* 12458 */       project_values6 = new Object[27];
/* 12459 */       Object project_arg341 = sort_isNull ? null : project_converter346.apply(sort_value);
/* 12460 */
/* 12461 */       Double project_result345 = null;
/* 12462 */       try {
/* 12463 */         project_result345 = (Double)project_catalystConverter345.apply(project_udf345.apply(project_arg341));
/* 12464 */       } catch (Exception e) {
/* 12465 */         throw new org.apache.spark.SparkException(project_scalaUDF345.udfErrorMessage(), e);
/* 12466 */       }
/* 12467 */
/* 12468 */       boolean project_isNull980 = project_result345 == null;
/* 12469 */       double project_value980 = -1.0;
/* 12470 */       if (!project_isNull980) {
/* 12471 */         project_value980 = project_result345;
/* 12472 */       }
/* 12473 */       boolean project_isNull978 = false;
/* 12474 */       InternalRow project_value978 = null;
/* 12475 */       if (!false && project_isNull980) {
/* 12476 */         final InternalRow project_value982 = null;
/* 12477 */         project_isNull978 = true;
/* 12478 */         project_value978 = project_value982;
/* 12479 */       } else {
/* 12480 */         Object project_arg342 = sort_isNull ? null : project_converter348.apply(sort_value);
/* 12481 */
/* 12482 */         Double project_result347 = null;
/* 12483 */         try {
/* 12484 */           project_result347 = (Double)project_catalystConverter347.apply(project_udf347.apply(project_arg342));
/* 12485 */         } catch (Exception e) {
/* 12486 */           throw new org.apache.spark.SparkException(project_scalaUDF347.udfErrorMessage(), e);
/* 12487 */         }
/* 12488 */
/* 12489 */         boolean project_isNull984 = project_result347 == null;
/* 12490 */         double project_value984 = -1.0;
/* 12491 */         if (!project_isNull984) {
/* 12492 */           project_value984 = project_result347;
/* 12493 */         }
/* 12494 */         Object project_arg343 = project_isNull984 ? null : project_converter347.apply(project_value984);
/* 12495 */
/* 12496 */         InternalRow project_result346 = null;
/* 12497 */         try {
/* 12498 */           project_result346 = (InternalRow)project_catalystConverter346.apply(project_udf346.apply(project_arg343));
/* 12499 */         } catch (Exception e) {
/* 12500 */           throw new org.apache.spark.SparkException(project_scalaUDF346.udfErrorMessage(), e);
/* 12501 */         }
/* 12502 */
/* 12503 */         boolean project_isNull983 = project_result346 == null;
/* 12504 */         InternalRow project_value983 = null;
/* 12505 */         if (!project_isNull983) {
/* 12506 */           project_value983 = project_result346;
/* 12507 */         }
/* 12508 */         project_isNull978 = project_isNull983;
/* 12509 */         project_value978 = project_value983;
/* 12510 */       }
/* 12511 */       if (project_isNull978) {
/* 12512 */         project_values6[0] = null;
/* 12513 */       } else {
/* 12514 */         project_values6[0] = project_value978;
/* 12515 */       }
/* 12516 */
/* 12517 */       Object project_arg344 = sort_isNull1 ? null : project_converter349.apply(sort_value1);
/* 12518 */
/* 12519 */       Double project_result348 = null;
/* 12520 */       try {
/* 12521 */         project_result348 = (Double)project_catalystConverter348.apply(project_udf348.apply(project_arg344));
/* 12522 */       } catch (Exception e) {
/* 12523 */         throw new org.apache.spark.SparkException(project_scalaUDF348.udfErrorMessage(), e);
/* 12524 */       }
/* 12525 */
/* 12526 */       boolean project_isNull988 = project_result348 == null;
/* 12527 */       double project_value988 = -1.0;
/* 12528 */       if (!project_isNull988) {
/* 12529 */         project_value988 = project_result348;
/* 12530 */       }
/* 12531 */       boolean project_isNull986 = false;
/* 12532 */       InternalRow project_value986 = null;
/* 12533 */       if (!false && project_isNull988) {
/* 12534 */         final InternalRow project_value990 = null;
/* 12535 */         project_isNull986 = true;
/* 12536 */         project_value986 = project_value990;
/* 12537 */       } else {
/* 12538 */         Object project_arg345 = sort_isNull1 ? null : project_converter351.apply(sort_value1);
/* 12539 */
/* 12540 */         Double project_result350 = null;
/* 12541 */         try {
/* 12542 */           project_result350 = (Double)project_catalystConverter350.apply(project_udf350.apply(project_arg345));
/* 12543 */         } catch (Exception e) {
/* 12544 */           throw new org.apache.spark.SparkException(project_scalaUDF350.udfErrorMessage(), e);
/* 12545 */         }
/* 12546 */
/* 12547 */         boolean project_isNull992 = project_result350 == null;
/* 12548 */         double project_value992 = -1.0;
/* 12549 */         if (!project_isNull992) {
/* 12550 */           project_value992 = project_result350;
/* 12551 */         }
/* 12552 */         Object project_arg346 = project_isNull992 ? null : project_converter350.apply(project_value992);
/* 12553 */
/* 12554 */         InternalRow project_result349 = null;
/* 12555 */         try {
/* 12556 */           project_result349 = (InternalRow)project_catalystConverter349.apply(project_udf349.apply(project_arg346));
/* 12557 */         } catch (Exception e) {
/* 12558 */           throw new org.apache.spark.SparkException(project_scalaUDF349.udfErrorMessage(), e);
/* 12559 */         }
/* 12560 */
/* 12561 */         boolean project_isNull991 = project_result349 == null;
/* 12562 */         InternalRow project_value991 = null;
/* 12563 */         if (!project_isNull991) {
/* 12564 */           project_value991 = project_result349;
/* 12565 */         }
/* 12566 */         project_isNull986 = project_isNull991;
/* 12567 */         project_value986 = project_value991;
/* 12568 */       }
/* 12569 */       if (project_isNull986) {
/* 12570 */         project_values6[1] = null;
/* 12571 */       } else {
/* 12572 */         project_values6[1] = project_value986;
/* 12573 */       }
/* 12574 */
/* 12575 */       Object project_arg347 = sort_isNull2 ? null : project_converter352.apply(sort_value2);
/* 12576 */
/* 12577 */       Double project_result351 = null;
/* 12578 */       try {
/* 12579 */         project_result351 = (Double)project_catalystConverter351.apply(project_udf351.apply(project_arg347));
/* 12580 */       } catch (Exception e) {
/* 12581 */         throw new org.apache.spark.SparkException(project_scalaUDF351.udfErrorMessage(), e);
/* 12582 */       }
/* 12583 */
/* 12584 */       boolean project_isNull996 = project_result351 == null;
/* 12585 */       double project_value996 = -1.0;
/* 12586 */       if (!project_isNull996) {
/* 12587 */         project_value996 = project_result351;
/* 12588 */       }
/* 12589 */       boolean project_isNull994 = false;
/* 12590 */       InternalRow project_value994 = null;
/* 12591 */       if (!false && project_isNull996) {
/* 12592 */         final InternalRow project_value998 = null;
/* 12593 */         project_isNull994 = true;
/* 12594 */         project_value994 = project_value998;
/* 12595 */       } else {
/* 12596 */         Object project_arg348 = sort_isNull2 ? null : project_converter354.apply(sort_value2);
/* 12597 */
/* 12598 */         Double project_result353 = null;
/* 12599 */         try {
/* 12600 */           project_result353 = (Double)project_catalystConverter353.apply(project_udf353.apply(project_arg348));
/* 12601 */         } catch (Exception e) {
/* 12602 */           throw new org.apache.spark.SparkException(project_scalaUDF353.udfErrorMessage(), e);
/* 12603 */         }
/* 12604 */
/* 12605 */         boolean project_isNull1000 = project_result353 == null;
/* 12606 */         double project_value1000 = -1.0;
/* 12607 */         if (!project_isNull1000) {
/* 12608 */           project_value1000 = project_result353;
/* 12609 */         }
/* 12610 */         Object project_arg349 = project_isNull1000 ? null : project_converter353.apply(project_value1000);
/* 12611 */
/* 12612 */         InternalRow project_result352 = null;
/* 12613 */         try {
/* 12614 */           project_result352 = (InternalRow)project_catalystConverter352.apply(project_udf352.apply(project_arg349));
/* 12615 */         } catch (Exception e) {
/* 12616 */           throw new org.apache.spark.SparkException(project_scalaUDF352.udfErrorMessage(), e);
/* 12617 */         }
/* 12618 */
/* 12619 */         boolean project_isNull999 = project_result352 == null;
/* 12620 */         InternalRow project_value999 = null;
/* 12621 */         if (!project_isNull999) {
/* 12622 */           project_value999 = project_result352;
/* 12623 */         }
/* 12624 */         project_isNull994 = project_isNull999;
/* 12625 */         project_value994 = project_value999;
/* 12626 */       }
/* 12627 */       if (project_isNull994) {
/* 12628 */         project_values6[2] = null;
/* 12629 */       } else {
/* 12630 */         project_values6[2] = project_value994;
/* 12631 */       }
/* 12632 */
/* 12633 */       Object project_arg350 = sort_isNull3 ? null : project_converter355.apply(sort_value3);
/* 12634 */
/* 12635 */       Double project_result354 = null;
/* 12636 */       try {
/* 12637 */         project_result354 = (Double)project_catalystConverter354.apply(project_udf354.apply(project_arg350));
/* 12638 */       } catch (Exception e) {
/* 12639 */         throw new org.apache.spark.SparkException(project_scalaUDF354.udfErrorMessage(), e);
/* 12640 */       }
/* 12641 */
/* 12642 */       boolean project_isNull1004 = project_result354 == null;
/* 12643 */       double project_value1004 = -1.0;
/* 12644 */       if (!project_isNull1004) {
/* 12645 */         project_value1004 = project_result354;
/* 12646 */       }
/* 12647 */       boolean project_isNull1002 = false;
/* 12648 */       InternalRow project_value1002 = null;
/* 12649 */       if (!false && project_isNull1004) {
/* 12650 */         final InternalRow project_value1006 = null;
/* 12651 */         project_isNull1002 = true;
/* 12652 */         project_value1002 = project_value1006;
/* 12653 */       } else {
/* 12654 */         Object project_arg351 = sort_isNull3 ? null : project_converter357.apply(sort_value3);
/* 12655 */
/* 12656 */         Double project_result356 = null;
/* 12657 */         try {
/* 12658 */           project_result356 = (Double)project_catalystConverter356.apply(project_udf356.apply(project_arg351));
/* 12659 */         } catch (Exception e) {
/* 12660 */           throw new org.apache.spark.SparkException(project_scalaUDF356.udfErrorMessage(), e);
/* 12661 */         }
/* 12662 */
/* 12663 */         boolean project_isNull1008 = project_result356 == null;
/* 12664 */         double project_value1008 = -1.0;
/* 12665 */         if (!project_isNull1008) {
/* 12666 */           project_value1008 = project_result356;
/* 12667 */         }
/* 12668 */         Object project_arg352 = project_isNull1008 ? null : project_converter356.apply(project_value1008);
/* 12669 */
/* 12670 */         InternalRow project_result355 = null;
/* 12671 */         try {
/* 12672 */           project_result355 = (InternalRow)project_catalystConverter355.apply(project_udf355.apply(project_arg352));
/* 12673 */         } catch (Exception e) {
/* 12674 */           throw new org.apache.spark.SparkException(project_scalaUDF355.udfErrorMessage(), e);
/* 12675 */         }
/* 12676 */
/* 12677 */         boolean project_isNull1007 = project_result355 == null;
/* 12678 */         InternalRow project_value1007 = null;
/* 12679 */         if (!project_isNull1007) {
/* 12680 */           project_value1007 = project_result355;
/* 12681 */         }
/* 12682 */         project_isNull1002 = project_isNull1007;
/* 12683 */         project_value1002 = project_value1007;
/* 12684 */       }
/* 12685 */       if (project_isNull1002) {
/* 12686 */         project_values6[3] = null;
/* 12687 */       } else {
/* 12688 */         project_values6[3] = project_value1002;
/* 12689 */       }
/* 12690 */
/* 12691 */       Object project_arg353 = sort_isNull4 ? null : project_converter358.apply(sort_value4);
/* 12692 */
/* 12693 */       Double project_result357 = null;
/* 12694 */       try {
/* 12695 */         project_result357 = (Double)project_catalystConverter357.apply(project_udf357.apply(project_arg353));
/* 12696 */       } catch (Exception e) {
/* 12697 */         throw new org.apache.spark.SparkException(project_scalaUDF357.udfErrorMessage(), e);
/* 12698 */       }
/* 12699 */
/* 12700 */       boolean project_isNull1012 = project_result357 == null;
/* 12701 */       double project_value1012 = -1.0;
/* 12702 */       if (!project_isNull1012) {
/* 12703 */         project_value1012 = project_result357;
/* 12704 */       }
/* 12705 */       boolean project_isNull1010 = false;
/* 12706 */       InternalRow project_value1010 = null;
/* 12707 */       if (!false && project_isNull1012) {
/* 12708 */         final InternalRow project_value1014 = null;
/* 12709 */         project_isNull1010 = true;
/* 12710 */         project_value1010 = project_value1014;
/* 12711 */       } else {
/* 12712 */         Object project_arg354 = sort_isNull4 ? null : project_converter360.apply(sort_value4);
/* 12713 */
/* 12714 */         Double project_result359 = null;
/* 12715 */         try {
/* 12716 */           project_result359 = (Double)project_catalystConverter359.apply(project_udf359.apply(project_arg354));
/* 12717 */         } catch (Exception e) {
/* 12718 */           throw new org.apache.spark.SparkException(project_scalaUDF359.udfErrorMessage(), e);
/* 12719 */         }
/* 12720 */
/* 12721 */         boolean project_isNull1016 = project_result359 == null;
/* 12722 */         double project_value1016 = -1.0;
/* 12723 */         if (!project_isNull1016) {
/* 12724 */           project_value1016 = project_result359;
/* 12725 */         }
/* 12726 */         Object project_arg355 = project_isNull1016 ? null : project_converter359.apply(project_value1016);
/* 12727 */
/* 12728 */         InternalRow project_result358 = null;
/* 12729 */         try {
/* 12730 */           project_result358 = (InternalRow)project_catalystConverter358.apply(project_udf358.apply(project_arg355));
/* 12731 */         } catch (Exception e) {
/* 12732 */           throw new org.apache.spark.SparkException(project_scalaUDF358.udfErrorMessage(), e);
/* 12733 */         }
/* 12734 */
/* 12735 */         boolean project_isNull1015 = project_result358 == null;
/* 12736 */         InternalRow project_value1015 = null;
/* 12737 */         if (!project_isNull1015) {
/* 12738 */           project_value1015 = project_result358;
/* 12739 */         }
/* 12740 */         project_isNull1010 = project_isNull1015;
/* 12741 */         project_value1010 = project_value1015;
/* 12742 */       }
/* 12743 */       if (project_isNull1010) {
/* 12744 */         project_values6[4] = null;
/* 12745 */       } else {
/* 12746 */         project_values6[4] = project_value1010;
/* 12747 */       }
/* 12748 */
/* 12749 */       Object project_arg356 = sort_isNull5 ? null : project_converter361.apply(sort_value5);
/* 12750 */
/* 12751 */       Double project_result360 = null;
/* 12752 */       try {
/* 12753 */         project_result360 = (Double)project_catalystConverter360.apply(project_udf360.apply(project_arg356));
/* 12754 */       } catch (Exception e) {
/* 12755 */         throw new org.apache.spark.SparkException(project_scalaUDF360.udfErrorMessage(), e);
/* 12756 */       }
/* 12757 */
/* 12758 */       boolean project_isNull1020 = project_result360 == null;
/* 12759 */       double project_value1020 = -1.0;
/* 12760 */       if (!project_isNull1020) {
/* 12761 */         project_value1020 = project_result360;
/* 12762 */       }
/* 12763 */       boolean project_isNull1018 = false;
/* 12764 */       InternalRow project_value1018 = null;
/* 12765 */       if (!false && project_isNull1020) {
/* 12766 */         final InternalRow project_value1022 = null;
/* 12767 */         project_isNull1018 = true;
/* 12768 */         project_value1018 = project_value1022;
/* 12769 */       } else {
/* 12770 */         Object project_arg357 = sort_isNull5 ? null : project_converter363.apply(sort_value5);
/* 12771 */
/* 12772 */         Double project_result362 = null;
/* 12773 */         try {
/* 12774 */           project_result362 = (Double)project_catalystConverter362.apply(project_udf362.apply(project_arg357));
/* 12775 */         } catch (Exception e) {
/* 12776 */           throw new org.apache.spark.SparkException(project_scalaUDF362.udfErrorMessage(), e);
/* 12777 */         }
/* 12778 */
/* 12779 */         boolean project_isNull1024 = project_result362 == null;
/* 12780 */         double project_value1024 = -1.0;
/* 12781 */         if (!project_isNull1024) {
/* 12782 */           project_value1024 = project_result362;
/* 12783 */         }
/* 12784 */         Object project_arg358 = project_isNull1024 ? null : project_converter362.apply(project_value1024);
/* 12785 */
/* 12786 */         InternalRow project_result361 = null;
/* 12787 */         try {
/* 12788 */           project_result361 = (InternalRow)project_catalystConverter361.apply(project_udf361.apply(project_arg358));
/* 12789 */         } catch (Exception e) {
/* 12790 */           throw new org.apache.spark.SparkException(project_scalaUDF361.udfErrorMessage(), e);
/* 12791 */         }
/* 12792 */
/* 12793 */         boolean project_isNull1023 = project_result361 == null;
/* 12794 */         InternalRow project_value1023 = null;
/* 12795 */         if (!project_isNull1023) {
/* 12796 */           project_value1023 = project_result361;
/* 12797 */         }
/* 12798 */         project_isNull1018 = project_isNull1023;
/* 12799 */         project_value1018 = project_value1023;
/* 12800 */       }
/* 12801 */       if (project_isNull1018) {
/* 12802 */         project_values6[5] = null;
/* 12803 */       } else {
/* 12804 */         project_values6[5] = project_value1018;
/* 12805 */       }
/* 12806 */
/* 12807 */       if (sort_isNull6) {
/* 12808 */         project_values6[6] = null;
/* 12809 */       } else {
/* 12810 */         project_values6[6] = sort_value6;
/* 12811 */       }
/* 12812 */
/* 12813 */       if (sort_isNull7) {
/* 12814 */         project_values6[7] = null;
/* 12815 */       } else {
/* 12816 */         project_values6[7] = sort_value7;
/* 12817 */       }
/* 12818 */
/* 12819 */       if (sort_isNull8) {
/* 12820 */         project_values6[8] = null;
/* 12821 */       } else {
/* 12822 */         project_values6[8] = sort_value8;
/* 12823 */       }
/* 12824 */
/* 12825 */       if (sort_isNull9) {
/* 12826 */         project_values6[9] = null;
/* 12827 */       } else {
/* 12828 */         project_values6[9] = sort_value9;
/* 12829 */       }
/* 12830 */
/* 12831 */       if (sort_isNull10) {
/* 12832 */         project_values6[10] = null;
/* 12833 */       } else {
/* 12834 */         project_values6[10] = sort_value10;
/* 12835 */       }
/* 12836 */
/* 12837 */       if (sort_isNull11) {
/* 12838 */         project_values6[11] = null;
/* 12839 */       } else {
/* 12840 */         project_values6[11] = sort_value11;
/* 12841 */       }
/* 12842 */
/* 12843 */       if (sort_isNull12) {
/* 12844 */         project_values6[12] = null;
/* 12845 */       } else {
/* 12846 */         project_values6[12] = sort_value12;
/* 12847 */       }
/* 12848 */
/* 12849 */       Object project_arg359 = sort_isNull13 ? null : project_converter364.apply(sort_value13);
/* 12850 */
/* 12851 */       Double project_result363 = null;
/* 12852 */       try {
/* 12853 */         project_result363 = (Double)project_catalystConverter363.apply(project_udf363.apply(project_arg359));
/* 12854 */       } catch (Exception e) {
/* 12855 */         throw new org.apache.spark.SparkException(project_scalaUDF363.udfErrorMessage(), e);
/* 12856 */       }
/* 12857 */
/* 12858 */       boolean project_isNull1035 = project_result363 == null;
/* 12859 */       double project_value1035 = -1.0;
/* 12860 */       if (!project_isNull1035) {
/* 12861 */         project_value1035 = project_result363;
/* 12862 */       }
/* 12863 */       boolean project_isNull1033 = false;
/* 12864 */       InternalRow project_value1033 = null;
/* 12865 */       if (!false && project_isNull1035) {
/* 12866 */         final InternalRow project_value1037 = null;
/* 12867 */         project_isNull1033 = true;
/* 12868 */         project_value1033 = project_value1037;
/* 12869 */       } else {
/* 12870 */         Object project_arg360 = sort_isNull13 ? null : project_converter366.apply(sort_value13);
/* 12871 */
/* 12872 */         Double project_result365 = null;
/* 12873 */         try {
/* 12874 */           project_result365 = (Double)project_catalystConverter365.apply(project_udf365.apply(project_arg360));
/* 12875 */         } catch (Exception e) {
/* 12876 */           throw new org.apache.spark.SparkException(project_scalaUDF365.udfErrorMessage(), e);
/* 12877 */         }
/* 12878 */
/* 12879 */         boolean project_isNull1039 = project_result365 == null;
/* 12880 */         double project_value1039 = -1.0;
/* 12881 */         if (!project_isNull1039) {
/* 12882 */           project_value1039 = project_result365;
/* 12883 */         }
/* 12884 */         Object project_arg361 = project_isNull1039 ? null : project_converter365.apply(project_value1039);
/* 12885 */
/* 12886 */         InternalRow project_result364 = null;
/* 12887 */         try {
/* 12888 */           project_result364 = (InternalRow)project_catalystConverter364.apply(project_udf364.apply(project_arg361));
/* 12889 */         } catch (Exception e) {
/* 12890 */           throw new org.apache.spark.SparkException(project_scalaUDF364.udfErrorMessage(), e);
/* 12891 */         }
/* 12892 */
/* 12893 */         boolean project_isNull1038 = project_result364 == null;
/* 12894 */         InternalRow project_value1038 = null;
/* 12895 */         if (!project_isNull1038) {
/* 12896 */           project_value1038 = project_result364;
/* 12897 */         }
/* 12898 */         project_isNull1033 = project_isNull1038;
/* 12899 */         project_value1033 = project_value1038;
/* 12900 */       }
/* 12901 */       if (project_isNull1033) {
/* 12902 */         project_values6[13] = null;
/* 12903 */       } else {
/* 12904 */         project_values6[13] = project_value1033;
/* 12905 */       }
/* 12906 */
/* 12907 */       Object project_arg362 = sort_isNull14 ? null : project_converter367.apply(sort_value14);
/* 12908 */
/* 12909 */       Double project_result366 = null;
/* 12910 */       try {
/* 12911 */         project_result366 = (Double)project_catalystConverter366.apply(project_udf366.apply(project_arg362));
/* 12912 */       } catch (Exception e) {
/* 12913 */         throw new org.apache.spark.SparkException(project_scalaUDF366.udfErrorMessage(), e);
/* 12914 */       }
/* 12915 */
/* 12916 */       boolean project_isNull1043 = project_result366 == null;
/* 12917 */       double project_value1043 = -1.0;
/* 12918 */       if (!project_isNull1043) {
/* 12919 */         project_value1043 = project_result366;
/* 12920 */       }
/* 12921 */       boolean project_isNull1041 = false;
/* 12922 */       InternalRow project_value1041 = null;
/* 12923 */       if (!false && project_isNull1043) {
/* 12924 */         final InternalRow project_value1045 = null;
/* 12925 */         project_isNull1041 = true;
/* 12926 */         project_value1041 = project_value1045;
/* 12927 */       } else {
/* 12928 */         Object project_arg363 = sort_isNull14 ? null : project_converter369.apply(sort_value14);
/* 12929 */
/* 12930 */         Double project_result368 = null;
/* 12931 */         try {
/* 12932 */           project_result368 = (Double)project_catalystConverter368.apply(project_udf368.apply(project_arg363));
/* 12933 */         } catch (Exception e) {
/* 12934 */           throw new org.apache.spark.SparkException(project_scalaUDF368.udfErrorMessage(), e);
/* 12935 */         }
/* 12936 */
/* 12937 */         boolean project_isNull1047 = project_result368 == null;
/* 12938 */         double project_value1047 = -1.0;
/* 12939 */         if (!project_isNull1047) {
/* 12940 */           project_value1047 = project_result368;
/* 12941 */         }
/* 12942 */         Object project_arg364 = project_isNull1047 ? null : project_converter368.apply(project_value1047);
/* 12943 */
/* 12944 */         InternalRow project_result367 = null;
/* 12945 */         try {
/* 12946 */           project_result367 = (InternalRow)project_catalystConverter367.apply(project_udf367.apply(project_arg364));
/* 12947 */         } catch (Exception e) {
/* 12948 */           throw new org.apache.spark.SparkException(project_scalaUDF367.udfErrorMessage(), e);
/* 12949 */         }
/* 12950 */
/* 12951 */         boolean project_isNull1046 = project_result367 == null;
/* 12952 */         InternalRow project_value1046 = null;
/* 12953 */         if (!project_isNull1046) {
/* 12954 */           project_value1046 = project_result367;
/* 12955 */         }
/* 12956 */         project_isNull1041 = project_isNull1046;
/* 12957 */         project_value1041 = project_value1046;
/* 12958 */       }
/* 12959 */       if (project_isNull1041) {
/* 12960 */         project_values6[14] = null;
/* 12961 */       } else {
/* 12962 */         project_values6[14] = project_value1041;
/* 12963 */       }
/* 12964 */
/* 12965 */       Object project_arg365 = sort_isNull15 ? null : project_converter370.apply(sort_value15);
/* 12966 */
/* 12967 */       Double project_result369 = null;
/* 12968 */       try {
/* 12969 */         project_result369 = (Double)project_catalystConverter369.apply(project_udf369.apply(project_arg365));
/* 12970 */       } catch (Exception e) {
/* 12971 */         throw new org.apache.spark.SparkException(project_scalaUDF369.udfErrorMessage(), e);
/* 12972 */       }
/* 12973 */
/* 12974 */       boolean project_isNull1051 = project_result369 == null;
/* 12975 */       double project_value1051 = -1.0;
/* 12976 */       if (!project_isNull1051) {
/* 12977 */         project_value1051 = project_result369;
/* 12978 */       }
/* 12979 */       boolean project_isNull1049 = false;
/* 12980 */       InternalRow project_value1049 = null;
/* 12981 */       if (!false && project_isNull1051) {
/* 12982 */         final InternalRow project_value1053 = null;
/* 12983 */         project_isNull1049 = true;
/* 12984 */         project_value1049 = project_value1053;
/* 12985 */       } else {
/* 12986 */         Object project_arg366 = sort_isNull15 ? null : project_converter372.apply(sort_value15);
/* 12987 */
/* 12988 */         Double project_result371 = null;
/* 12989 */         try {
/* 12990 */           project_result371 = (Double)project_catalystConverter371.apply(project_udf371.apply(project_arg366));
/* 12991 */         } catch (Exception e) {
/* 12992 */           throw new org.apache.spark.SparkException(project_scalaUDF371.udfErrorMessage(), e);
/* 12993 */         }
/* 12994 */
/* 12995 */         boolean project_isNull1055 = project_result371 == null;
/* 12996 */         double project_value1055 = -1.0;
/* 12997 */         if (!project_isNull1055) {
/* 12998 */           project_value1055 = project_result371;
/* 12999 */         }
/* 13000 */         Object project_arg367 = project_isNull1055 ? null : project_converter371.apply(project_value1055);
/* 13001 */
/* 13002 */         InternalRow project_result370 = null;
/* 13003 */         try {
/* 13004 */           project_result370 = (InternalRow)project_catalystConverter370.apply(project_udf370.apply(project_arg367));
/* 13005 */         } catch (Exception e) {
/* 13006 */           throw new org.apache.spark.SparkException(project_scalaUDF370.udfErrorMessage(), e);
/* 13007 */         }
/* 13008 */
/* 13009 */         boolean project_isNull1054 = project_result370 == null;
/* 13010 */         InternalRow project_value1054 = null;
/* 13011 */         if (!project_isNull1054) {
/* 13012 */           project_value1054 = project_result370;
/* 13013 */         }
/* 13014 */         project_isNull1049 = project_isNull1054;
/* 13015 */         project_value1049 = project_value1054;
/* 13016 */       }
/* 13017 */       if (project_isNull1049) {
/* 13018 */         project_values6[15] = null;
/* 13019 */       } else {
/* 13020 */         project_values6[15] = project_value1049;
/* 13021 */       }
/* 13022 */
/* 13023 */       if (sort_isNull16) {
/* 13024 */         project_values6[16] = null;
/* 13025 */       } else {
/* 13026 */         project_values6[16] = sort_value16;
/* 13027 */       }
/* 13028 */
/* 13029 */       Object project_arg368 = sort_isNull17 ? null : project_converter373.apply(sort_value17);
/* 13030 */
/* 13031 */       Double project_result372 = null;
/* 13032 */       try {
/* 13033 */         project_result372 = (Double)project_catalystConverter372.apply(project_udf372.apply(project_arg368));
/* 13034 */       } catch (Exception e) {
/* 13035 */         throw new org.apache.spark.SparkException(project_scalaUDF372.udfErrorMessage(), e);
/* 13036 */       }
/* 13037 */
/* 13038 */       boolean project_isNull1060 = project_result372 == null;
/* 13039 */       double project_value1060 = -1.0;
/* 13040 */       if (!project_isNull1060) {
/* 13041 */         project_value1060 = project_result372;
/* 13042 */       }
/* 13043 */       boolean project_isNull1058 = false;
/* 13044 */       InternalRow project_value1058 = null;
/* 13045 */       if (!false && project_isNull1060) {
/* 13046 */         final InternalRow project_value1062 = null;
/* 13047 */         project_isNull1058 = true;
/* 13048 */         project_value1058 = project_value1062;
/* 13049 */       } else {
/* 13050 */         Object project_arg369 = sort_isNull17 ? null : project_converter375.apply(sort_value17);
/* 13051 */
/* 13052 */         Double project_result374 = null;
/* 13053 */         try {
/* 13054 */           project_result374 = (Double)project_catalystConverter374.apply(project_udf374.apply(project_arg369));
/* 13055 */         } catch (Exception e) {
/* 13056 */           throw new org.apache.spark.SparkException(project_scalaUDF374.udfErrorMessage(), e);
/* 13057 */         }
/* 13058 */
/* 13059 */         boolean project_isNull1064 = project_result374 == null;
/* 13060 */         double project_value1064 = -1.0;
/* 13061 */         if (!project_isNull1064) {
/* 13062 */           project_value1064 = project_result374;
/* 13063 */         }
/* 13064 */         Object project_arg370 = project_isNull1064 ? null : project_converter374.apply(project_value1064);
/* 13065 */
/* 13066 */         InternalRow project_result373 = null;
/* 13067 */         try {
/* 13068 */           project_result373 = (InternalRow)project_catalystConverter373.apply(project_udf373.apply(project_arg370));
/* 13069 */         } catch (Exception e) {
/* 13070 */           throw new org.apache.spark.SparkException(project_scalaUDF373.udfErrorMessage(), e);
/* 13071 */         }
/* 13072 */
/* 13073 */         boolean project_isNull1063 = project_result373 == null;
/* 13074 */         InternalRow project_value1063 = null;
/* 13075 */         if (!project_isNull1063) {
/* 13076 */           project_value1063 = project_result373;
/* 13077 */         }
/* 13078 */         project_isNull1058 = project_isNull1063;
/* 13079 */         project_value1058 = project_value1063;
/* 13080 */       }
/* 13081 */       if (project_isNull1058) {
/* 13082 */         project_values6[17] = null;
/* 13083 */       } else {
/* 13084 */         project_values6[17] = project_value1058;
/* 13085 */       }
/* 13086 */
/* 13087 */       Object project_arg371 = sort_isNull18 ? null : project_converter376.apply(sort_value18);
/* 13088 */
/* 13089 */       Double project_result375 = null;
/* 13090 */       try {
/* 13091 */         project_result375 = (Double)project_catalystConverter375.apply(project_udf375.apply(project_arg371));
/* 13092 */       } catch (Exception e) {
/* 13093 */         throw new org.apache.spark.SparkException(project_scalaUDF375.udfErrorMessage(), e);
/* 13094 */       }
/* 13095 */
/* 13096 */       boolean project_isNull1068 = project_result375 == null;
/* 13097 */       double project_value1068 = -1.0;
/* 13098 */       if (!project_isNull1068) {
/* 13099 */         project_value1068 = project_result375;
/* 13100 */       }
/* 13101 */       boolean project_isNull1066 = false;
/* 13102 */       InternalRow project_value1066 = null;
/* 13103 */       if (!false && project_isNull1068) {
/* 13104 */         final InternalRow project_value1070 = null;
/* 13105 */         project_isNull1066 = true;
/* 13106 */         project_value1066 = project_value1070;
/* 13107 */       } else {
/* 13108 */         Object project_arg372 = sort_isNull18 ? null : project_converter378.apply(sort_value18);
/* 13109 */
/* 13110 */         Double project_result377 = null;
/* 13111 */         try {
/* 13112 */           project_result377 = (Double)project_catalystConverter377.apply(project_udf377.apply(project_arg372));
/* 13113 */         } catch (Exception e) {
/* 13114 */           throw new org.apache.spark.SparkException(project_scalaUDF377.udfErrorMessage(), e);
/* 13115 */         }
/* 13116 */
/* 13117 */         boolean project_isNull1072 = project_result377 == null;
/* 13118 */         double project_value1072 = -1.0;
/* 13119 */         if (!project_isNull1072) {
/* 13120 */           project_value1072 = project_result377;
/* 13121 */         }
/* 13122 */         Object project_arg373 = project_isNull1072 ? null : project_converter377.apply(project_value1072);
/* 13123 */
/* 13124 */         InternalRow project_result376 = null;
/* 13125 */         try {
/* 13126 */           project_result376 = (InternalRow)project_catalystConverter376.apply(project_udf376.apply(project_arg373));
/* 13127 */         } catch (Exception e) {
/* 13128 */           throw new org.apache.spark.SparkException(project_scalaUDF376.udfErrorMessage(), e);
/* 13129 */         }
/* 13130 */
/* 13131 */         boolean project_isNull1071 = project_result376 == null;
/* 13132 */         InternalRow project_value1071 = null;
/* 13133 */         if (!project_isNull1071) {
/* 13134 */           project_value1071 = project_result376;
/* 13135 */         }
/* 13136 */         project_isNull1066 = project_isNull1071;
/* 13137 */         project_value1066 = project_value1071;
/* 13138 */       }
/* 13139 */       if (project_isNull1066) {
/* 13140 */         project_values6[18] = null;
/* 13141 */       } else {
/* 13142 */         project_values6[18] = project_value1066;
/* 13143 */       }
/* 13144 */
/* 13145 */       Object project_arg374 = sort_isNull19 ? null : project_converter379.apply(sort_value19);
/* 13146 */
/* 13147 */       Double project_result378 = null;
/* 13148 */       try {
/* 13149 */         project_result378 = (Double)project_catalystConverter378.apply(project_udf378.apply(project_arg374));
/* 13150 */       } catch (Exception e) {
/* 13151 */         throw new org.apache.spark.SparkException(project_scalaUDF378.udfErrorMessage(), e);
/* 13152 */       }
/* 13153 */
/* 13154 */       boolean project_isNull1076 = project_result378 == null;
/* 13155 */       double project_value1076 = -1.0;
/* 13156 */       if (!project_isNull1076) {
/* 13157 */         project_value1076 = project_result378;
/* 13158 */       }
/* 13159 */       boolean project_isNull1074 = false;
/* 13160 */       InternalRow project_value1074 = null;
/* 13161 */       if (!false && project_isNull1076) {
/* 13162 */         final InternalRow project_value1078 = null;
/* 13163 */         project_isNull1074 = true;
/* 13164 */         project_value1074 = project_value1078;
/* 13165 */       } else {
/* 13166 */         Object project_arg375 = sort_isNull19 ? null : project_converter381.apply(sort_value19);
/* 13167 */
/* 13168 */         Double project_result380 = null;
/* 13169 */         try {
/* 13170 */           project_result380 = (Double)project_catalystConverter380.apply(project_udf380.apply(project_arg375));
/* 13171 */         } catch (Exception e) {
/* 13172 */           throw new org.apache.spark.SparkException(project_scalaUDF380.udfErrorMessage(), e);
/* 13173 */         }
/* 13174 */
/* 13175 */         boolean project_isNull1080 = project_result380 == null;
/* 13176 */         double project_value1080 = -1.0;
/* 13177 */         if (!project_isNull1080) {
/* 13178 */           project_value1080 = project_result380;
/* 13179 */         }
/* 13180 */         Object project_arg376 = project_isNull1080 ? null : project_converter380.apply(project_value1080);
/* 13181 */
/* 13182 */         InternalRow project_result379 = null;
/* 13183 */         try {
/* 13184 */           project_result379 = (InternalRow)project_catalystConverter379.apply(project_udf379.apply(project_arg376));
/* 13185 */         } catch (Exception e) {
/* 13186 */           throw new org.apache.spark.SparkException(project_scalaUDF379.udfErrorMessage(), e);
/* 13187 */         }
/* 13188 */
/* 13189 */         boolean project_isNull1079 = project_result379 == null;
/* 13190 */         InternalRow project_value1079 = null;
/* 13191 */         if (!project_isNull1079) {
/* 13192 */           project_value1079 = project_result379;
/* 13193 */         }
/* 13194 */         project_isNull1074 = project_isNull1079;
/* 13195 */         project_value1074 = project_value1079;
/* 13196 */       }
/* 13197 */       if (project_isNull1074) {
/* 13198 */         project_values6[19] = null;
/* 13199 */       } else {
/* 13200 */         project_values6[19] = project_value1074;
/* 13201 */       }
/* 13202 */
/* 13203 */       Object project_arg377 = sort_isNull20 ? null : project_converter382.apply(sort_value20);
/* 13204 */
/* 13205 */       Double project_result381 = null;
/* 13206 */       try {
/* 13207 */         project_result381 = (Double)project_catalystConverter381.apply(project_udf381.apply(project_arg377));
/* 13208 */       } catch (Exception e) {
/* 13209 */         throw new org.apache.spark.SparkException(project_scalaUDF381.udfErrorMessage(), e);
/* 13210 */       }
/* 13211 */
/* 13212 */       boolean project_isNull1084 = project_result381 == null;
/* 13213 */       double project_value1084 = -1.0;
/* 13214 */       if (!project_isNull1084) {
/* 13215 */         project_value1084 = project_result381;
/* 13216 */       }
/* 13217 */       boolean project_isNull1082 = false;
/* 13218 */       InternalRow project_value1082 = null;
/* 13219 */       if (!false && project_isNull1084) {
/* 13220 */         final InternalRow project_value1086 = null;
/* 13221 */         project_isNull1082 = true;
/* 13222 */         project_value1082 = project_value1086;
/* 13223 */       } else {
/* 13224 */         Object project_arg378 = sort_isNull20 ? null : project_converter384.apply(sort_value20);
/* 13225 */
/* 13226 */         Double project_result383 = null;
/* 13227 */         try {
/* 13228 */           project_result383 = (Double)project_catalystConverter383.apply(project_udf383.apply(project_arg378));
/* 13229 */         } catch (Exception e) {
/* 13230 */           throw new org.apache.spark.SparkException(project_scalaUDF383.udfErrorMessage(), e);
/* 13231 */         }
/* 13232 */
/* 13233 */         boolean project_isNull1088 = project_result383 == null;
/* 13234 */         double project_value1088 = -1.0;
/* 13235 */         if (!project_isNull1088) {
/* 13236 */           project_value1088 = project_result383;
/* 13237 */         }
/* 13238 */         Object project_arg379 = project_isNull1088 ? null : project_converter383.apply(project_value1088);
/* 13239 */
/* 13240 */         InternalRow project_result382 = null;
/* 13241 */         try {
/* 13242 */           project_result382 = (InternalRow)project_catalystConverter382.apply(project_udf382.apply(project_arg379));
/* 13243 */         } catch (Exception e) {
/* 13244 */           throw new org.apache.spark.SparkException(project_scalaUDF382.udfErrorMessage(), e);
/* 13245 */         }
/* 13246 */
/* 13247 */         boolean project_isNull1087 = project_result382 == null;
/* 13248 */         InternalRow project_value1087 = null;
/* 13249 */         if (!project_isNull1087) {
/* 13250 */           project_value1087 = project_result382;
/* 13251 */         }
/* 13252 */         project_isNull1082 = project_isNull1087;
/* 13253 */         project_value1082 = project_value1087;
/* 13254 */       }
/* 13255 */       if (project_isNull1082) {
/* 13256 */         project_values6[20] = null;
/* 13257 */       } else {
/* 13258 */         project_values6[20] = project_value1082;
/* 13259 */       }
/* 13260 */
/* 13261 */       Object project_arg380 = sort_isNull21 ? null : project_converter385.apply(sort_value21);
/* 13262 */
/* 13263 */       Double project_result384 = null;
/* 13264 */       try {
/* 13265 */         project_result384 = (Double)project_catalystConverter384.apply(project_udf384.apply(project_arg380));
/* 13266 */       } catch (Exception e) {
/* 13267 */         throw new org.apache.spark.SparkException(project_scalaUDF384.udfErrorMessage(), e);
/* 13268 */       }
/* 13269 */
/* 13270 */       boolean project_isNull1092 = project_result384 == null;
/* 13271 */       double project_value1092 = -1.0;
/* 13272 */       if (!project_isNull1092) {
/* 13273 */         project_value1092 = project_result384;
/* 13274 */       }
/* 13275 */       boolean project_isNull1090 = false;
/* 13276 */       InternalRow project_value1090 = null;
/* 13277 */       if (!false && project_isNull1092) {
/* 13278 */         final InternalRow project_value1094 = null;
/* 13279 */         project_isNull1090 = true;
/* 13280 */         project_value1090 = project_value1094;
/* 13281 */       } else {
/* 13282 */         Object project_arg381 = sort_isNull21 ? null : project_converter387.apply(sort_value21);
/* 13283 */
/* 13284 */         Double project_result386 = null;
/* 13285 */         try {
/* 13286 */           project_result386 = (Double)project_catalystConverter386.apply(project_udf386.apply(project_arg381));
/* 13287 */         } catch (Exception e) {
/* 13288 */           throw new org.apache.spark.SparkException(project_scalaUDF386.udfErrorMessage(), e);
/* 13289 */         }
/* 13290 */
/* 13291 */         boolean project_isNull1096 = project_result386 == null;
/* 13292 */         double project_value1096 = -1.0;
/* 13293 */         if (!project_isNull1096) {
/* 13294 */           project_value1096 = project_result386;
/* 13295 */         }
/* 13296 */         Object project_arg382 = project_isNull1096 ? null : project_converter386.apply(project_value1096);
/* 13297 */
/* 13298 */         InternalRow project_result385 = null;
/* 13299 */         try {
/* 13300 */           project_result385 = (InternalRow)project_catalystConverter385.apply(project_udf385.apply(project_arg382));
/* 13301 */         } catch (Exception e) {
/* 13302 */           throw new org.apache.spark.SparkException(project_scalaUDF385.udfErrorMessage(), e);
/* 13303 */         }
/* 13304 */
/* 13305 */         boolean project_isNull1095 = project_result385 == null;
/* 13306 */         InternalRow project_value1095 = null;
/* 13307 */         if (!project_isNull1095) {
/* 13308 */           project_value1095 = project_result385;
/* 13309 */         }
/* 13310 */         project_isNull1090 = project_isNull1095;
/* 13311 */         project_value1090 = project_value1095;
/* 13312 */       }
/* 13313 */       if (project_isNull1090) {
/* 13314 */         project_values6[21] = null;
/* 13315 */       } else {
/* 13316 */         project_values6[21] = project_value1090;
/* 13317 */       }
/* 13318 */
/* 13319 */       Object project_arg383 = sort_isNull22 ? null : project_converter388.apply(sort_value22);
/* 13320 */
/* 13321 */       Double project_result387 = null;
/* 13322 */       try {
/* 13323 */         project_result387 = (Double)project_catalystConverter387.apply(project_udf387.apply(project_arg383));
/* 13324 */       } catch (Exception e) {
/* 13325 */         throw new org.apache.spark.SparkException(project_scalaUDF387.udfErrorMessage(), e);
/* 13326 */       }
/* 13327 */
/* 13328 */       boolean project_isNull1100 = project_result387 == null;
/* 13329 */       double project_value1100 = -1.0;
/* 13330 */       if (!project_isNull1100) {
/* 13331 */         project_value1100 = project_result387;
/* 13332 */       }
/* 13333 */       boolean project_isNull1098 = false;
/* 13334 */       InternalRow project_value1098 = null;
/* 13335 */       if (!false && project_isNull1100) {
/* 13336 */         final InternalRow project_value1102 = null;
/* 13337 */         project_isNull1098 = true;
/* 13338 */         project_value1098 = project_value1102;
/* 13339 */       } else {
/* 13340 */         Object project_arg384 = sort_isNull22 ? null : project_converter390.apply(sort_value22);
/* 13341 */
/* 13342 */         Double project_result389 = null;
/* 13343 */         try {
/* 13344 */           project_result389 = (Double)project_catalystConverter389.apply(project_udf389.apply(project_arg384));
/* 13345 */         } catch (Exception e) {
/* 13346 */           throw new org.apache.spark.SparkException(project_scalaUDF389.udfErrorMessage(), e);
/* 13347 */         }
/* 13348 */
/* 13349 */         boolean project_isNull1104 = project_result389 == null;
/* 13350 */         double project_value1104 = -1.0;
/* 13351 */         if (!project_isNull1104) {
/* 13352 */           project_value1104 = project_result389;
/* 13353 */         }
/* 13354 */         Object project_arg385 = project_isNull1104 ? null : project_converter389.apply(project_value1104);
/* 13355 */
/* 13356 */         InternalRow project_result388 = null;
/* 13357 */         try {
/* 13358 */           project_result388 = (InternalRow)project_catalystConverter388.apply(project_udf388.apply(project_arg385));
/* 13359 */         } catch (Exception e) {
/* 13360 */           throw new org.apache.spark.SparkException(project_scalaUDF388.udfErrorMessage(), e);
/* 13361 */         }
/* 13362 */
/* 13363 */         boolean project_isNull1103 = project_result388 == null;
/* 13364 */         InternalRow project_value1103 = null;
/* 13365 */         if (!project_isNull1103) {
/* 13366 */           project_value1103 = project_result388;
/* 13367 */         }
/* 13368 */         project_isNull1098 = project_isNull1103;
/* 13369 */         project_value1098 = project_value1103;
/* 13370 */       }
/* 13371 */       if (project_isNull1098) {
/* 13372 */         project_values6[22] = null;
/* 13373 */       } else {
/* 13374 */         project_values6[22] = project_value1098;
/* 13375 */       }
/* 13376 */
/* 13377 */       Object project_arg386 = sort_isNull23 ? null : project_converter391.apply(sort_value23);
/* 13378 */
/* 13379 */       Double project_result390 = null;
/* 13380 */       try {
/* 13381 */         project_result390 = (Double)project_catalystConverter390.apply(project_udf390.apply(project_arg386));
/* 13382 */       } catch (Exception e) {
/* 13383 */         throw new org.apache.spark.SparkException(project_scalaUDF390.udfErrorMessage(), e);
/* 13384 */       }
/* 13385 */
/* 13386 */       boolean project_isNull1108 = project_result390 == null;
/* 13387 */       double project_value1108 = -1.0;
/* 13388 */       if (!project_isNull1108) {
/* 13389 */         project_value1108 = project_result390;
/* 13390 */       }
/* 13391 */       boolean project_isNull1106 = false;
/* 13392 */       InternalRow project_value1106 = null;
/* 13393 */       if (!false && project_isNull1108) {
/* 13394 */         final InternalRow project_value1110 = null;
/* 13395 */         project_isNull1106 = true;
/* 13396 */         project_value1106 = project_value1110;
/* 13397 */       } else {
/* 13398 */         Object project_arg387 = sort_isNull23 ? null : project_converter393.apply(sort_value23);
/* 13399 */
/* 13400 */         Double project_result392 = null;
/* 13401 */         try {
/* 13402 */           project_result392 = (Double)project_catalystConverter392.apply(project_udf392.apply(project_arg387));
/* 13403 */         } catch (Exception e) {
/* 13404 */           throw new org.apache.spark.SparkException(project_scalaUDF392.udfErrorMessage(), e);
/* 13405 */         }
/* 13406 */
/* 13407 */         boolean project_isNull1112 = project_result392 == null;
/* 13408 */         double project_value1112 = -1.0;
/* 13409 */         if (!project_isNull1112) {
/* 13410 */           project_value1112 = project_result392;
/* 13411 */         }
/* 13412 */         Object project_arg388 = project_isNull1112 ? null : project_converter392.apply(project_value1112);
/* 13413 */
/* 13414 */         InternalRow project_result391 = null;
/* 13415 */         try {
/* 13416 */           project_result391 = (InternalRow)project_catalystConverter391.apply(project_udf391.apply(project_arg388));
/* 13417 */         } catch (Exception e) {
/* 13418 */           throw new org.apache.spark.SparkException(project_scalaUDF391.udfErrorMessage(), e);
/* 13419 */         }
/* 13420 */
/* 13421 */         boolean project_isNull1111 = project_result391 == null;
/* 13422 */         InternalRow project_value1111 = null;
/* 13423 */         if (!project_isNull1111) {
/* 13424 */           project_value1111 = project_result391;
/* 13425 */         }
/* 13426 */         project_isNull1106 = project_isNull1111;
/* 13427 */         project_value1106 = project_value1111;
/* 13428 */       }
/* 13429 */       if (project_isNull1106) {
/* 13430 */         project_values6[23] = null;
/* 13431 */       } else {
/* 13432 */         project_values6[23] = project_value1106;
/* 13433 */       }
/* 13434 */
/* 13435 */       Object project_arg389 = sort_isNull24 ? null : project_converter394.apply(sort_value24);
/* 13436 */
/* 13437 */       Double project_result393 = null;
/* 13438 */       try {
/* 13439 */         project_result393 = (Double)project_catalystConverter393.apply(project_udf393.apply(project_arg389));
/* 13440 */       } catch (Exception e) {
/* 13441 */         throw new org.apache.spark.SparkException(project_scalaUDF393.udfErrorMessage(), e);
/* 13442 */       }
/* 13443 */
/* 13444 */       boolean project_isNull1116 = project_result393 == null;
/* 13445 */       double project_value1116 = -1.0;
/* 13446 */       if (!project_isNull1116) {
/* 13447 */         project_value1116 = project_result393;
/* 13448 */       }
/* 13449 */       boolean project_isNull1114 = false;
/* 13450 */       InternalRow project_value1114 = null;
/* 13451 */       if (!false && project_isNull1116) {
/* 13452 */         final InternalRow project_value1118 = null;
/* 13453 */         project_isNull1114 = true;
/* 13454 */         project_value1114 = project_value1118;
/* 13455 */       } else {
/* 13456 */         Object project_arg390 = sort_isNull24 ? null : project_converter396.apply(sort_value24);
/* 13457 */
/* 13458 */         Double project_result395 = null;
/* 13459 */         try {
/* 13460 */           project_result395 = (Double)project_catalystConverter395.apply(project_udf395.apply(project_arg390));
/* 13461 */         } catch (Exception e) {
/* 13462 */           throw new org.apache.spark.SparkException(project_scalaUDF395.udfErrorMessage(), e);
/* 13463 */         }
/* 13464 */
/* 13465 */         boolean project_isNull1120 = project_result395 == null;
/* 13466 */         double project_value1120 = -1.0;
/* 13467 */         if (!project_isNull1120) {
/* 13468 */           project_value1120 = project_result395;
/* 13469 */         }
/* 13470 */         Object project_arg391 = project_isNull1120 ? null : project_converter395.apply(project_value1120);
/* 13471 */
/* 13472 */         InternalRow project_result394 = null;
/* 13473 */         try {
/* 13474 */           project_result394 = (InternalRow)project_catalystConverter394.apply(project_udf394.apply(project_arg391));
/* 13475 */         } catch (Exception e) {
/* 13476 */           throw new org.apache.spark.SparkException(project_scalaUDF394.udfErrorMessage(), e);
/* 13477 */         }
/* 13478 */
/* 13479 */         boolean project_isNull1119 = project_result394 == null;
/* 13480 */         InternalRow project_value1119 = null;
/* 13481 */         if (!project_isNull1119) {
/* 13482 */           project_value1119 = project_result394;
/* 13483 */         }
/* 13484 */         project_isNull1114 = project_isNull1119;
/* 13485 */         project_value1114 = project_value1119;
/* 13486 */       }
/* 13487 */       if (project_isNull1114) {
/* 13488 */         project_values6[24] = null;
/* 13489 */       } else {
/* 13490 */         project_values6[24] = project_value1114;
/* 13491 */       }
/* 13492 */
/* 13493 */       Object project_arg392 = sort_isNull25 ? null : project_converter397.apply(sort_value25);
/* 13494 */
/* 13495 */       Double project_result396 = null;
/* 13496 */       try {
/* 13497 */         project_result396 = (Double)project_catalystConverter396.apply(project_udf396.apply(project_arg392));
/* 13498 */       } catch (Exception e) {
/* 13499 */         throw new org.apache.spark.SparkException(project_scalaUDF396.udfErrorMessage(), e);
/* 13500 */       }
/* 13501 */
/* 13502 */       boolean project_isNull1124 = project_result396 == null;
/* 13503 */       double project_value1124 = -1.0;
/* 13504 */       if (!project_isNull1124) {
/* 13505 */         project_value1124 = project_result396;
/* 13506 */       }
/* 13507 */       boolean project_isNull1122 = false;
/* 13508 */       InternalRow project_value1122 = null;
/* 13509 */       if (!false && project_isNull1124) {
/* 13510 */         final InternalRow project_value1126 = null;
/* 13511 */         project_isNull1122 = true;
/* 13512 */         project_value1122 = project_value1126;
/* 13513 */       } else {
/* 13514 */         Object project_arg393 = sort_isNull25 ? null : project_converter399.apply(sort_value25);
/* 13515 */
/* 13516 */         Double project_result398 = null;
/* 13517 */         try {
/* 13518 */           project_result398 = (Double)project_catalystConverter398.apply(project_udf398.apply(project_arg393));
/* 13519 */         } catch (Exception e) {
/* 13520 */           throw new org.apache.spark.SparkException(project_scalaUDF398.udfErrorMessage(), e);
/* 13521 */         }
/* 13522 */
/* 13523 */         boolean project_isNull1128 = project_result398 == null;
/* 13524 */         double project_value1128 = -1.0;
/* 13525 */         if (!project_isNull1128) {
/* 13526 */           project_value1128 = project_result398;
/* 13527 */         }
/* 13528 */         Object project_arg394 = project_isNull1128 ? null : project_converter398.apply(project_value1128);
/* 13529 */
/* 13530 */         InternalRow project_result397 = null;
/* 13531 */         try {
/* 13532 */           project_result397 = (InternalRow)project_catalystConverter397.apply(project_udf397.apply(project_arg394));
/* 13533 */         } catch (Exception e) {
/* 13534 */           throw new org.apache.spark.SparkException(project_scalaUDF397.udfErrorMessage(), e);
/* 13535 */         }
/* 13536 */
/* 13537 */         boolean project_isNull1127 = project_result397 == null;
/* 13538 */         InternalRow project_value1127 = null;
/* 13539 */         if (!project_isNull1127) {
/* 13540 */           project_value1127 = project_result397;
/* 13541 */         }
/* 13542 */         project_isNull1122 = project_isNull1127;
/* 13543 */         project_value1122 = project_value1127;
/* 13544 */       }
/* 13545 */       if (project_isNull1122) {
/* 13546 */         project_values6[25] = null;
/* 13547 */       } else {
/* 13548 */         project_values6[25] = project_value1122;
/* 13549 */       }
/* 13550 */
/* 13551 */       if (sort_isNull27) {
/* 13552 */         project_values6[26] = null;
/* 13553 */       } else {
/* 13554 */         project_values6[26] = sort_value27;
/* 13555 */       }
/* 13556 */       final InternalRow project_value977 = new org.apache.spark.sql.catalyst.expressions.GenericInternalRow(project_values6);
/* 13557 */       this.project_values6 = null;
/* 13558 */       Object project_arg395 = false ? null : project_converter345.apply(project_value977);
/* 13559 */
/* 13560 */       InternalRow project_result344 = null;
/* 13561 */       try {
/* 13562 */         project_result344 = (InternalRow)project_catalystConverter344.apply(project_udf344.apply(project_arg395));
/* 13563 */       } catch (Exception e) {
/* 13564 */         throw new org.apache.spark.SparkException(project_scalaUDF344.udfErrorMessage(), e);
/* 13565 */       }
/* 13566 */
/* 13567 */       boolean project_isNull976 = project_result344 == null;
/* 13568 */       InternalRow project_value976 = null;
/* 13569 */       if (!project_isNull976) {
/* 13570 */         project_value976 = project_result344;
/* 13571 */       }
/* 13572 */       Object project_arg396 = project_isNull976 ? null : project_converter344.apply(project_value976);
/* 13573 */
/* 13574 */       InternalRow project_result343 = null;
/* 13575 */       try {
/* 13576 */         project_result343 = (InternalRow)project_catalystConverter343.apply(project_udf343.apply(project_arg396));
/* 13577 */       } catch (Exception e) {
/* 13578 */         throw new org.apache.spark.SparkException(project_scalaUDF343.udfErrorMessage(), e);
/* 13579 */       }
/* 13580 */
/* 13581 */       boolean project_isNull975 = project_result343 == null;
/* 13582 */       InternalRow project_value975 = null;
/* 13583 */       if (!project_isNull975) {
/* 13584 */         project_value975 = project_result343;
/* 13585 */       }
/* 13586 */       Object project_arg397 = project_isNull975 ? null : project_converter343.apply(project_value975);
/* 13587 */
/* 13588 */       InternalRow project_result342 = null;
/* 13589 */       try {
/* 13590 */         project_result342 = (InternalRow)project_catalystConverter342.apply(project_udf342.apply(project_arg397));
/* 13591 */       } catch (Exception e) {
/* 13592 */         throw new org.apache.spark.SparkException(project_scalaUDF342.udfErrorMessage(), e);
/* 13593 */       }
/* 13594 */
/* 13595 */       boolean project_isNull974 = project_result342 == null;
/* 13596 */       InternalRow project_value974 = null;
/* 13597 */       if (!project_isNull974) {
/* 13598 */         project_value974 = project_result342;
/* 13599 */       }
/* 13600 */       Object project_arg398 = project_isNull974 ? null : project_converter341.apply(project_value974);
/* 13601 */       Object project_arg399 = false ? null : project_converter342.apply(0);
/* 13602 */
/* 13603 */       Double project_result341 = null;
/* 13604 */       try {
/* 13605 */         project_result341 = (Double)project_catalystConverter341.apply(project_udf341.apply(project_arg398, project_arg399));
/* 13606 */       } catch (Exception e) {
/* 13607 */         throw new org.apache.spark.SparkException(project_scalaUDF341.udfErrorMessage(), e);
/* 13608 */       }
/* 13609 */
/* 13610 */       boolean project_isNull973 = project_result341 == null;
/* 13611 */       double project_value973 = -1.0;
/* 13612 */       if (!project_isNull973) {
/* 13613 */         project_value973 = project_result341;
/* 13614 */       }
/* 13615 */       project_values7 = new Object[27];
/* 13616 */       Object project_arg400 = sort_isNull ? null : project_converter405.apply(sort_value);
/* 13617 */
/* 13618 */       Double project_result403 = null;
/* 13619 */       try {
/* 13620 */         project_result403 = (Double)project_catalystConverter403.apply(project_udf403.apply(project_arg400));
/* 13621 */       } catch (Exception e) {
/* 13622 */         throw new org.apache.spark.SparkException(project_scalaUDF403.udfErrorMessage(), e);
/* 13623 */       }
/* 13624 */
/* 13625 */       boolean project_isNull1139 = project_result403 == null;
/* 13626 */       double project_value1139 = -1.0;
/* 13627 */       if (!project_isNull1139) {
/* 13628 */         project_value1139 = project_result403;
/* 13629 */       }
/* 13630 */       boolean project_isNull1137 = false;
/* 13631 */       InternalRow project_value1137 = null;
/* 13632 */       if (!false && project_isNull1139) {
/* 13633 */         final InternalRow project_value1141 = null;
/* 13634 */         project_isNull1137 = true;
/* 13635 */         project_value1137 = project_value1141;
/* 13636 */       } else {
/* 13637 */         Object project_arg401 = sort_isNull ? null : project_converter407.apply(sort_value);
/* 13638 */
/* 13639 */         Double project_result405 = null;
/* 13640 */         try {
/* 13641 */           project_result405 = (Double)project_catalystConverter405.apply(project_udf405.apply(project_arg401));
/* 13642 */         } catch (Exception e) {
/* 13643 */           throw new org.apache.spark.SparkException(project_scalaUDF405.udfErrorMessage(), e);
/* 13644 */         }
/* 13645 */
/* 13646 */         boolean project_isNull1143 = project_result405 == null;
/* 13647 */         double project_value1143 = -1.0;
/* 13648 */         if (!project_isNull1143) {
/* 13649 */           project_value1143 = project_result405;
/* 13650 */         }
/* 13651 */         Object project_arg402 = project_isNull1143 ? null : project_converter406.apply(project_value1143);
/* 13652 */
/* 13653 */         InternalRow project_result404 = null;
/* 13654 */         try {
/* 13655 */           project_result404 = (InternalRow)project_catalystConverter404.apply(project_udf404.apply(project_arg402));
/* 13656 */         } catch (Exception e) {
/* 13657 */           throw new org.apache.spark.SparkException(project_scalaUDF404.udfErrorMessage(), e);
/* 13658 */         }
/* 13659 */
/* 13660 */         boolean project_isNull1142 = project_result404 == null;
/* 13661 */         InternalRow project_value1142 = null;
/* 13662 */         if (!project_isNull1142) {
/* 13663 */           project_value1142 = project_result404;
/* 13664 */         }
/* 13665 */         project_isNull1137 = project_isNull1142;
/* 13666 */         project_value1137 = project_value1142;
/* 13667 */       }
/* 13668 */       if (project_isNull1137) {
/* 13669 */         project_values7[0] = null;
/* 13670 */       } else {
/* 13671 */         project_values7[0] = project_value1137;
/* 13672 */       }
/* 13673 */
/* 13674 */       Object project_arg403 = sort_isNull1 ? null : project_converter408.apply(sort_value1);
/* 13675 */
/* 13676 */       Double project_result406 = null;
/* 13677 */       try {
/* 13678 */         project_result406 = (Double)project_catalystConverter406.apply(project_udf406.apply(project_arg403));
/* 13679 */       } catch (Exception e) {
/* 13680 */         throw new org.apache.spark.SparkException(project_scalaUDF406.udfErrorMessage(), e);
/* 13681 */       }
/* 13682 */
/* 13683 */       boolean project_isNull1147 = project_result406 == null;
/* 13684 */       double project_value1147 = -1.0;
/* 13685 */       if (!project_isNull1147) {
/* 13686 */         project_value1147 = project_result406;
/* 13687 */       }
/* 13688 */       boolean project_isNull1145 = false;
/* 13689 */       InternalRow project_value1145 = null;
/* 13690 */       if (!false && project_isNull1147) {
/* 13691 */         final InternalRow project_value1149 = null;
/* 13692 */         project_isNull1145 = true;
/* 13693 */         project_value1145 = project_value1149;
/* 13694 */       } else {
/* 13695 */         Object project_arg404 = sort_isNull1 ? null : project_converter410.apply(sort_value1);
/* 13696 */
/* 13697 */         Double project_result408 = null;
/* 13698 */         try {
/* 13699 */           project_result408 = (Double)project_catalystConverter408.apply(project_udf408.apply(project_arg404));
/* 13700 */         } catch (Exception e) {
/* 13701 */           throw new org.apache.spark.SparkException(project_scalaUDF408.udfErrorMessage(), e);
/* 13702 */         }
/* 13703 */
/* 13704 */         boolean project_isNull1151 = project_result408 == null;
/* 13705 */         double project_value1151 = -1.0;
/* 13706 */         if (!project_isNull1151) {
/* 13707 */           project_value1151 = project_result408;
/* 13708 */         }
/* 13709 */         Object project_arg405 = project_isNull1151 ? null : project_converter409.apply(project_value1151);
/* 13710 */
/* 13711 */         InternalRow project_result407 = null;
/* 13712 */         try {
/* 13713 */           project_result407 = (InternalRow)project_catalystConverter407.apply(project_udf407.apply(project_arg405));
/* 13714 */         } catch (Exception e) {
/* 13715 */           throw new org.apache.spark.SparkException(project_scalaUDF407.udfErrorMessage(), e);
/* 13716 */         }
/* 13717 */
/* 13718 */         boolean project_isNull1150 = project_result407 == null;
/* 13719 */         InternalRow project_value1150 = null;
/* 13720 */         if (!project_isNull1150) {
/* 13721 */           project_value1150 = project_result407;
/* 13722 */         }
/* 13723 */         project_isNull1145 = project_isNull1150;
/* 13724 */         project_value1145 = project_value1150;
/* 13725 */       }
/* 13726 */       if (project_isNull1145) {
/* 13727 */         project_values7[1] = null;
/* 13728 */       } else {
/* 13729 */         project_values7[1] = project_value1145;
/* 13730 */       }
/* 13731 */
/* 13732 */       Object project_arg406 = sort_isNull2 ? null : project_converter411.apply(sort_value2);
/* 13733 */
/* 13734 */       Double project_result409 = null;
/* 13735 */       try {
/* 13736 */         project_result409 = (Double)project_catalystConverter409.apply(project_udf409.apply(project_arg406));
/* 13737 */       } catch (Exception e) {
/* 13738 */         throw new org.apache.spark.SparkException(project_scalaUDF409.udfErrorMessage(), e);
/* 13739 */       }
/* 13740 */
/* 13741 */       boolean project_isNull1155 = project_result409 == null;
/* 13742 */       double project_value1155 = -1.0;
/* 13743 */       if (!project_isNull1155) {
/* 13744 */         project_value1155 = project_result409;
/* 13745 */       }
/* 13746 */       boolean project_isNull1153 = false;
/* 13747 */       InternalRow project_value1153 = null;
/* 13748 */       if (!false && project_isNull1155) {
/* 13749 */         final InternalRow project_value1157 = null;
/* 13750 */         project_isNull1153 = true;
/* 13751 */         project_value1153 = project_value1157;
/* 13752 */       } else {
/* 13753 */         Object project_arg407 = sort_isNull2 ? null : project_converter413.apply(sort_value2);
/* 13754 */
/* 13755 */         Double project_result411 = null;
/* 13756 */         try {
/* 13757 */           project_result411 = (Double)project_catalystConverter411.apply(project_udf411.apply(project_arg407));
/* 13758 */         } catch (Exception e) {
/* 13759 */           throw new org.apache.spark.SparkException(project_scalaUDF411.udfErrorMessage(), e);
/* 13760 */         }
/* 13761 */
/* 13762 */         boolean project_isNull1159 = project_result411 == null;
/* 13763 */         double project_value1159 = -1.0;
/* 13764 */         if (!project_isNull1159) {
/* 13765 */           project_value1159 = project_result411;
/* 13766 */         }
/* 13767 */         Object project_arg408 = project_isNull1159 ? null : project_converter412.apply(project_value1159);
/* 13768 */
/* 13769 */         InternalRow project_result410 = null;
/* 13770 */         try {
/* 13771 */           project_result410 = (InternalRow)project_catalystConverter410.apply(project_udf410.apply(project_arg408));
/* 13772 */         } catch (Exception e) {
/* 13773 */           throw new org.apache.spark.SparkException(project_scalaUDF410.udfErrorMessage(), e);
/* 13774 */         }
/* 13775 */
/* 13776 */         boolean project_isNull1158 = project_result410 == null;
/* 13777 */         InternalRow project_value1158 = null;
/* 13778 */         if (!project_isNull1158) {
/* 13779 */           project_value1158 = project_result410;
/* 13780 */         }
/* 13781 */         project_isNull1153 = project_isNull1158;
/* 13782 */         project_value1153 = project_value1158;
/* 13783 */       }
/* 13784 */       if (project_isNull1153) {
/* 13785 */         project_values7[2] = null;
/* 13786 */       } else {
/* 13787 */         project_values7[2] = project_value1153;
/* 13788 */       }
/* 13789 */
/* 13790 */       Object project_arg409 = sort_isNull3 ? null : project_converter414.apply(sort_value3);
/* 13791 */
/* 13792 */       Double project_result412 = null;
/* 13793 */       try {
/* 13794 */         project_result412 = (Double)project_catalystConverter412.apply(project_udf412.apply(project_arg409));
/* 13795 */       } catch (Exception e) {
/* 13796 */         throw new org.apache.spark.SparkException(project_scalaUDF412.udfErrorMessage(), e);
/* 13797 */       }
/* 13798 */
/* 13799 */       boolean project_isNull1163 = project_result412 == null;
/* 13800 */       double project_value1163 = -1.0;
/* 13801 */       if (!project_isNull1163) {
/* 13802 */         project_value1163 = project_result412;
/* 13803 */       }
/* 13804 */       boolean project_isNull1161 = false;
/* 13805 */       InternalRow project_value1161 = null;
/* 13806 */       if (!false && project_isNull1163) {
/* 13807 */         final InternalRow project_value1165 = null;
/* 13808 */         project_isNull1161 = true;
/* 13809 */         project_value1161 = project_value1165;
/* 13810 */       } else {
/* 13811 */         Object project_arg410 = sort_isNull3 ? null : project_converter416.apply(sort_value3);
/* 13812 */
/* 13813 */         Double project_result414 = null;
/* 13814 */         try {
/* 13815 */           project_result414 = (Double)project_catalystConverter414.apply(project_udf414.apply(project_arg410));
/* 13816 */         } catch (Exception e) {
/* 13817 */           throw new org.apache.spark.SparkException(project_scalaUDF414.udfErrorMessage(), e);
/* 13818 */         }
/* 13819 */
/* 13820 */         boolean project_isNull1167 = project_result414 == null;
/* 13821 */         double project_value1167 = -1.0;
/* 13822 */         if (!project_isNull1167) {
/* 13823 */           project_value1167 = project_result414;
/* 13824 */         }
/* 13825 */         Object project_arg411 = project_isNull1167 ? null : project_converter415.apply(project_value1167);
/* 13826 */
/* 13827 */         InternalRow project_result413 = null;
/* 13828 */         try {
/* 13829 */           project_result413 = (InternalRow)project_catalystConverter413.apply(project_udf413.apply(project_arg411));
/* 13830 */         } catch (Exception e) {
/* 13831 */           throw new org.apache.spark.SparkException(project_scalaUDF413.udfErrorMessage(), e);
/* 13832 */         }
/* 13833 */
/* 13834 */         boolean project_isNull1166 = project_result413 == null;
/* 13835 */         InternalRow project_value1166 = null;
/* 13836 */         if (!project_isNull1166) {
/* 13837 */           project_value1166 = project_result413;
/* 13838 */         }
/* 13839 */         project_isNull1161 = project_isNull1166;
/* 13840 */         project_value1161 = project_value1166;
/* 13841 */       }
/* 13842 */       if (project_isNull1161) {
/* 13843 */         project_values7[3] = null;
/* 13844 */       } else {
/* 13845 */         project_values7[3] = project_value1161;
/* 13846 */       }
/* 13847 */
/* 13848 */       Object project_arg412 = sort_isNull4 ? null : project_converter417.apply(sort_value4);
/* 13849 */
/* 13850 */       Double project_result415 = null;
/* 13851 */       try {
/* 13852 */         project_result415 = (Double)project_catalystConverter415.apply(project_udf415.apply(project_arg412));
/* 13853 */       } catch (Exception e) {
/* 13854 */         throw new org.apache.spark.SparkException(project_scalaUDF415.udfErrorMessage(), e);
/* 13855 */       }
/* 13856 */
/* 13857 */       boolean project_isNull1171 = project_result415 == null;
/* 13858 */       double project_value1171 = -1.0;
/* 13859 */       if (!project_isNull1171) {
/* 13860 */         project_value1171 = project_result415;
/* 13861 */       }
/* 13862 */       boolean project_isNull1169 = false;
/* 13863 */       InternalRow project_value1169 = null;
/* 13864 */       if (!false && project_isNull1171) {
/* 13865 */         final InternalRow project_value1173 = null;
/* 13866 */         project_isNull1169 = true;
/* 13867 */         project_value1169 = project_value1173;
/* 13868 */       } else {
/* 13869 */         Object project_arg413 = sort_isNull4 ? null : project_converter419.apply(sort_value4);
/* 13870 */
/* 13871 */         Double project_result417 = null;
/* 13872 */         try {
/* 13873 */           project_result417 = (Double)project_catalystConverter417.apply(project_udf417.apply(project_arg413));
/* 13874 */         } catch (Exception e) {
/* 13875 */           throw new org.apache.spark.SparkException(project_scalaUDF417.udfErrorMessage(), e);
/* 13876 */         }
/* 13877 */
/* 13878 */         boolean project_isNull1175 = project_result417 == null;
/* 13879 */         double project_value1175 = -1.0;
/* 13880 */         if (!project_isNull1175) {
/* 13881 */           project_value1175 = project_result417;
/* 13882 */         }
/* 13883 */         Object project_arg414 = project_isNull1175 ? null : project_converter418.apply(project_value1175);
/* 13884 */
/* 13885 */         InternalRow project_result416 = null;
/* 13886 */         try {
/* 13887 */           project_result416 = (InternalRow)project_catalystConverter416.apply(project_udf416.apply(project_arg414));
/* 13888 */         } catch (Exception e) {
/* 13889 */           throw new org.apache.spark.SparkException(project_scalaUDF416.udfErrorMessage(), e);
/* 13890 */         }
/* 13891 */
/* 13892 */         boolean project_isNull1174 = project_result416 == null;
/* 13893 */         InternalRow project_value1174 = null;
/* 13894 */         if (!project_isNull1174) {
/* 13895 */           project_value1174 = project_result416;
/* 13896 */         }
/* 13897 */         project_isNull1169 = project_isNull1174;
/* 13898 */         project_value1169 = project_value1174;
/* 13899 */       }
/* 13900 */       if (project_isNull1169) {
/* 13901 */         project_values7[4] = null;
/* 13902 */       } else {
/* 13903 */         project_values7[4] = project_value1169;
/* 13904 */       }
/* 13905 */
/* 13906 */       Object project_arg415 = sort_isNull5 ? null : project_converter420.apply(sort_value5);
/* 13907 */
/* 13908 */       Double project_result418 = null;
/* 13909 */       try {
/* 13910 */         project_result418 = (Double)project_catalystConverter418.apply(project_udf418.apply(project_arg415));
/* 13911 */       } catch (Exception e) {
/* 13912 */         throw new org.apache.spark.SparkException(project_scalaUDF418.udfErrorMessage(), e);
/* 13913 */       }
/* 13914 */
/* 13915 */       boolean project_isNull1179 = project_result418 == null;
/* 13916 */       double project_value1179 = -1.0;
/* 13917 */       if (!project_isNull1179) {
/* 13918 */         project_value1179 = project_result418;
/* 13919 */       }
/* 13920 */       boolean project_isNull1177 = false;
/* 13921 */       InternalRow project_value1177 = null;
/* 13922 */       if (!false && project_isNull1179) {
/* 13923 */         final InternalRow project_value1181 = null;
/* 13924 */         project_isNull1177 = true;
/* 13925 */         project_value1177 = project_value1181;
/* 13926 */       } else {
/* 13927 */         Object project_arg416 = sort_isNull5 ? null : project_converter422.apply(sort_value5);
/* 13928 */
/* 13929 */         Double project_result420 = null;
/* 13930 */         try {
/* 13931 */           project_result420 = (Double)project_catalystConverter420.apply(project_udf420.apply(project_arg416));
/* 13932 */         } catch (Exception e) {
/* 13933 */           throw new org.apache.spark.SparkException(project_scalaUDF420.udfErrorMessage(), e);
/* 13934 */         }
/* 13935 */
/* 13936 */         boolean project_isNull1183 = project_result420 == null;
/* 13937 */         double project_value1183 = -1.0;
/* 13938 */         if (!project_isNull1183) {
/* 13939 */           project_value1183 = project_result420;
/* 13940 */         }
/* 13941 */         Object project_arg417 = project_isNull1183 ? null : project_converter421.apply(project_value1183);
/* 13942 */
/* 13943 */         InternalRow project_result419 = null;
/* 13944 */         try {
/* 13945 */           project_result419 = (InternalRow)project_catalystConverter419.apply(project_udf419.apply(project_arg417));
/* 13946 */         } catch (Exception e) {
/* 13947 */           throw new org.apache.spark.SparkException(project_scalaUDF419.udfErrorMessage(), e);
/* 13948 */         }
/* 13949 */
/* 13950 */         boolean project_isNull1182 = project_result419 == null;
/* 13951 */         InternalRow project_value1182 = null;
/* 13952 */         if (!project_isNull1182) {
/* 13953 */           project_value1182 = project_result419;
/* 13954 */         }
/* 13955 */         project_isNull1177 = project_isNull1182;
/* 13956 */         project_value1177 = project_value1182;
/* 13957 */       }
/* 13958 */       if (project_isNull1177) {
/* 13959 */         project_values7[5] = null;
/* 13960 */       } else {
/* 13961 */         project_values7[5] = project_value1177;
/* 13962 */       }
/* 13963 */
/* 13964 */       if (sort_isNull6) {
/* 13965 */         project_values7[6] = null;
/* 13966 */       } else {
/* 13967 */         project_values7[6] = sort_value6;
/* 13968 */       }
/* 13969 */
/* 13970 */       if (sort_isNull7) {
/* 13971 */         project_values7[7] = null;
/* 13972 */       } else {
/* 13973 */         project_values7[7] = sort_value7;
/* 13974 */       }
/* 13975 */
/* 13976 */       if (sort_isNull8) {
/* 13977 */         project_values7[8] = null;
/* 13978 */       } else {
/* 13979 */         project_values7[8] = sort_value8;
/* 13980 */       }
/* 13981 */
/* 13982 */       if (sort_isNull9) {
/* 13983 */         project_values7[9] = null;
/* 13984 */       } else {
/* 13985 */         project_values7[9] = sort_value9;
/* 13986 */       }
/* 13987 */
/* 13988 */       if (sort_isNull10) {
/* 13989 */         project_values7[10] = null;
/* 13990 */       } else {
/* 13991 */         project_values7[10] = sort_value10;
/* 13992 */       }
/* 13993 */
/* 13994 */       if (sort_isNull11) {
/* 13995 */         project_values7[11] = null;
/* 13996 */       } else {
/* 13997 */         project_values7[11] = sort_value11;
/* 13998 */       }
/* 13999 */
/* 14000 */       if (sort_isNull12) {
/* 14001 */         project_values7[12] = null;
/* 14002 */       } else {
/* 14003 */         project_values7[12] = sort_value12;
/* 14004 */       }
/* 14005 */
/* 14006 */       Object project_arg418 = sort_isNull13 ? null : project_converter423.apply(sort_value13);
/* 14007 */
/* 14008 */       Double project_result421 = null;
/* 14009 */       try {
/* 14010 */         project_result421 = (Double)project_catalystConverter421.apply(project_udf421.apply(project_arg418));
/* 14011 */       } catch (Exception e) {
/* 14012 */         throw new org.apache.spark.SparkException(project_scalaUDF421.udfErrorMessage(), e);
/* 14013 */       }
/* 14014 */
/* 14015 */       boolean project_isNull1194 = project_result421 == null;
/* 14016 */       double project_value1194 = -1.0;
/* 14017 */       if (!project_isNull1194) {
/* 14018 */         project_value1194 = project_result421;
/* 14019 */       }
/* 14020 */       boolean project_isNull1192 = false;
/* 14021 */       InternalRow project_value1192 = null;
/* 14022 */       if (!false && project_isNull1194) {
/* 14023 */         final InternalRow project_value1196 = null;
/* 14024 */         project_isNull1192 = true;
/* 14025 */         project_value1192 = project_value1196;
/* 14026 */       } else {
/* 14027 */         Object project_arg419 = sort_isNull13 ? null : project_converter425.apply(sort_value13);
/* 14028 */
/* 14029 */         Double project_result423 = null;
/* 14030 */         try {
/* 14031 */           project_result423 = (Double)project_catalystConverter423.apply(project_udf423.apply(project_arg419));
/* 14032 */         } catch (Exception e) {
/* 14033 */           throw new org.apache.spark.SparkException(project_scalaUDF423.udfErrorMessage(), e);
/* 14034 */         }
/* 14035 */
/* 14036 */         boolean project_isNull1198 = project_result423 == null;
/* 14037 */         double project_value1198 = -1.0;
/* 14038 */         if (!project_isNull1198) {
/* 14039 */           project_value1198 = project_result423;
/* 14040 */         }
/* 14041 */         Object project_arg420 = project_isNull1198 ? null : project_converter424.apply(project_value1198);
/* 14042 */
/* 14043 */         InternalRow project_result422 = null;
/* 14044 */         try {
/* 14045 */           project_result422 = (InternalRow)project_catalystConverter422.apply(project_udf422.apply(project_arg420));
/* 14046 */         } catch (Exception e) {
/* 14047 */           throw new org.apache.spark.SparkException(project_scalaUDF422.udfErrorMessage(), e);
/* 14048 */         }
/* 14049 */
/* 14050 */         boolean project_isNull1197 = project_result422 == null;
/* 14051 */         InternalRow project_value1197 = null;
/* 14052 */         if (!project_isNull1197) {
/* 14053 */           project_value1197 = project_result422;
/* 14054 */         }
/* 14055 */         project_isNull1192 = project_isNull1197;
/* 14056 */         project_value1192 = project_value1197;
/* 14057 */       }
/* 14058 */       if (project_isNull1192) {
/* 14059 */         project_values7[13] = null;
/* 14060 */       } else {
/* 14061 */         project_values7[13] = project_value1192;
/* 14062 */       }
/* 14063 */
/* 14064 */       Object project_arg421 = sort_isNull14 ? null : project_converter426.apply(sort_value14);
/* 14065 */
/* 14066 */       Double project_result424 = null;
/* 14067 */       try {
/* 14068 */         project_result424 = (Double)project_catalystConverter424.apply(project_udf424.apply(project_arg421));
/* 14069 */       } catch (Exception e) {
/* 14070 */         throw new org.apache.spark.SparkException(project_scalaUDF424.udfErrorMessage(), e);
/* 14071 */       }
/* 14072 */
/* 14073 */       boolean project_isNull1202 = project_result424 == null;
/* 14074 */       double project_value1202 = -1.0;
/* 14075 */       if (!project_isNull1202) {
/* 14076 */         project_value1202 = project_result424;
/* 14077 */       }
/* 14078 */       boolean project_isNull1200 = false;
/* 14079 */       InternalRow project_value1200 = null;
/* 14080 */       if (!false && project_isNull1202) {
/* 14081 */         final InternalRow project_value1204 = null;
/* 14082 */         project_isNull1200 = true;
/* 14083 */         project_value1200 = project_value1204;
/* 14084 */       } else {
/* 14085 */         Object project_arg422 = sort_isNull14 ? null : project_converter428.apply(sort_value14);
/* 14086 */
/* 14087 */         Double project_result426 = null;
/* 14088 */         try {
/* 14089 */           project_result426 = (Double)project_catalystConverter426.apply(project_udf426.apply(project_arg422));
/* 14090 */         } catch (Exception e) {
/* 14091 */           throw new org.apache.spark.SparkException(project_scalaUDF426.udfErrorMessage(), e);
/* 14092 */         }
/* 14093 */
/* 14094 */         boolean project_isNull1206 = project_result426 == null;
/* 14095 */         double project_value1206 = -1.0;
/* 14096 */         if (!project_isNull1206) {
/* 14097 */           project_value1206 = project_result426;
/* 14098 */         }
/* 14099 */         Object project_arg423 = project_isNull1206 ? null : project_converter427.apply(project_value1206);
/* 14100 */
/* 14101 */         InternalRow project_result425 = null;
/* 14102 */         try {
/* 14103 */           project_result425 = (InternalRow)project_catalystConverter425.apply(project_udf425.apply(project_arg423));
/* 14104 */         } catch (Exception e) {
/* 14105 */           throw new org.apache.spark.SparkException(project_scalaUDF425.udfErrorMessage(), e);
/* 14106 */         }
/* 14107 */
/* 14108 */         boolean project_isNull1205 = project_result425 == null;
/* 14109 */         InternalRow project_value1205 = null;
/* 14110 */         if (!project_isNull1205) {
/* 14111 */           project_value1205 = project_result425;
/* 14112 */         }
/* 14113 */         project_isNull1200 = project_isNull1205;
/* 14114 */         project_value1200 = project_value1205;
/* 14115 */       }
/* 14116 */       if (project_isNull1200) {
/* 14117 */         project_values7[14] = null;
/* 14118 */       } else {
/* 14119 */         project_values7[14] = project_value1200;
/* 14120 */       }
/* 14121 */
/* 14122 */       Object project_arg424 = sort_isNull15 ? null : project_converter429.apply(sort_value15);
/* 14123 */
/* 14124 */       Double project_result427 = null;
/* 14125 */       try {
/* 14126 */         project_result427 = (Double)project_catalystConverter427.apply(project_udf427.apply(project_arg424));
/* 14127 */       } catch (Exception e) {
/* 14128 */         throw new org.apache.spark.SparkException(project_scalaUDF427.udfErrorMessage(), e);
/* 14129 */       }
/* 14130 */
/* 14131 */       boolean project_isNull1210 = project_result427 == null;
/* 14132 */       double project_value1210 = -1.0;
/* 14133 */       if (!project_isNull1210) {
/* 14134 */         project_value1210 = project_result427;
/* 14135 */       }
/* 14136 */       boolean project_isNull1208 = false;
/* 14137 */       InternalRow project_value1208 = null;
/* 14138 */       if (!false && project_isNull1210) {
/* 14139 */         final InternalRow project_value1212 = null;
/* 14140 */         project_isNull1208 = true;
/* 14141 */         project_value1208 = project_value1212;
/* 14142 */       } else {
/* 14143 */         Object project_arg425 = sort_isNull15 ? null : project_converter431.apply(sort_value15);
/* 14144 */
/* 14145 */         Double project_result429 = null;
/* 14146 */         try {
/* 14147 */           project_result429 = (Double)project_catalystConverter429.apply(project_udf429.apply(project_arg425));
/* 14148 */         } catch (Exception e) {
/* 14149 */           throw new org.apache.spark.SparkException(project_scalaUDF429.udfErrorMessage(), e);
/* 14150 */         }
/* 14151 */
/* 14152 */         boolean project_isNull1214 = project_result429 == null;
/* 14153 */         double project_value1214 = -1.0;
/* 14154 */         if (!project_isNull1214) {
/* 14155 */           project_value1214 = project_result429;
/* 14156 */         }
/* 14157 */         Object project_arg426 = project_isNull1214 ? null : project_converter430.apply(project_value1214);
/* 14158 */
/* 14159 */         InternalRow project_result428 = null;
/* 14160 */         try {
/* 14161 */           project_result428 = (InternalRow)project_catalystConverter428.apply(project_udf428.apply(project_arg426));
/* 14162 */         } catch (Exception e) {
/* 14163 */           throw new org.apache.spark.SparkException(project_scalaUDF428.udfErrorMessage(), e);
/* 14164 */         }
/* 14165 */
/* 14166 */         boolean project_isNull1213 = project_result428 == null;
/* 14167 */         InternalRow project_value1213 = null;
/* 14168 */         if (!project_isNull1213) {
/* 14169 */           project_value1213 = project_result428;
/* 14170 */         }
/* 14171 */         project_isNull1208 = project_isNull1213;
/* 14172 */         project_value1208 = project_value1213;
/* 14173 */       }
/* 14174 */       if (project_isNull1208) {
/* 14175 */         project_values7[15] = null;
/* 14176 */       } else {
/* 14177 */         project_values7[15] = project_value1208;
/* 14178 */       }
/* 14179 */
/* 14180 */       if (sort_isNull16) {
/* 14181 */         project_values7[16] = null;
/* 14182 */       } else {
/* 14183 */         project_values7[16] = sort_value16;
/* 14184 */       }
/* 14185 */
/* 14186 */       Object project_arg427 = sort_isNull17 ? null : project_converter432.apply(sort_value17);
/* 14187 */
/* 14188 */       Double project_result430 = null;
/* 14189 */       try {
/* 14190 */         project_result430 = (Double)project_catalystConverter430.apply(project_udf430.apply(project_arg427));
/* 14191 */       } catch (Exception e) {
/* 14192 */         throw new org.apache.spark.SparkException(project_scalaUDF430.udfErrorMessage(), e);
/* 14193 */       }
/* 14194 */
/* 14195 */       boolean project_isNull1219 = project_result430 == null;
/* 14196 */       double project_value1219 = -1.0;
/* 14197 */       if (!project_isNull1219) {
/* 14198 */         project_value1219 = project_result430;
/* 14199 */       }
/* 14200 */       boolean project_isNull1217 = false;
/* 14201 */       InternalRow project_value1217 = null;
/* 14202 */       if (!false && project_isNull1219) {
/* 14203 */         final InternalRow project_value1221 = null;
/* 14204 */         project_isNull1217 = true;
/* 14205 */         project_value1217 = project_value1221;
/* 14206 */       } else {
/* 14207 */         Object project_arg428 = sort_isNull17 ? null : project_converter434.apply(sort_value17);
/* 14208 */
/* 14209 */         Double project_result432 = null;
/* 14210 */         try {
/* 14211 */           project_result432 = (Double)project_catalystConverter432.apply(project_udf432.apply(project_arg428));
/* 14212 */         } catch (Exception e) {
/* 14213 */           throw new org.apache.spark.SparkException(project_scalaUDF432.udfErrorMessage(), e);
/* 14214 */         }
/* 14215 */
/* 14216 */         boolean project_isNull1223 = project_result432 == null;
/* 14217 */         double project_value1223 = -1.0;
/* 14218 */         if (!project_isNull1223) {
/* 14219 */           project_value1223 = project_result432;
/* 14220 */         }
/* 14221 */         Object project_arg429 = project_isNull1223 ? null : project_converter433.apply(project_value1223);
/* 14222 */
/* 14223 */         InternalRow project_result431 = null;
/* 14224 */         try {
/* 14225 */           project_result431 = (InternalRow)project_catalystConverter431.apply(project_udf431.apply(project_arg429));
/* 14226 */         } catch (Exception e) {
/* 14227 */           throw new org.apache.spark.SparkException(project_scalaUDF431.udfErrorMessage(), e);
/* 14228 */         }
/* 14229 */
/* 14230 */         boolean project_isNull1222 = project_result431 == null;
/* 14231 */         InternalRow project_value1222 = null;
/* 14232 */         if (!project_isNull1222) {
/* 14233 */           project_value1222 = project_result431;
/* 14234 */         }
/* 14235 */         project_isNull1217 = project_isNull1222;
/* 14236 */         project_value1217 = project_value1222;
/* 14237 */       }
/* 14238 */       if (project_isNull1217) {
/* 14239 */         project_values7[17] = null;
/* 14240 */       } else {
/* 14241 */         project_values7[17] = project_value1217;
/* 14242 */       }
/* 14243 */
/* 14244 */       Object project_arg430 = sort_isNull18 ? null : project_converter435.apply(sort_value18);
/* 14245 */
/* 14246 */       Double project_result433 = null;
/* 14247 */       try {
/* 14248 */         project_result433 = (Double)project_catalystConverter433.apply(project_udf433.apply(project_arg430));
/* 14249 */       } catch (Exception e) {
/* 14250 */         throw new org.apache.spark.SparkException(project_scalaUDF433.udfErrorMessage(), e);
/* 14251 */       }
/* 14252 */
/* 14253 */       boolean project_isNull1227 = project_result433 == null;
/* 14254 */       double project_value1227 = -1.0;
/* 14255 */       if (!project_isNull1227) {
/* 14256 */         project_value1227 = project_result433;
/* 14257 */       }
/* 14258 */       boolean project_isNull1225 = false;
/* 14259 */       InternalRow project_value1225 = null;
/* 14260 */       if (!false && project_isNull1227) {
/* 14261 */         final InternalRow project_value1229 = null;
/* 14262 */         project_isNull1225 = true;
/* 14263 */         project_value1225 = project_value1229;
/* 14264 */       } else {
/* 14265 */         Object project_arg431 = sort_isNull18 ? null : project_converter437.apply(sort_value18);
/* 14266 */
/* 14267 */         Double project_result435 = null;
/* 14268 */         try {
/* 14269 */           project_result435 = (Double)project_catalystConverter435.apply(project_udf435.apply(project_arg431));
/* 14270 */         } catch (Exception e) {
/* 14271 */           throw new org.apache.spark.SparkException(project_scalaUDF435.udfErrorMessage(), e);
/* 14272 */         }
/* 14273 */
/* 14274 */         boolean project_isNull1231 = project_result435 == null;
/* 14275 */         double project_value1231 = -1.0;
/* 14276 */         if (!project_isNull1231) {
/* 14277 */           project_value1231 = project_result435;
/* 14278 */         }
/* 14279 */         Object project_arg432 = project_isNull1231 ? null : project_converter436.apply(project_value1231);
/* 14280 */
/* 14281 */         InternalRow project_result434 = null;
/* 14282 */         try {
/* 14283 */           project_result434 = (InternalRow)project_catalystConverter434.apply(project_udf434.apply(project_arg432));
/* 14284 */         } catch (Exception e) {
/* 14285 */           throw new org.apache.spark.SparkException(project_scalaUDF434.udfErrorMessage(), e);
/* 14286 */         }
/* 14287 */
/* 14288 */         boolean project_isNull1230 = project_result434 == null;
/* 14289 */         InternalRow project_value1230 = null;
/* 14290 */         if (!project_isNull1230) {
/* 14291 */           project_value1230 = project_result434;
/* 14292 */         }
/* 14293 */         project_isNull1225 = project_isNull1230;
/* 14294 */         project_value1225 = project_value1230;
/* 14295 */       }
/* 14296 */       if (project_isNull1225) {
/* 14297 */         project_values7[18] = null;
/* 14298 */       } else {
/* 14299 */         project_values7[18] = project_value1225;
/* 14300 */       }
/* 14301 */
/* 14302 */       Object project_arg433 = sort_isNull19 ? null : project_converter438.apply(sort_value19);
/* 14303 */
/* 14304 */       Double project_result436 = null;
/* 14305 */       try {
/* 14306 */         project_result436 = (Double)project_catalystConverter436.apply(project_udf436.apply(project_arg433));
/* 14307 */       } catch (Exception e) {
/* 14308 */         throw new org.apache.spark.SparkException(project_scalaUDF436.udfErrorMessage(), e);
/* 14309 */       }
/* 14310 */
/* 14311 */       boolean project_isNull1235 = project_result436 == null;
/* 14312 */       double project_value1235 = -1.0;
/* 14313 */       if (!project_isNull1235) {
/* 14314 */         project_value1235 = project_result436;
/* 14315 */       }
/* 14316 */       boolean project_isNull1233 = false;
/* 14317 */       InternalRow project_value1233 = null;
/* 14318 */       if (!false && project_isNull1235) {
/* 14319 */         final InternalRow project_value1237 = null;
/* 14320 */         project_isNull1233 = true;
/* 14321 */         project_value1233 = project_value1237;
/* 14322 */       } else {
/* 14323 */         Object project_arg434 = sort_isNull19 ? null : project_converter440.apply(sort_value19);
/* 14324 */
/* 14325 */         Double project_result438 = null;
/* 14326 */         try {
/* 14327 */           project_result438 = (Double)project_catalystConverter438.apply(project_udf438.apply(project_arg434));
/* 14328 */         } catch (Exception e) {
/* 14329 */           throw new org.apache.spark.SparkException(project_scalaUDF438.udfErrorMessage(), e);
/* 14330 */         }
/* 14331 */
/* 14332 */         boolean project_isNull1239 = project_result438 == null;
/* 14333 */         double project_value1239 = -1.0;
/* 14334 */         if (!project_isNull1239) {
/* 14335 */           project_value1239 = project_result438;
/* 14336 */         }
/* 14337 */         Object project_arg435 = project_isNull1239 ? null : project_converter439.apply(project_value1239);
/* 14338 */
/* 14339 */         InternalRow project_result437 = null;
/* 14340 */         try {
/* 14341 */           project_result437 = (InternalRow)project_catalystConverter437.apply(project_udf437.apply(project_arg435));
/* 14342 */         } catch (Exception e) {
/* 14343 */           throw new org.apache.spark.SparkException(project_scalaUDF437.udfErrorMessage(), e);
/* 14344 */         }
/* 14345 */
/* 14346 */         boolean project_isNull1238 = project_result437 == null;
/* 14347 */         InternalRow project_value1238 = null;
/* 14348 */         if (!project_isNull1238) {
/* 14349 */           project_value1238 = project_result437;
/* 14350 */         }
/* 14351 */         project_isNull1233 = project_isNull1238;
/* 14352 */         project_value1233 = project_value1238;
/* 14353 */       }
/* 14354 */       if (project_isNull1233) {
/* 14355 */         project_values7[19] = null;
/* 14356 */       } else {
/* 14357 */         project_values7[19] = project_value1233;
/* 14358 */       }
/* 14359 */
/* 14360 */       Object project_arg436 = sort_isNull20 ? null : project_converter441.apply(sort_value20);
/* 14361 */
/* 14362 */       Double project_result439 = null;
/* 14363 */       try {
/* 14364 */         project_result439 = (Double)project_catalystConverter439.apply(project_udf439.apply(project_arg436));
/* 14365 */       } catch (Exception e) {
/* 14366 */         throw new org.apache.spark.SparkException(project_scalaUDF439.udfErrorMessage(), e);
/* 14367 */       }
/* 14368 */
/* 14369 */       boolean project_isNull1243 = project_result439 == null;
/* 14370 */       double project_value1243 = -1.0;
/* 14371 */       if (!project_isNull1243) {
/* 14372 */         project_value1243 = project_result439;
/* 14373 */       }
/* 14374 */       boolean project_isNull1241 = false;
/* 14375 */       InternalRow project_value1241 = null;
/* 14376 */       if (!false && project_isNull1243) {
/* 14377 */         final InternalRow project_value1245 = null;
/* 14378 */         project_isNull1241 = true;
/* 14379 */         project_value1241 = project_value1245;
/* 14380 */       } else {
/* 14381 */         Object project_arg437 = sort_isNull20 ? null : project_converter443.apply(sort_value20);
/* 14382 */
/* 14383 */         Double project_result441 = null;
/* 14384 */         try {
/* 14385 */           project_result441 = (Double)project_catalystConverter441.apply(project_udf441.apply(project_arg437));
/* 14386 */         } catch (Exception e) {
/* 14387 */           throw new org.apache.spark.SparkException(project_scalaUDF441.udfErrorMessage(), e);
/* 14388 */         }
/* 14389 */
/* 14390 */         boolean project_isNull1247 = project_result441 == null;
/* 14391 */         double project_value1247 = -1.0;
/* 14392 */         if (!project_isNull1247) {
/* 14393 */           project_value1247 = project_result441;
/* 14394 */         }
/* 14395 */         Object project_arg438 = project_isNull1247 ? null : project_converter442.apply(project_value1247);
/* 14396 */
/* 14397 */         InternalRow project_result440 = null;
/* 14398 */         try {
/* 14399 */           project_result440 = (InternalRow)project_catalystConverter440.apply(project_udf440.apply(project_arg438));
/* 14400 */         } catch (Exception e) {
/* 14401 */           throw new org.apache.spark.SparkException(project_scalaUDF440.udfErrorMessage(), e);
/* 14402 */         }
/* 14403 */
/* 14404 */         boolean project_isNull1246 = project_result440 == null;
/* 14405 */         InternalRow project_value1246 = null;
/* 14406 */         if (!project_isNull1246) {
/* 14407 */           project_value1246 = project_result440;
/* 14408 */         }
/* 14409 */         project_isNull1241 = project_isNull1246;
/* 14410 */         project_value1241 = project_value1246;
/* 14411 */       }
/* 14412 */       if (project_isNull1241) {
/* 14413 */         project_values7[20] = null;
/* 14414 */       } else {
/* 14415 */         project_values7[20] = project_value1241;
/* 14416 */       }
/* 14417 */
/* 14418 */       Object project_arg439 = sort_isNull21 ? null : project_converter444.apply(sort_value21);
/* 14419 */
/* 14420 */       Double project_result442 = null;
/* 14421 */       try {
/* 14422 */         project_result442 = (Double)project_catalystConverter442.apply(project_udf442.apply(project_arg439));
/* 14423 */       } catch (Exception e) {
/* 14424 */         throw new org.apache.spark.SparkException(project_scalaUDF442.udfErrorMessage(), e);
/* 14425 */       }
/* 14426 */
/* 14427 */       boolean project_isNull1251 = project_result442 == null;
/* 14428 */       double project_value1251 = -1.0;
/* 14429 */       if (!project_isNull1251) {
/* 14430 */         project_value1251 = project_result442;
/* 14431 */       }
/* 14432 */       boolean project_isNull1249 = false;
/* 14433 */       InternalRow project_value1249 = null;
/* 14434 */       if (!false && project_isNull1251) {
/* 14435 */         final InternalRow project_value1253 = null;
/* 14436 */         project_isNull1249 = true;
/* 14437 */         project_value1249 = project_value1253;
/* 14438 */       } else {
/* 14439 */         Object project_arg440 = sort_isNull21 ? null : project_converter446.apply(sort_value21);
/* 14440 */
/* 14441 */         Double project_result444 = null;
/* 14442 */         try {
/* 14443 */           project_result444 = (Double)project_catalystConverter444.apply(project_udf444.apply(project_arg440));
/* 14444 */         } catch (Exception e) {
/* 14445 */           throw new org.apache.spark.SparkException(project_scalaUDF444.udfErrorMessage(), e);
/* 14446 */         }
/* 14447 */
/* 14448 */         boolean project_isNull1255 = project_result444 == null;
/* 14449 */         double project_value1255 = -1.0;
/* 14450 */         if (!project_isNull1255) {
/* 14451 */           project_value1255 = project_result444;
/* 14452 */         }
/* 14453 */         Object project_arg441 = project_isNull1255 ? null : project_converter445.apply(project_value1255);
/* 14454 */
/* 14455 */         InternalRow project_result443 = null;
/* 14456 */         try {
/* 14457 */           project_result443 = (InternalRow)project_catalystConverter443.apply(project_udf443.apply(project_arg441));
/* 14458 */         } catch (Exception e) {
/* 14459 */           throw new org.apache.spark.SparkException(project_scalaUDF443.udfErrorMessage(), e);
/* 14460 */         }
/* 14461 */
/* 14462 */         boolean project_isNull1254 = project_result443 == null;
/* 14463 */         InternalRow project_value1254 = null;
/* 14464 */         if (!project_isNull1254) {
/* 14465 */           project_value1254 = project_result443;
/* 14466 */         }
/* 14467 */         project_isNull1249 = project_isNull1254;
/* 14468 */         project_value1249 = project_value1254;
/* 14469 */       }
/* 14470 */       if (project_isNull1249) {
/* 14471 */         project_values7[21] = null;
/* 14472 */       } else {
/* 14473 */         project_values7[21] = project_value1249;
/* 14474 */       }
/* 14475 */
/* 14476 */       Object project_arg442 = sort_isNull22 ? null : project_converter447.apply(sort_value22);
/* 14477 */
/* 14478 */       Double project_result445 = null;
/* 14479 */       try {
/* 14480 */         project_result445 = (Double)project_catalystConverter445.apply(project_udf445.apply(project_arg442));
/* 14481 */       } catch (Exception e) {
/* 14482 */         throw new org.apache.spark.SparkException(project_scalaUDF445.udfErrorMessage(), e);
/* 14483 */       }
/* 14484 */
/* 14485 */       boolean project_isNull1259 = project_result445 == null;
/* 14486 */       double project_value1259 = -1.0;
/* 14487 */       if (!project_isNull1259) {
/* 14488 */         project_value1259 = project_result445;
/* 14489 */       }
/* 14490 */       boolean project_isNull1257 = false;
/* 14491 */       InternalRow project_value1257 = null;
/* 14492 */       if (!false && project_isNull1259) {
/* 14493 */         final InternalRow project_value1261 = null;
/* 14494 */         project_isNull1257 = true;
/* 14495 */         project_value1257 = project_value1261;
/* 14496 */       } else {
/* 14497 */         Object project_arg443 = sort_isNull22 ? null : project_converter449.apply(sort_value22);
/* 14498 */
/* 14499 */         Double project_result447 = null;
/* 14500 */         try {
/* 14501 */           project_result447 = (Double)project_catalystConverter447.apply(project_udf447.apply(project_arg443));
/* 14502 */         } catch (Exception e) {
/* 14503 */           throw new org.apache.spark.SparkException(project_scalaUDF447.udfErrorMessage(), e);
/* 14504 */         }
/* 14505 */
/* 14506 */         boolean project_isNull1263 = project_result447 == null;
/* 14507 */         double project_value1263 = -1.0;
/* 14508 */         if (!project_isNull1263) {
/* 14509 */           project_value1263 = project_result447;
/* 14510 */         }
/* 14511 */         Object project_arg444 = project_isNull1263 ? null : project_converter448.apply(project_value1263);
/* 14512 */
/* 14513 */         InternalRow project_result446 = null;
/* 14514 */         try {
/* 14515 */           project_result446 = (InternalRow)project_catalystConverter446.apply(project_udf446.apply(project_arg444));
/* 14516 */         } catch (Exception e) {
/* 14517 */           throw new org.apache.spark.SparkException(project_scalaUDF446.udfErrorMessage(), e);
/* 14518 */         }
/* 14519 */
/* 14520 */         boolean project_isNull1262 = project_result446 == null;
/* 14521 */         InternalRow project_value1262 = null;
/* 14522 */         if (!project_isNull1262) {
/* 14523 */           project_value1262 = project_result446;
/* 14524 */         }
/* 14525 */         project_isNull1257 = project_isNull1262;
/* 14526 */         project_value1257 = project_value1262;
/* 14527 */       }
/* 14528 */       if (project_isNull1257) {
/* 14529 */         project_values7[22] = null;
/* 14530 */       } else {
/* 14531 */         project_values7[22] = project_value1257;
/* 14532 */       }
/* 14533 */
/* 14534 */       Object project_arg445 = sort_isNull23 ? null : project_converter450.apply(sort_value23);
/* 14535 */
/* 14536 */       Double project_result448 = null;
/* 14537 */       try {
/* 14538 */         project_result448 = (Double)project_catalystConverter448.apply(project_udf448.apply(project_arg445));
/* 14539 */       } catch (Exception e) {
/* 14540 */         throw new org.apache.spark.SparkException(project_scalaUDF448.udfErrorMessage(), e);
/* 14541 */       }
/* 14542 */
/* 14543 */       boolean project_isNull1267 = project_result448 == null;
/* 14544 */       double project_value1267 = -1.0;
/* 14545 */       if (!project_isNull1267) {
/* 14546 */         project_value1267 = project_result448;
/* 14547 */       }
/* 14548 */       boolean project_isNull1265 = false;
/* 14549 */       InternalRow project_value1265 = null;
/* 14550 */       if (!false && project_isNull1267) {
/* 14551 */         final InternalRow project_value1269 = null;
/* 14552 */         project_isNull1265 = true;
/* 14553 */         project_value1265 = project_value1269;
/* 14554 */       } else {
/* 14555 */         Object project_arg446 = sort_isNull23 ? null : project_converter452.apply(sort_value23);
/* 14556 */
/* 14557 */         Double project_result450 = null;
/* 14558 */         try {
/* 14559 */           project_result450 = (Double)project_catalystConverter450.apply(project_udf450.apply(project_arg446));
/* 14560 */         } catch (Exception e) {
/* 14561 */           throw new org.apache.spark.SparkException(project_scalaUDF450.udfErrorMessage(), e);
/* 14562 */         }
/* 14563 */
/* 14564 */         boolean project_isNull1271 = project_result450 == null;
/* 14565 */         double project_value1271 = -1.0;
/* 14566 */         if (!project_isNull1271) {
/* 14567 */           project_value1271 = project_result450;
/* 14568 */         }
/* 14569 */         Object project_arg447 = project_isNull1271 ? null : project_converter451.apply(project_value1271);
/* 14570 */
/* 14571 */         InternalRow project_result449 = null;
/* 14572 */         try {
/* 14573 */           project_result449 = (InternalRow)project_catalystConverter449.apply(project_udf449.apply(project_arg447));
/* 14574 */         } catch (Exception e) {
/* 14575 */           throw new org.apache.spark.SparkException(project_scalaUDF449.udfErrorMessage(), e);
/* 14576 */         }
/* 14577 */
/* 14578 */         boolean project_isNull1270 = project_result449 == null;
/* 14579 */         InternalRow project_value1270 = null;
/* 14580 */         if (!project_isNull1270) {
/* 14581 */           project_value1270 = project_result449;
/* 14582 */         }
/* 14583 */         project_isNull1265 = project_isNull1270;
/* 14584 */         project_value1265 = project_value1270;
/* 14585 */       }
/* 14586 */       if (project_isNull1265) {
/* 14587 */         project_values7[23] = null;
/* 14588 */       } else {
/* 14589 */         project_values7[23] = project_value1265;
/* 14590 */       }
/* 14591 */
/* 14592 */       Object project_arg448 = sort_isNull24 ? null : project_converter453.apply(sort_value24);
/* 14593 */
/* 14594 */       Double project_result451 = null;
/* 14595 */       try {
/* 14596 */         project_result451 = (Double)project_catalystConverter451.apply(project_udf451.apply(project_arg448));
/* 14597 */       } catch (Exception e) {
/* 14598 */         throw new org.apache.spark.SparkException(project_scalaUDF451.udfErrorMessage(), e);
/* 14599 */       }
/* 14600 */
/* 14601 */       boolean project_isNull1275 = project_result451 == null;
/* 14602 */       double project_value1275 = -1.0;
/* 14603 */       if (!project_isNull1275) {
/* 14604 */         project_value1275 = project_result451;
/* 14605 */       }
/* 14606 */       boolean project_isNull1273 = false;
/* 14607 */       InternalRow project_value1273 = null;
/* 14608 */       if (!false && project_isNull1275) {
/* 14609 */         final InternalRow project_value1277 = null;
/* 14610 */         project_isNull1273 = true;
/* 14611 */         project_value1273 = project_value1277;
/* 14612 */       } else {
/* 14613 */         Object project_arg449 = sort_isNull24 ? null : project_converter455.apply(sort_value24);
/* 14614 */
/* 14615 */         Double project_result453 = null;
/* 14616 */         try {
/* 14617 */           project_result453 = (Double)project_catalystConverter453.apply(project_udf453.apply(project_arg449));
/* 14618 */         } catch (Exception e) {
/* 14619 */           throw new org.apache.spark.SparkException(project_scalaUDF453.udfErrorMessage(), e);
/* 14620 */         }
/* 14621 */
/* 14622 */         boolean project_isNull1279 = project_result453 == null;
/* 14623 */         double project_value1279 = -1.0;
/* 14624 */         if (!project_isNull1279) {
/* 14625 */           project_value1279 = project_result453;
/* 14626 */         }
/* 14627 */         Object project_arg450 = project_isNull1279 ? null : project_converter454.apply(project_value1279);
/* 14628 */
/* 14629 */         InternalRow project_result452 = null;
/* 14630 */         try {
/* 14631 */           project_result452 = (InternalRow)project_catalystConverter452.apply(project_udf452.apply(project_arg450));
/* 14632 */         } catch (Exception e) {
/* 14633 */           throw new org.apache.spark.SparkException(project_scalaUDF452.udfErrorMessage(), e);
/* 14634 */         }
/* 14635 */
/* 14636 */         boolean project_isNull1278 = project_result452 == null;
/* 14637 */         InternalRow project_value1278 = null;
/* 14638 */         if (!project_isNull1278) {
/* 14639 */           project_value1278 = project_result452;
/* 14640 */         }
/* 14641 */         project_isNull1273 = project_isNull1278;
/* 14642 */         project_value1273 = project_value1278;
/* 14643 */       }
/* 14644 */       if (project_isNull1273) {
/* 14645 */         project_values7[24] = null;
/* 14646 */       } else {
/* 14647 */         project_values7[24] = project_value1273;
/* 14648 */       }
/* 14649 */
/* 14650 */       Object project_arg451 = sort_isNull25 ? null : project_converter456.apply(sort_value25);
/* 14651 */
/* 14652 */       Double project_result454 = null;
/* 14653 */       try {
/* 14654 */         project_result454 = (Double)project_catalystConverter454.apply(project_udf454.apply(project_arg451));
/* 14655 */       } catch (Exception e) {
/* 14656 */         throw new org.apache.spark.SparkException(project_scalaUDF454.udfErrorMessage(), e);
/* 14657 */       }
/* 14658 */
/* 14659 */       boolean project_isNull1283 = project_result454 == null;
/* 14660 */       double project_value1283 = -1.0;
/* 14661 */       if (!project_isNull1283) {
/* 14662 */         project_value1283 = project_result454;
/* 14663 */       }
/* 14664 */       boolean project_isNull1281 = false;
/* 14665 */       InternalRow project_value1281 = null;
/* 14666 */       if (!false && project_isNull1283) {
/* 14667 */         final InternalRow project_value1285 = null;
/* 14668 */         project_isNull1281 = true;
/* 14669 */         project_value1281 = project_value1285;
/* 14670 */       } else {
/* 14671 */         Object project_arg452 = sort_isNull25 ? null : project_converter458.apply(sort_value25);
/* 14672 */
/* 14673 */         Double project_result456 = null;
/* 14674 */         try {
/* 14675 */           project_result456 = (Double)project_catalystConverter456.apply(project_udf456.apply(project_arg452));
/* 14676 */         } catch (Exception e) {
/* 14677 */           throw new org.apache.spark.SparkException(project_scalaUDF456.udfErrorMessage(), e);
/* 14678 */         }
/* 14679 */
/* 14680 */         boolean project_isNull1287 = project_result456 == null;
/* 14681 */         double project_value1287 = -1.0;
/* 14682 */         if (!project_isNull1287) {
/* 14683 */           project_value1287 = project_result456;
/* 14684 */         }
/* 14685 */         Object project_arg453 = project_isNull1287 ? null : project_converter457.apply(project_value1287);
/* 14686 */
/* 14687 */         InternalRow project_result455 = null;
/* 14688 */         try {
/* 14689 */           project_result455 = (InternalRow)project_catalystConverter455.apply(project_udf455.apply(project_arg453));
/* 14690 */         } catch (Exception e) {
/* 14691 */           throw new org.apache.spark.SparkException(project_scalaUDF455.udfErrorMessage(), e);
/* 14692 */         }
/* 14693 */
/* 14694 */         boolean project_isNull1286 = project_result455 == null;
/* 14695 */         InternalRow project_value1286 = null;
/* 14696 */         if (!project_isNull1286) {
/* 14697 */           project_value1286 = project_result455;
/* 14698 */         }
/* 14699 */         project_isNull1281 = project_isNull1286;
/* 14700 */         project_value1281 = project_value1286;
/* 14701 */       }
/* 14702 */       if (project_isNull1281) {
/* 14703 */         project_values7[25] = null;
/* 14704 */       } else {
/* 14705 */         project_values7[25] = project_value1281;
/* 14706 */       }
/* 14707 */
/* 14708 */       if (sort_isNull27) {
/* 14709 */         project_values7[26] = null;
/* 14710 */       } else {
/* 14711 */         project_values7[26] = sort_value27;
/* 14712 */       }
/* 14713 */       final InternalRow project_value1136 = new org.apache.spark.sql.catalyst.expressions.GenericInternalRow(project_values7);
/* 14714 */       this.project_values7 = null;
/* 14715 */       Object project_arg454 = false ? null : project_converter404.apply(project_value1136);
/* 14716 */
/* 14717 */       InternalRow project_result402 = null;
/* 14718 */       try {
/* 14719 */         project_result402 = (InternalRow)project_catalystConverter402.apply(project_udf402.apply(project_arg454));
/* 14720 */       } catch (Exception e) {
/* 14721 */         throw new org.apache.spark.SparkException(project_scalaUDF402.udfErrorMessage(), e);
/* 14722 */       }
/* 14723 */
/* 14724 */       boolean project_isNull1135 = project_result402 == null;
/* 14725 */       InternalRow project_value1135 = null;
/* 14726 */       if (!project_isNull1135) {
/* 14727 */         project_value1135 = project_result402;
/* 14728 */       }
/* 14729 */       Object project_arg455 = project_isNull1135 ? null : project_converter403.apply(project_value1135);
/* 14730 */
/* 14731 */       InternalRow project_result401 = null;
/* 14732 */       try {
/* 14733 */         project_result401 = (InternalRow)project_catalystConverter401.apply(project_udf401.apply(project_arg455));
/* 14734 */       } catch (Exception e) {
/* 14735 */         throw new org.apache.spark.SparkException(project_scalaUDF401.udfErrorMessage(), e);
/* 14736 */       }
/* 14737 */
/* 14738 */       boolean project_isNull1134 = project_result401 == null;
/* 14739 */       InternalRow project_value1134 = null;
/* 14740 */       if (!project_isNull1134) {
/* 14741 */         project_value1134 = project_result401;
/* 14742 */       }
/* 14743 */       Object project_arg456 = project_isNull1134 ? null : project_converter402.apply(project_value1134);
/* 14744 */
/* 14745 */       InternalRow project_result400 = null;
/* 14746 */       try {
/* 14747 */         project_result400 = (InternalRow)project_catalystConverter400.apply(project_udf400.apply(project_arg456));
/* 14748 */       } catch (Exception e) {
/* 14749 */         throw new org.apache.spark.SparkException(project_scalaUDF400.udfErrorMessage(), e);
/* 14750 */       }
/* 14751 */
/* 14752 */       boolean project_isNull1133 = project_result400 == null;
/* 14753 */       InternalRow project_value1133 = null;
/* 14754 */       if (!project_isNull1133) {
/* 14755 */         project_value1133 = project_result400;
/* 14756 */       }
/* 14757 */       Object project_arg457 = project_isNull1133 ? null : project_converter400.apply(project_value1133);
/* 14758 */       Object project_arg458 = false ? null : project_converter401.apply(1);
/* 14759 */
/* 14760 */       Double project_result399 = null;
/* 14761 */       try {
/* 14762 */         project_result399 = (Double)project_catalystConverter399.apply(project_udf399.apply(project_arg457, project_arg458));
/* 14763 */       } catch (Exception e) {
/* 14764 */         throw new org.apache.spark.SparkException(project_scalaUDF399.udfErrorMessage(), e);
/* 14765 */       }
/* 14766 */
/* 14767 */       boolean project_isNull1132 = project_result399 == null;
/* 14768 */       double project_value1132 = -1.0;
/* 14769 */       if (!project_isNull1132) {
/* 14770 */         project_value1132 = project_result399;
/* 14771 */       }
/* 14772 */       project_values8 = new Object[27];
/* 14773 */       Object project_arg459 = sort_isNull ? null : project_converter464.apply(sort_value);
/* 14774 */
/* 14775 */       Double project_result461 = null;
/* 14776 */       try {
/* 14777 */         project_result461 = (Double)project_catalystConverter461.apply(project_udf461.apply(project_arg459));
/* 14778 */       } catch (Exception e) {
/* 14779 */         throw new org.apache.spark.SparkException(project_scalaUDF461.udfErrorMessage(), e);
/* 14780 */       }
/* 14781 */
/* 14782 */       boolean project_isNull1298 = project_result461 == null;
/* 14783 */       double project_value1298 = -1.0;
/* 14784 */       if (!project_isNull1298) {
/* 14785 */         project_value1298 = project_result461;
/* 14786 */       }
/* 14787 */       boolean project_isNull1296 = false;
/* 14788 */       InternalRow project_value1296 = null;
/* 14789 */       if (!false && project_isNull1298) {
/* 14790 */         final InternalRow project_value1300 = null;
/* 14791 */         project_isNull1296 = true;
/* 14792 */         project_value1296 = project_value1300;
/* 14793 */       } else {
/* 14794 */         Object project_arg460 = sort_isNull ? null : project_converter466.apply(sort_value);
/* 14795 */
/* 14796 */         Double project_result463 = null;
/* 14797 */         try {
/* 14798 */           project_result463 = (Double)project_catalystConverter463.apply(project_udf463.apply(project_arg460));
/* 14799 */         } catch (Exception e) {
/* 14800 */           throw new org.apache.spark.SparkException(project_scalaUDF463.udfErrorMessage(), e);
/* 14801 */         }
/* 14802 */
/* 14803 */         boolean project_isNull1302 = project_result463 == null;
/* 14804 */         double project_value1302 = -1.0;
/* 14805 */         if (!project_isNull1302) {
/* 14806 */           project_value1302 = project_result463;
/* 14807 */         }
/* 14808 */         Object project_arg461 = project_isNull1302 ? null : project_converter465.apply(project_value1302);
/* 14809 */
/* 14810 */         InternalRow project_result462 = null;
/* 14811 */         try {
/* 14812 */           project_result462 = (InternalRow)project_catalystConverter462.apply(project_udf462.apply(project_arg461));
/* 14813 */         } catch (Exception e) {
/* 14814 */           throw new org.apache.spark.SparkException(project_scalaUDF462.udfErrorMessage(), e);
/* 14815 */         }
/* 14816 */
/* 14817 */         boolean project_isNull1301 = project_result462 == null;
/* 14818 */         InternalRow project_value1301 = null;
/* 14819 */         if (!project_isNull1301) {
/* 14820 */           project_value1301 = project_result462;
/* 14821 */         }
/* 14822 */         project_isNull1296 = project_isNull1301;
/* 14823 */         project_value1296 = project_value1301;
/* 14824 */       }
/* 14825 */       if (project_isNull1296) {
/* 14826 */         project_values8[0] = null;
/* 14827 */       } else {
/* 14828 */         project_values8[0] = project_value1296;
/* 14829 */       }
/* 14830 */
/* 14831 */       Object project_arg462 = sort_isNull1 ? null : project_converter467.apply(sort_value1);
/* 14832 */
/* 14833 */       Double project_result464 = null;
/* 14834 */       try {
/* 14835 */         project_result464 = (Double)project_catalystConverter464.apply(project_udf464.apply(project_arg462));
/* 14836 */       } catch (Exception e) {
/* 14837 */         throw new org.apache.spark.SparkException(project_scalaUDF464.udfErrorMessage(), e);
/* 14838 */       }
/* 14839 */
/* 14840 */       boolean project_isNull1306 = project_result464 == null;
/* 14841 */       double project_value1306 = -1.0;
/* 14842 */       if (!project_isNull1306) {
/* 14843 */         project_value1306 = project_result464;
/* 14844 */       }
/* 14845 */       boolean project_isNull1304 = false;
/* 14846 */       InternalRow project_value1304 = null;
/* 14847 */       if (!false && project_isNull1306) {
/* 14848 */         final InternalRow project_value1308 = null;
/* 14849 */         project_isNull1304 = true;
/* 14850 */         project_value1304 = project_value1308;
/* 14851 */       } else {
/* 14852 */         Object project_arg463 = sort_isNull1 ? null : project_converter469.apply(sort_value1);
/* 14853 */
/* 14854 */         Double project_result466 = null;
/* 14855 */         try {
/* 14856 */           project_result466 = (Double)project_catalystConverter466.apply(project_udf466.apply(project_arg463));
/* 14857 */         } catch (Exception e) {
/* 14858 */           throw new org.apache.spark.SparkException(project_scalaUDF466.udfErrorMessage(), e);
/* 14859 */         }
/* 14860 */
/* 14861 */         boolean project_isNull1310 = project_result466 == null;
/* 14862 */         double project_value1310 = -1.0;
/* 14863 */         if (!project_isNull1310) {
/* 14864 */           project_value1310 = project_result466;
/* 14865 */         }
/* 14866 */         Object project_arg464 = project_isNull1310 ? null : project_converter468.apply(project_value1310);
/* 14867 */
/* 14868 */         InternalRow project_result465 = null;
/* 14869 */         try {
/* 14870 */           project_result465 = (InternalRow)project_catalystConverter465.apply(project_udf465.apply(project_arg464));
/* 14871 */         } catch (Exception e) {
/* 14872 */           throw new org.apache.spark.SparkException(project_scalaUDF465.udfErrorMessage(), e);
/* 14873 */         }
/* 14874 */
/* 14875 */         boolean project_isNull1309 = project_result465 == null;
/* 14876 */         InternalRow project_value1309 = null;
/* 14877 */         if (!project_isNull1309) {
/* 14878 */           project_value1309 = project_result465;
/* 14879 */         }
/* 14880 */         project_isNull1304 = project_isNull1309;
/* 14881 */         project_value1304 = project_value1309;
/* 14882 */       }
/* 14883 */       if (project_isNull1304) {
/* 14884 */         project_values8[1] = null;
/* 14885 */       } else {
/* 14886 */         project_values8[1] = project_value1304;
/* 14887 */       }
/* 14888 */
/* 14889 */       Object project_arg465 = sort_isNull2 ? null : project_converter470.apply(sort_value2);
/* 14890 */
/* 14891 */       Double project_result467 = null;
/* 14892 */       try {
/* 14893 */         project_result467 = (Double)project_catalystConverter467.apply(project_udf467.apply(project_arg465));
/* 14894 */       } catch (Exception e) {
/* 14895 */         throw new org.apache.spark.SparkException(project_scalaUDF467.udfErrorMessage(), e);
/* 14896 */       }
/* 14897 */
/* 14898 */       boolean project_isNull1314 = project_result467 == null;
/* 14899 */       double project_value1314 = -1.0;
/* 14900 */       if (!project_isNull1314) {
/* 14901 */         project_value1314 = project_result467;
/* 14902 */       }
/* 14903 */       boolean project_isNull1312 = false;
/* 14904 */       InternalRow project_value1312 = null;
/* 14905 */       if (!false && project_isNull1314) {
/* 14906 */         final InternalRow project_value1316 = null;
/* 14907 */         project_isNull1312 = true;
/* 14908 */         project_value1312 = project_value1316;
/* 14909 */       } else {
/* 14910 */         Object project_arg466 = sort_isNull2 ? null : project_converter472.apply(sort_value2);
/* 14911 */
/* 14912 */         Double project_result469 = null;
/* 14913 */         try {
/* 14914 */           project_result469 = (Double)project_catalystConverter469.apply(project_udf469.apply(project_arg466));
/* 14915 */         } catch (Exception e) {
/* 14916 */           throw new org.apache.spark.SparkException(project_scalaUDF469.udfErrorMessage(), e);
/* 14917 */         }
/* 14918 */
/* 14919 */         boolean project_isNull1318 = project_result469 == null;
/* 14920 */         double project_value1318 = -1.0;
/* 14921 */         if (!project_isNull1318) {
/* 14922 */           project_value1318 = project_result469;
/* 14923 */         }
/* 14924 */         Object project_arg467 = project_isNull1318 ? null : project_converter471.apply(project_value1318);
/* 14925 */
/* 14926 */         InternalRow project_result468 = null;
/* 14927 */         try {
/* 14928 */           project_result468 = (InternalRow)project_catalystConverter468.apply(project_udf468.apply(project_arg467));
/* 14929 */         } catch (Exception e) {
/* 14930 */           throw new org.apache.spark.SparkException(project_scalaUDF468.udfErrorMessage(), e);
/* 14931 */         }
/* 14932 */
/* 14933 */         boolean project_isNull1317 = project_result468 == null;
/* 14934 */         InternalRow project_value1317 = null;
/* 14935 */         if (!project_isNull1317) {
/* 14936 */           project_value1317 = project_result468;
/* 14937 */         }
/* 14938 */         project_isNull1312 = project_isNull1317;
/* 14939 */         project_value1312 = project_value1317;
/* 14940 */       }
/* 14941 */       if (project_isNull1312) {
/* 14942 */         project_values8[2] = null;
/* 14943 */       } else {
/* 14944 */         project_values8[2] = project_value1312;
/* 14945 */       }
/* 14946 */
/* 14947 */       Object project_arg468 = sort_isNull3 ? null : project_converter473.apply(sort_value3);
/* 14948 */
/* 14949 */       Double project_result470 = null;
/* 14950 */       try {
/* 14951 */         project_result470 = (Double)project_catalystConverter470.apply(project_udf470.apply(project_arg468));
/* 14952 */       } catch (Exception e) {
/* 14953 */         throw new org.apache.spark.SparkException(project_scalaUDF470.udfErrorMessage(), e);
/* 14954 */       }
/* 14955 */
/* 14956 */       boolean project_isNull1322 = project_result470 == null;
/* 14957 */       double project_value1322 = -1.0;
/* 14958 */       if (!project_isNull1322) {
/* 14959 */         project_value1322 = project_result470;
/* 14960 */       }
/* 14961 */       boolean project_isNull1320 = false;
/* 14962 */       InternalRow project_value1320 = null;
/* 14963 */       if (!false && project_isNull1322) {
/* 14964 */         final InternalRow project_value1324 = null;
/* 14965 */         project_isNull1320 = true;
/* 14966 */         project_value1320 = project_value1324;
/* 14967 */       } else {
/* 14968 */         Object project_arg469 = sort_isNull3 ? null : project_converter475.apply(sort_value3);
/* 14969 */
/* 14970 */         Double project_result472 = null;
/* 14971 */         try {
/* 14972 */           project_result472 = (Double)project_catalystConverter472.apply(project_udf472.apply(project_arg469));
/* 14973 */         } catch (Exception e) {
/* 14974 */           throw new org.apache.spark.SparkException(project_scalaUDF472.udfErrorMessage(), e);
/* 14975 */         }
/* 14976 */
/* 14977 */         boolean project_isNull1326 = project_result472 == null;
/* 14978 */         double project_value1326 = -1.0;
/* 14979 */         if (!project_isNull1326) {
/* 14980 */           project_value1326 = project_result472;
/* 14981 */         }
/* 14982 */         Object project_arg470 = project_isNull1326 ? null : project_converter474.apply(project_value1326);
/* 14983 */
/* 14984 */         InternalRow project_result471 = null;
/* 14985 */         try {
/* 14986 */           project_result471 = (InternalRow)project_catalystConverter471.apply(project_udf471.apply(project_arg470));
/* 14987 */         } catch (Exception e) {
/* 14988 */           throw new org.apache.spark.SparkException(project_scalaUDF471.udfErrorMessage(), e);
/* 14989 */         }
/* 14990 */
/* 14991 */         boolean project_isNull1325 = project_result471 == null;
/* 14992 */         InternalRow project_value1325 = null;
/* 14993 */         if (!project_isNull1325) {
/* 14994 */           project_value1325 = project_result471;
/* 14995 */         }
/* 14996 */         project_isNull1320 = project_isNull1325;
/* 14997 */         project_value1320 = project_value1325;
/* 14998 */       }
/* 14999 */       if (project_isNull1320) {
/* 15000 */         project_values8[3] = null;
/* 15001 */       } else {
/* 15002 */         project_values8[3] = project_value1320;
/* 15003 */       }
/* 15004 */
/* 15005 */       Object project_arg471 = sort_isNull4 ? null : project_converter476.apply(sort_value4);
/* 15006 */
/* 15007 */       Double project_result473 = null;
/* 15008 */       try {
/* 15009 */         project_result473 = (Double)project_catalystConverter473.apply(project_udf473.apply(project_arg471));
/* 15010 */       } catch (Exception e) {
/* 15011 */         throw new org.apache.spark.SparkException(project_scalaUDF473.udfErrorMessage(), e);
/* 15012 */       }
/* 15013 */
/* 15014 */       boolean project_isNull1330 = project_result473 == null;
/* 15015 */       double project_value1330 = -1.0;
/* 15016 */       if (!project_isNull1330) {
/* 15017 */         project_value1330 = project_result473;
/* 15018 */       }
/* 15019 */       boolean project_isNull1328 = false;
/* 15020 */       InternalRow project_value1328 = null;
/* 15021 */       if (!false && project_isNull1330) {
/* 15022 */         final InternalRow project_value1332 = null;
/* 15023 */         project_isNull1328 = true;
/* 15024 */         project_value1328 = project_value1332;
/* 15025 */       } else {
/* 15026 */         Object project_arg472 = sort_isNull4 ? null : project_converter478.apply(sort_value4);
/* 15027 */
/* 15028 */         Double project_result475 = null;
/* 15029 */         try {
/* 15030 */           project_result475 = (Double)project_catalystConverter475.apply(project_udf475.apply(project_arg472));
/* 15031 */         } catch (Exception e) {
/* 15032 */           throw new org.apache.spark.SparkException(project_scalaUDF475.udfErrorMessage(), e);
/* 15033 */         }
/* 15034 */
/* 15035 */         boolean project_isNull1334 = project_result475 == null;
/* 15036 */         double project_value1334 = -1.0;
/* 15037 */         if (!project_isNull1334) {
/* 15038 */           project_value1334 = project_result475;
/* 15039 */         }
/* 15040 */         Object project_arg473 = project_isNull1334 ? null : project_converter477.apply(project_value1334);
/* 15041 */
/* 15042 */         InternalRow project_result474 = null;
/* 15043 */         try {
/* 15044 */           project_result474 = (InternalRow)project_catalystConverter474.apply(project_udf474.apply(project_arg473));
/* 15045 */         } catch (Exception e) {
/* 15046 */           throw new org.apache.spark.SparkException(project_scalaUDF474.udfErrorMessage(), e);
/* 15047 */         }
/* 15048 */
/* 15049 */         boolean project_isNull1333 = project_result474 == null;
/* 15050 */         InternalRow project_value1333 = null;
/* 15051 */         if (!project_isNull1333) {
/* 15052 */           project_value1333 = project_result474;
/* 15053 */         }
/* 15054 */         project_isNull1328 = project_isNull1333;
/* 15055 */         project_value1328 = project_value1333;
/* 15056 */       }
/* 15057 */       if (project_isNull1328) {
/* 15058 */         project_values8[4] = null;
/* 15059 */       } else {
/* 15060 */         project_values8[4] = project_value1328;
/* 15061 */       }
/* 15062 */
/* 15063 */       Object project_arg474 = sort_isNull5 ? null : project_converter479.apply(sort_value5);
/* 15064 */
/* 15065 */       Double project_result476 = null;
/* 15066 */       try {
/* 15067 */         project_result476 = (Double)project_catalystConverter476.apply(project_udf476.apply(project_arg474));
/* 15068 */       } catch (Exception e) {
/* 15069 */         throw new org.apache.spark.SparkException(project_scalaUDF476.udfErrorMessage(), e);
/* 15070 */       }
/* 15071 */
/* 15072 */       boolean project_isNull1338 = project_result476 == null;
/* 15073 */       double project_value1338 = -1.0;
/* 15074 */       if (!project_isNull1338) {
/* 15075 */         project_value1338 = project_result476;
/* 15076 */       }
/* 15077 */       boolean project_isNull1336 = false;
/* 15078 */       InternalRow project_value1336 = null;
/* 15079 */       if (!false && project_isNull1338) {
/* 15080 */         final InternalRow project_value1340 = null;
/* 15081 */         project_isNull1336 = true;
/* 15082 */         project_value1336 = project_value1340;
/* 15083 */       } else {
/* 15084 */         Object project_arg475 = sort_isNull5 ? null : project_converter481.apply(sort_value5);
/* 15085 */
/* 15086 */         Double project_result478 = null;
/* 15087 */         try {
/* 15088 */           project_result478 = (Double)project_catalystConverter478.apply(project_udf478.apply(project_arg475));
/* 15089 */         } catch (Exception e) {
/* 15090 */           throw new org.apache.spark.SparkException(project_scalaUDF478.udfErrorMessage(), e);
/* 15091 */         }
/* 15092 */
/* 15093 */         boolean project_isNull1342 = project_result478 == null;
/* 15094 */         double project_value1342 = -1.0;
/* 15095 */         if (!project_isNull1342) {
/* 15096 */           project_value1342 = project_result478;
/* 15097 */         }
/* 15098 */         Object project_arg476 = project_isNull1342 ? null : project_converter480.apply(project_value1342);
/* 15099 */
/* 15100 */         InternalRow project_result477 = null;
/* 15101 */         try {
/* 15102 */           project_result477 = (InternalRow)project_catalystConverter477.apply(project_udf477.apply(project_arg476));
/* 15103 */         } catch (Exception e) {
/* 15104 */           throw new org.apache.spark.SparkException(project_scalaUDF477.udfErrorMessage(), e);
/* 15105 */         }
/* 15106 */
/* 15107 */         boolean project_isNull1341 = project_result477 == null;
/* 15108 */         InternalRow project_value1341 = null;
/* 15109 */         if (!project_isNull1341) {
/* 15110 */           project_value1341 = project_result477;
/* 15111 */         }
/* 15112 */         project_isNull1336 = project_isNull1341;
/* 15113 */         project_value1336 = project_value1341;
/* 15114 */       }
/* 15115 */       if (project_isNull1336) {
/* 15116 */         project_values8[5] = null;
/* 15117 */       } else {
/* 15118 */         project_values8[5] = project_value1336;
/* 15119 */       }
/* 15120 */
/* 15121 */       if (sort_isNull6) {
/* 15122 */         project_values8[6] = null;
/* 15123 */       } else {
/* 15124 */         project_values8[6] = sort_value6;
/* 15125 */       }
/* 15126 */
/* 15127 */       if (sort_isNull7) {
/* 15128 */         project_values8[7] = null;
/* 15129 */       } else {
/* 15130 */         project_values8[7] = sort_value7;
/* 15131 */       }
/* 15132 */
/* 15133 */       if (sort_isNull8) {
/* 15134 */         project_values8[8] = null;
/* 15135 */       } else {
/* 15136 */         project_values8[8] = sort_value8;
/* 15137 */       }
/* 15138 */
/* 15139 */       if (sort_isNull9) {
/* 15140 */         project_values8[9] = null;
/* 15141 */       } else {
/* 15142 */         project_values8[9] = sort_value9;
/* 15143 */       }
/* 15144 */
/* 15145 */       if (sort_isNull10) {
/* 15146 */         project_values8[10] = null;
/* 15147 */       } else {
/* 15148 */         project_values8[10] = sort_value10;
/* 15149 */       }
/* 15150 */
/* 15151 */       if (sort_isNull11) {
/* 15152 */         project_values8[11] = null;
/* 15153 */       } else {
/* 15154 */         project_values8[11] = sort_value11;
/* 15155 */       }
/* 15156 */
/* 15157 */       if (sort_isNull12) {
/* 15158 */         project_values8[12] = null;
/* 15159 */       } else {
/* 15160 */         project_values8[12] = sort_value12;
/* 15161 */       }
/* 15162 */
/* 15163 */       Object project_arg477 = sort_isNull13 ? null : project_converter482.apply(sort_value13);
/* 15164 */
/* 15165 */       Double project_result479 = null;
/* 15166 */       try {
/* 15167 */         project_result479 = (Double)project_catalystConverter479.apply(project_udf479.apply(project_arg477));
/* 15168 */       } catch (Exception e) {
/* 15169 */         throw new org.apache.spark.SparkException(project_scalaUDF479.udfErrorMessage(), e);
/* 15170 */       }
/* 15171 */
/* 15172 */       boolean project_isNull1353 = project_result479 == null;
/* 15173 */       double project_value1353 = -1.0;
/* 15174 */       if (!project_isNull1353) {
/* 15175 */         project_value1353 = project_result479;
/* 15176 */       }
/* 15177 */       boolean project_isNull1351 = false;
/* 15178 */       InternalRow project_value1351 = null;
/* 15179 */       if (!false && project_isNull1353) {
/* 15180 */         final InternalRow project_value1355 = null;
/* 15181 */         project_isNull1351 = true;
/* 15182 */         project_value1351 = project_value1355;
/* 15183 */       } else {
/* 15184 */         Object project_arg478 = sort_isNull13 ? null : project_converter484.apply(sort_value13);
/* 15185 */
/* 15186 */         Double project_result481 = null;
/* 15187 */         try {
/* 15188 */           project_result481 = (Double)project_catalystConverter481.apply(project_udf481.apply(project_arg478));
/* 15189 */         } catch (Exception e) {
/* 15190 */           throw new org.apache.spark.SparkException(project_scalaUDF481.udfErrorMessage(), e);
/* 15191 */         }
/* 15192 */
/* 15193 */         boolean project_isNull1357 = project_result481 == null;
/* 15194 */         double project_value1357 = -1.0;
/* 15195 */         if (!project_isNull1357) {
/* 15196 */           project_value1357 = project_result481;
/* 15197 */         }
/* 15198 */         Object project_arg479 = project_isNull1357 ? null : project_converter483.apply(project_value1357);
/* 15199 */
/* 15200 */         InternalRow project_result480 = null;
/* 15201 */         try {
/* 15202 */           project_result480 = (InternalRow)project_catalystConverter480.apply(project_udf480.apply(project_arg479));
/* 15203 */         } catch (Exception e) {
/* 15204 */           throw new org.apache.spark.SparkException(project_scalaUDF480.udfErrorMessage(), e);
/* 15205 */         }
/* 15206 */
/* 15207 */         boolean project_isNull1356 = project_result480 == null;
/* 15208 */         InternalRow project_value1356 = null;
/* 15209 */         if (!project_isNull1356) {
/* 15210 */           project_value1356 = project_result480;
/* 15211 */         }
/* 15212 */         project_isNull1351 = project_isNull1356;
/* 15213 */         project_value1351 = project_value1356;
/* 15214 */       }
/* 15215 */       if (project_isNull1351) {
/* 15216 */         project_values8[13] = null;
/* 15217 */       } else {
/* 15218 */         project_values8[13] = project_value1351;
/* 15219 */       }
/* 15220 */
/* 15221 */       Object project_arg480 = sort_isNull14 ? null : project_converter485.apply(sort_value14);
/* 15222 */
/* 15223 */       Double project_result482 = null;
/* 15224 */       try {
/* 15225 */         project_result482 = (Double)project_catalystConverter482.apply(project_udf482.apply(project_arg480));
/* 15226 */       } catch (Exception e) {
/* 15227 */         throw new org.apache.spark.SparkException(project_scalaUDF482.udfErrorMessage(), e);
/* 15228 */       }
/* 15229 */
/* 15230 */       boolean project_isNull1361 = project_result482 == null;
/* 15231 */       double project_value1361 = -1.0;
/* 15232 */       if (!project_isNull1361) {
/* 15233 */         project_value1361 = project_result482;
/* 15234 */       }
/* 15235 */       boolean project_isNull1359 = false;
/* 15236 */       InternalRow project_value1359 = null;
/* 15237 */       if (!false && project_isNull1361) {
/* 15238 */         final InternalRow project_value1363 = null;
/* 15239 */         project_isNull1359 = true;
/* 15240 */         project_value1359 = project_value1363;
/* 15241 */       } else {
/* 15242 */         Object project_arg481 = sort_isNull14 ? null : project_converter487.apply(sort_value14);
/* 15243 */
/* 15244 */         Double project_result484 = null;
/* 15245 */         try {
/* 15246 */           project_result484 = (Double)project_catalystConverter484.apply(project_udf484.apply(project_arg481));
/* 15247 */         } catch (Exception e) {
/* 15248 */           throw new org.apache.spark.SparkException(project_scalaUDF484.udfErrorMessage(), e);
/* 15249 */         }
/* 15250 */
/* 15251 */         boolean project_isNull1365 = project_result484 == null;
/* 15252 */         double project_value1365 = -1.0;
/* 15253 */         if (!project_isNull1365) {
/* 15254 */           project_value1365 = project_result484;
/* 15255 */         }
/* 15256 */         Object project_arg482 = project_isNull1365 ? null : project_converter486.apply(project_value1365);
/* 15257 */
/* 15258 */         InternalRow project_result483 = null;
/* 15259 */         try {
/* 15260 */           project_result483 = (InternalRow)project_catalystConverter483.apply(project_udf483.apply(project_arg482));
/* 15261 */         } catch (Exception e) {
/* 15262 */           throw new org.apache.spark.SparkException(project_scalaUDF483.udfErrorMessage(), e);
/* 15263 */         }
/* 15264 */
/* 15265 */         boolean project_isNull1364 = project_result483 == null;
/* 15266 */         InternalRow project_value1364 = null;
/* 15267 */         if (!project_isNull1364) {
/* 15268 */           project_value1364 = project_result483;
/* 15269 */         }
/* 15270 */         project_isNull1359 = project_isNull1364;
/* 15271 */         project_value1359 = project_value1364;
/* 15272 */       }
/* 15273 */       if (project_isNull1359) {
/* 15274 */         project_values8[14] = null;
/* 15275 */       } else {
/* 15276 */         project_values8[14] = project_value1359;
/* 15277 */       }
/* 15278 */
/* 15279 */       Object project_arg483 = sort_isNull15 ? null : project_converter488.apply(sort_value15);
/* 15280 */
/* 15281 */       Double project_result485 = null;
/* 15282 */       try {
/* 15283 */         project_result485 = (Double)project_catalystConverter485.apply(project_udf485.apply(project_arg483));
/* 15284 */       } catch (Exception e) {
/* 15285 */         throw new org.apache.spark.SparkException(project_scalaUDF485.udfErrorMessage(), e);
/* 15286 */       }
/* 15287 */
/* 15288 */       boolean project_isNull1369 = project_result485 == null;
/* 15289 */       double project_value1369 = -1.0;
/* 15290 */       if (!project_isNull1369) {
/* 15291 */         project_value1369 = project_result485;
/* 15292 */       }
/* 15293 */       boolean project_isNull1367 = false;
/* 15294 */       InternalRow project_value1367 = null;
/* 15295 */       if (!false && project_isNull1369) {
/* 15296 */         final InternalRow project_value1371 = null;
/* 15297 */         project_isNull1367 = true;
/* 15298 */         project_value1367 = project_value1371;
/* 15299 */       } else {
/* 15300 */         Object project_arg484 = sort_isNull15 ? null : project_converter490.apply(sort_value15);
/* 15301 */
/* 15302 */         Double project_result487 = null;
/* 15303 */         try {
/* 15304 */           project_result487 = (Double)project_catalystConverter487.apply(project_udf487.apply(project_arg484));
/* 15305 */         } catch (Exception e) {
/* 15306 */           throw new org.apache.spark.SparkException(project_scalaUDF487.udfErrorMessage(), e);
/* 15307 */         }
/* 15308 */
/* 15309 */         boolean project_isNull1373 = project_result487 == null;
/* 15310 */         double project_value1373 = -1.0;
/* 15311 */         if (!project_isNull1373) {
/* 15312 */           project_value1373 = project_result487;
/* 15313 */         }
/* 15314 */         Object project_arg485 = project_isNull1373 ? null : project_converter489.apply(project_value1373);
/* 15315 */
/* 15316 */         InternalRow project_result486 = null;
/* 15317 */         try {
/* 15318 */           project_result486 = (InternalRow)project_catalystConverter486.apply(project_udf486.apply(project_arg485));
/* 15319 */         } catch (Exception e) {
/* 15320 */           throw new org.apache.spark.SparkException(project_scalaUDF486.udfErrorMessage(), e);
/* 15321 */         }
/* 15322 */
/* 15323 */         boolean project_isNull1372 = project_result486 == null;
/* 15324 */         InternalRow project_value1372 = null;
/* 15325 */         if (!project_isNull1372) {
/* 15326 */           project_value1372 = project_result486;
/* 15327 */         }
/* 15328 */         project_isNull1367 = project_isNull1372;
/* 15329 */         project_value1367 = project_value1372;
/* 15330 */       }
/* 15331 */       if (project_isNull1367) {
/* 15332 */         project_values8[15] = null;
/* 15333 */       } else {
/* 15334 */         project_values8[15] = project_value1367;
/* 15335 */       }
/* 15336 */
/* 15337 */       if (sort_isNull16) {
/* 15338 */         project_values8[16] = null;
/* 15339 */       } else {
/* 15340 */         project_values8[16] = sort_value16;
/* 15341 */       }
/* 15342 */
/* 15343 */       Object project_arg486 = sort_isNull17 ? null : project_converter491.apply(sort_value17);
/* 15344 */
/* 15345 */       Double project_result488 = null;
/* 15346 */       try {
/* 15347 */         project_result488 = (Double)project_catalystConverter488.apply(project_udf488.apply(project_arg486));
/* 15348 */       } catch (Exception e) {
/* 15349 */         throw new org.apache.spark.SparkException(project_scalaUDF488.udfErrorMessage(), e);
/* 15350 */       }
/* 15351 */
/* 15352 */       boolean project_isNull1378 = project_result488 == null;
/* 15353 */       double project_value1378 = -1.0;
/* 15354 */       if (!project_isNull1378) {
/* 15355 */         project_value1378 = project_result488;
/* 15356 */       }
/* 15357 */       boolean project_isNull1376 = false;
/* 15358 */       InternalRow project_value1376 = null;
/* 15359 */       if (!false && project_isNull1378) {
/* 15360 */         final InternalRow project_value1380 = null;
/* 15361 */         project_isNull1376 = true;
/* 15362 */         project_value1376 = project_value1380;
/* 15363 */       } else {
/* 15364 */         Object project_arg487 = sort_isNull17 ? null : project_converter493.apply(sort_value17);
/* 15365 */
/* 15366 */         Double project_result490 = null;
/* 15367 */         try {
/* 15368 */           project_result490 = (Double)project_catalystConverter490.apply(project_udf490.apply(project_arg487));
/* 15369 */         } catch (Exception e) {
/* 15370 */           throw new org.apache.spark.SparkException(project_scalaUDF490.udfErrorMessage(), e);
/* 15371 */         }
/* 15372 */
/* 15373 */         boolean project_isNull1382 = project_result490 == null;
/* 15374 */         double project_value1382 = -1.0;
/* 15375 */         if (!project_isNull1382) {
/* 15376 */           project_value1382 = project_result490;
/* 15377 */         }
/* 15378 */         Object project_arg488 = project_isNull1382 ? null : project_converter492.apply(project_value1382);
/* 15379 */
/* 15380 */         InternalRow project_result489 = null;
/* 15381 */         try {
/* 15382 */           project_result489 = (InternalRow)project_catalystConverter489.apply(project_udf489.apply(project_arg488));
/* 15383 */         } catch (Exception e) {
/* 15384 */           throw new org.apache.spark.SparkException(project_scalaUDF489.udfErrorMessage(), e);
/* 15385 */         }
/* 15386 */
/* 15387 */         boolean project_isNull1381 = project_result489 == null;
/* 15388 */         InternalRow project_value1381 = null;
/* 15389 */         if (!project_isNull1381) {
/* 15390 */           project_value1381 = project_result489;
/* 15391 */         }
/* 15392 */         project_isNull1376 = project_isNull1381;
/* 15393 */         project_value1376 = project_value1381;
/* 15394 */       }
/* 15395 */       if (project_isNull1376) {
/* 15396 */         project_values8[17] = null;
/* 15397 */       } else {
/* 15398 */         project_values8[17] = project_value1376;
/* 15399 */       }
/* 15400 */
/* 15401 */       Object project_arg489 = sort_isNull18 ? null : project_converter494.apply(sort_value18);
/* 15402 */
/* 15403 */       Double project_result491 = null;
/* 15404 */       try {
/* 15405 */         project_result491 = (Double)project_catalystConverter491.apply(project_udf491.apply(project_arg489));
/* 15406 */       } catch (Exception e) {
/* 15407 */         throw new org.apache.spark.SparkException(project_scalaUDF491.udfErrorMessage(), e);
/* 15408 */       }
/* 15409 */
/* 15410 */       boolean project_isNull1386 = project_result491 == null;
/* 15411 */       double project_value1386 = -1.0;
/* 15412 */       if (!project_isNull1386) {
/* 15413 */         project_value1386 = project_result491;
/* 15414 */       }
/* 15415 */       boolean project_isNull1384 = false;
/* 15416 */       InternalRow project_value1384 = null;
/* 15417 */       if (!false && project_isNull1386) {
/* 15418 */         final InternalRow project_value1388 = null;
/* 15419 */         project_isNull1384 = true;
/* 15420 */         project_value1384 = project_value1388;
/* 15421 */       } else {
/* 15422 */         Object project_arg490 = sort_isNull18 ? null : project_converter496.apply(sort_value18);
/* 15423 */
/* 15424 */         Double project_result493 = null;
/* 15425 */         try {
/* 15426 */           project_result493 = (Double)project_catalystConverter493.apply(project_udf493.apply(project_arg490));
/* 15427 */         } catch (Exception e) {
/* 15428 */           throw new org.apache.spark.SparkException(project_scalaUDF493.udfErrorMessage(), e);
/* 15429 */         }
/* 15430 */
/* 15431 */         boolean project_isNull1390 = project_result493 == null;
/* 15432 */         double project_value1390 = -1.0;
/* 15433 */         if (!project_isNull1390) {
/* 15434 */           project_value1390 = project_result493;
/* 15435 */         }
/* 15436 */         Object project_arg491 = project_isNull1390 ? null : project_converter495.apply(project_value1390);
/* 15437 */
/* 15438 */         InternalRow project_result492 = null;
/* 15439 */         try {
/* 15440 */           project_result492 = (InternalRow)project_catalystConverter492.apply(project_udf492.apply(project_arg491));
/* 15441 */         } catch (Exception e) {
/* 15442 */           throw new org.apache.spark.SparkException(project_scalaUDF492.udfErrorMessage(), e);
/* 15443 */         }
/* 15444 */
/* 15445 */         boolean project_isNull1389 = project_result492 == null;
/* 15446 */         InternalRow project_value1389 = null;
/* 15447 */         if (!project_isNull1389) {
/* 15448 */           project_value1389 = project_result492;
/* 15449 */         }
/* 15450 */         project_isNull1384 = project_isNull1389;
/* 15451 */         project_value1384 = project_value1389;
/* 15452 */       }
/* 15453 */       if (project_isNull1384) {
/* 15454 */         project_values8[18] = null;
/* 15455 */       } else {
/* 15456 */         project_values8[18] = project_value1384;
/* 15457 */       }
/* 15458 */
/* 15459 */       Object project_arg492 = sort_isNull19 ? null : project_converter497.apply(sort_value19);
/* 15460 */
/* 15461 */       Double project_result494 = null;
/* 15462 */       try {
/* 15463 */         project_result494 = (Double)project_catalystConverter494.apply(project_udf494.apply(project_arg492));
/* 15464 */       } catch (Exception e) {
/* 15465 */         throw new org.apache.spark.SparkException(project_scalaUDF494.udfErrorMessage(), e);
/* 15466 */       }
/* 15467 */
/* 15468 */       boolean project_isNull1394 = project_result494 == null;
/* 15469 */       double project_value1394 = -1.0;
/* 15470 */       if (!project_isNull1394) {
/* 15471 */         project_value1394 = project_result494;
/* 15472 */       }
/* 15473 */       boolean project_isNull1392 = false;
/* 15474 */       InternalRow project_value1392 = null;
/* 15475 */       if (!false && project_isNull1394) {
/* 15476 */         final InternalRow project_value1396 = null;
/* 15477 */         project_isNull1392 = true;
/* 15478 */         project_value1392 = project_value1396;
/* 15479 */       } else {
/* 15480 */         Object project_arg493 = sort_isNull19 ? null : project_converter499.apply(sort_value19);
/* 15481 */
/* 15482 */         Double project_result496 = null;
/* 15483 */         try {
/* 15484 */           project_result496 = (Double)project_catalystConverter496.apply(project_udf496.apply(project_arg493));
/* 15485 */         } catch (Exception e) {
/* 15486 */           throw new org.apache.spark.SparkException(project_scalaUDF496.udfErrorMessage(), e);
/* 15487 */         }
/* 15488 */
/* 15489 */         boolean project_isNull1398 = project_result496 == null;
/* 15490 */         double project_value1398 = -1.0;
/* 15491 */         if (!project_isNull1398) {
/* 15492 */           project_value1398 = project_result496;
/* 15493 */         }
/* 15494 */         Object project_arg494 = project_isNull1398 ? null : project_converter498.apply(project_value1398);
/* 15495 */
/* 15496 */         InternalRow project_result495 = null;
/* 15497 */         try {
/* 15498 */           project_result495 = (InternalRow)project_catalystConverter495.apply(project_udf495.apply(project_arg494));
/* 15499 */         } catch (Exception e) {
/* 15500 */           throw new org.apache.spark.SparkException(project_scalaUDF495.udfErrorMessage(), e);
/* 15501 */         }
/* 15502 */
/* 15503 */         boolean project_isNull1397 = project_result495 == null;
/* 15504 */         InternalRow project_value1397 = null;
/* 15505 */         if (!project_isNull1397) {
/* 15506 */           project_value1397 = project_result495;
/* 15507 */         }
/* 15508 */         project_isNull1392 = project_isNull1397;
/* 15509 */         project_value1392 = project_value1397;
/* 15510 */       }
/* 15511 */       if (project_isNull1392) {
/* 15512 */         project_values8[19] = null;
/* 15513 */       } else {
/* 15514 */         project_values8[19] = project_value1392;
/* 15515 */       }
/* 15516 */
/* 15517 */       Object project_arg495 = sort_isNull20 ? null : project_converter500.apply(sort_value20);
/* 15518 */
/* 15519 */       Double project_result497 = null;
/* 15520 */       try {
/* 15521 */         project_result497 = (Double)project_catalystConverter497.apply(project_udf497.apply(project_arg495));
/* 15522 */       } catch (Exception e) {
/* 15523 */         throw new org.apache.spark.SparkException(project_scalaUDF497.udfErrorMessage(), e);
/* 15524 */       }
/* 15525 */
/* 15526 */       boolean project_isNull1402 = project_result497 == null;
/* 15527 */       double project_value1402 = -1.0;
/* 15528 */       if (!project_isNull1402) {
/* 15529 */         project_value1402 = project_result497;
/* 15530 */       }
/* 15531 */       boolean project_isNull1400 = false;
/* 15532 */       InternalRow project_value1400 = null;
/* 15533 */       if (!false && project_isNull1402) {
/* 15534 */         final InternalRow project_value1404 = null;
/* 15535 */         project_isNull1400 = true;
/* 15536 */         project_value1400 = project_value1404;
/* 15537 */       } else {
/* 15538 */         Object project_arg496 = sort_isNull20 ? null : project_converter502.apply(sort_value20);
/* 15539 */
/* 15540 */         Double project_result499 = null;
/* 15541 */         try {
/* 15542 */           project_result499 = (Double)project_catalystConverter499.apply(project_udf499.apply(project_arg496));
/* 15543 */         } catch (Exception e) {
/* 15544 */           throw new org.apache.spark.SparkException(project_scalaUDF499.udfErrorMessage(), e);
/* 15545 */         }
/* 15546 */
/* 15547 */         boolean project_isNull1406 = project_result499 == null;
/* 15548 */         double project_value1406 = -1.0;
/* 15549 */         if (!project_isNull1406) {
/* 15550 */           project_value1406 = project_result499;
/* 15551 */         }
/* 15552 */         Object project_arg497 = project_isNull1406 ? null : project_converter501.apply(project_value1406);
/* 15553 */
/* 15554 */         InternalRow project_result498 = null;
/* 15555 */         try {
/* 15556 */           project_result498 = (InternalRow)project_catalystConverter498.apply(project_udf498.apply(project_arg497));
/* 15557 */         } catch (Exception e) {
/* 15558 */           throw new org.apache.spark.SparkException(project_scalaUDF498.udfErrorMessage(), e);
/* 15559 */         }
/* 15560 */
/* 15561 */         boolean project_isNull1405 = project_result498 == null;
/* 15562 */         InternalRow project_value1405 = null;
/* 15563 */         if (!project_isNull1405) {
/* 15564 */           project_value1405 = project_result498;
/* 15565 */         }
/* 15566 */         project_isNull1400 = project_isNull1405;
/* 15567 */         project_value1400 = project_value1405;
/* 15568 */       }
/* 15569 */       if (project_isNull1400) {
/* 15570 */         project_values8[20] = null;
/* 15571 */       } else {
/* 15572 */         project_values8[20] = project_value1400;
/* 15573 */       }
/* 15574 */
/* 15575 */       Object project_arg498 = sort_isNull21 ? null : project_converter503.apply(sort_value21);
/* 15576 */
/* 15577 */       Double project_result500 = null;
/* 15578 */       try {
/* 15579 */         project_result500 = (Double)project_catalystConverter500.apply(project_udf500.apply(project_arg498));
/* 15580 */       } catch (Exception e) {
/* 15581 */         throw new org.apache.spark.SparkException(project_scalaUDF500.udfErrorMessage(), e);
/* 15582 */       }
/* 15583 */
/* 15584 */       boolean project_isNull1410 = project_result500 == null;
/* 15585 */       double project_value1410 = -1.0;
/* 15586 */       if (!project_isNull1410) {
/* 15587 */         project_value1410 = project_result500;
/* 15588 */       }
/* 15589 */       boolean project_isNull1408 = false;
/* 15590 */       InternalRow project_value1408 = null;
/* 15591 */       if (!false && project_isNull1410) {
/* 15592 */         final InternalRow project_value1412 = null;
/* 15593 */         project_isNull1408 = true;
/* 15594 */         project_value1408 = project_value1412;
/* 15595 */       } else {
/* 15596 */         Object project_arg499 = sort_isNull21 ? null : project_converter505.apply(sort_value21);
/* 15597 */
/* 15598 */         Double project_result502 = null;
/* 15599 */         try {
/* 15600 */           project_result502 = (Double)project_catalystConverter502.apply(project_udf502.apply(project_arg499));
/* 15601 */         } catch (Exception e) {
/* 15602 */           throw new org.apache.spark.SparkException(project_scalaUDF502.udfErrorMessage(), e);
/* 15603 */         }
/* 15604 */
/* 15605 */         boolean project_isNull1414 = project_result502 == null;
/* 15606 */         double project_value1414 = -1.0;
/* 15607 */         if (!project_isNull1414) {
/* 15608 */           project_value1414 = project_result502;
/* 15609 */         }
/* 15610 */         Object project_arg500 = project_isNull1414 ? null : project_converter504.apply(project_value1414);
/* 15611 */
/* 15612 */         InternalRow project_result501 = null;
/* 15613 */         try {
/* 15614 */           project_result501 = (InternalRow)project_catalystConverter501.apply(project_udf501.apply(project_arg500));
/* 15615 */         } catch (Exception e) {
/* 15616 */           throw new org.apache.spark.SparkException(project_scalaUDF501.udfErrorMessage(), e);
/* 15617 */         }
/* 15618 */
/* 15619 */         boolean project_isNull1413 = project_result501 == null;
/* 15620 */         InternalRow project_value1413 = null;
/* 15621 */         if (!project_isNull1413) {
/* 15622 */           project_value1413 = project_result501;
/* 15623 */         }
/* 15624 */         project_isNull1408 = project_isNull1413;
/* 15625 */         project_value1408 = project_value1413;
/* 15626 */       }
/* 15627 */       if (project_isNull1408) {
/* 15628 */         project_values8[21] = null;
/* 15629 */       } else {
/* 15630 */         project_values8[21] = project_value1408;
/* 15631 */       }
/* 15632 */
/* 15633 */       Object project_arg501 = sort_isNull22 ? null : project_converter506.apply(sort_value22);
/* 15634 */
/* 15635 */       Double project_result503 = null;
/* 15636 */       try {
/* 15637 */         project_result503 = (Double)project_catalystConverter503.apply(project_udf503.apply(project_arg501));
/* 15638 */       } catch (Exception e) {
/* 15639 */         throw new org.apache.spark.SparkException(project_scalaUDF503.udfErrorMessage(), e);
/* 15640 */       }
/* 15641 */
/* 15642 */       boolean project_isNull1418 = project_result503 == null;
/* 15643 */       double project_value1418 = -1.0;
/* 15644 */       if (!project_isNull1418) {
/* 15645 */         project_value1418 = project_result503;
/* 15646 */       }
/* 15647 */       boolean project_isNull1416 = false;
/* 15648 */       InternalRow project_value1416 = null;
/* 15649 */       if (!false && project_isNull1418) {
/* 15650 */         final InternalRow project_value1420 = null;
/* 15651 */         project_isNull1416 = true;
/* 15652 */         project_value1416 = project_value1420;
/* 15653 */       } else {
/* 15654 */         Object project_arg502 = sort_isNull22 ? null : project_converter508.apply(sort_value22);
/* 15655 */
/* 15656 */         Double project_result505 = null;
/* 15657 */         try {
/* 15658 */           project_result505 = (Double)project_catalystConverter505.apply(project_udf505.apply(project_arg502));
/* 15659 */         } catch (Exception e) {
/* 15660 */           throw new org.apache.spark.SparkException(project_scalaUDF505.udfErrorMessage(), e);
/* 15661 */         }
/* 15662 */
/* 15663 */         boolean project_isNull1422 = project_result505 == null;
/* 15664 */         double project_value1422 = -1.0;
/* 15665 */         if (!project_isNull1422) {
/* 15666 */           project_value1422 = project_result505;
/* 15667 */         }
/* 15668 */         Object project_arg503 = project_isNull1422 ? null : project_converter507.apply(project_value1422);
/* 15669 */
/* 15670 */         InternalRow project_result504 = null;
/* 15671 */         try {
/* 15672 */           project_result504 = (InternalRow)project_catalystConverter504.apply(project_udf504.apply(project_arg503));
/* 15673 */         } catch (Exception e) {
/* 15674 */           throw new org.apache.spark.SparkException(project_scalaUDF504.udfErrorMessage(), e);
/* 15675 */         }
/* 15676 */
/* 15677 */         boolean project_isNull1421 = project_result504 == null;
/* 15678 */         InternalRow project_value1421 = null;
/* 15679 */         if (!project_isNull1421) {
/* 15680 */           project_value1421 = project_result504;
/* 15681 */         }
/* 15682 */         project_isNull1416 = project_isNull1421;
/* 15683 */         project_value1416 = project_value1421;
/* 15684 */       }
/* 15685 */       if (project_isNull1416) {
/* 15686 */         project_values8[22] = null;
/* 15687 */       } else {
/* 15688 */         project_values8[22] = project_value1416;
/* 15689 */       }
/* 15690 */
/* 15691 */       Object project_arg504 = sort_isNull23 ? null : project_converter509.apply(sort_value23);
/* 15692 */
/* 15693 */       Double project_result506 = null;
/* 15694 */       try {
/* 15695 */         project_result506 = (Double)project_catalystConverter506.apply(project_udf506.apply(project_arg504));
/* 15696 */       } catch (Exception e) {
/* 15697 */         throw new org.apache.spark.SparkException(project_scalaUDF506.udfErrorMessage(), e);
/* 15698 */       }
/* 15699 */
/* 15700 */       boolean project_isNull1426 = project_result506 == null;
/* 15701 */       double project_value1426 = -1.0;
/* 15702 */       if (!project_isNull1426) {
/* 15703 */         project_value1426 = project_result506;
/* 15704 */       }
/* 15705 */       boolean project_isNull1424 = false;
/* 15706 */       InternalRow project_value1424 = null;
/* 15707 */       if (!false && project_isNull1426) {
/* 15708 */         final InternalRow project_value1428 = null;
/* 15709 */         project_isNull1424 = true;
/* 15710 */         project_value1424 = project_value1428;
/* 15711 */       } else {
/* 15712 */         Object project_arg505 = sort_isNull23 ? null : project_converter511.apply(sort_value23);
/* 15713 */
/* 15714 */         Double project_result508 = null;
/* 15715 */         try {
/* 15716 */           project_result508 = (Double)project_catalystConverter508.apply(project_udf508.apply(project_arg505));
/* 15717 */         } catch (Exception e) {
/* 15718 */           throw new org.apache.spark.SparkException(project_scalaUDF508.udfErrorMessage(), e);
/* 15719 */         }
/* 15720 */
/* 15721 */         boolean project_isNull1430 = project_result508 == null;
/* 15722 */         double project_value1430 = -1.0;
/* 15723 */         if (!project_isNull1430) {
/* 15724 */           project_value1430 = project_result508;
/* 15725 */         }
/* 15726 */         Object project_arg506 = project_isNull1430 ? null : project_converter510.apply(project_value1430);
/* 15727 */
/* 15728 */         InternalRow project_result507 = null;
/* 15729 */         try {
/* 15730 */           project_result507 = (InternalRow)project_catalystConverter507.apply(project_udf507.apply(project_arg506));
/* 15731 */         } catch (Exception e) {
/* 15732 */           throw new org.apache.spark.SparkException(project_scalaUDF507.udfErrorMessage(), e);
/* 15733 */         }
/* 15734 */
/* 15735 */         boolean project_isNull1429 = project_result507 == null;
/* 15736 */         InternalRow project_value1429 = null;
/* 15737 */         if (!project_isNull1429) {
/* 15738 */           project_value1429 = project_result507;
/* 15739 */         }
/* 15740 */         project_isNull1424 = project_isNull1429;
/* 15741 */         project_value1424 = project_value1429;
/* 15742 */       }
/* 15743 */       if (project_isNull1424) {
/* 15744 */         project_values8[23] = null;
/* 15745 */       } else {
/* 15746 */         project_values8[23] = project_value1424;
/* 15747 */       }
/* 15748 */
/* 15749 */       Object project_arg507 = sort_isNull24 ? null : project_converter512.apply(sort_value24);
/* 15750 */
/* 15751 */       Double project_result509 = null;
/* 15752 */       try {
/* 15753 */         project_result509 = (Double)project_catalystConverter509.apply(project_udf509.apply(project_arg507));
/* 15754 */       } catch (Exception e) {
/* 15755 */         throw new org.apache.spark.SparkException(project_scalaUDF509.udfErrorMessage(), e);
/* 15756 */       }
/* 15757 */
/* 15758 */       boolean project_isNull1434 = project_result509 == null;
/* 15759 */       double project_value1434 = -1.0;
/* 15760 */       if (!project_isNull1434) {
/* 15761 */         project_value1434 = project_result509;
/* 15762 */       }
/* 15763 */       boolean project_isNull1432 = false;
/* 15764 */       InternalRow project_value1432 = null;
/* 15765 */       if (!false && project_isNull1434) {
/* 15766 */         final InternalRow project_value1436 = null;
/* 15767 */         project_isNull1432 = true;
/* 15768 */         project_value1432 = project_value1436;
/* 15769 */       } else {
/* 15770 */         Object project_arg508 = sort_isNull24 ? null : project_converter514.apply(sort_value24);
/* 15771 */
/* 15772 */         Double project_result511 = null;
/* 15773 */         try {
/* 15774 */           project_result511 = (Double)project_catalystConverter511.apply(project_udf511.apply(project_arg508));
/* 15775 */         } catch (Exception e) {
/* 15776 */           throw new org.apache.spark.SparkException(project_scalaUDF511.udfErrorMessage(), e);
/* 15777 */         }
/* 15778 */
/* 15779 */         boolean project_isNull1438 = project_result511 == null;
/* 15780 */         double project_value1438 = -1.0;
/* 15781 */         if (!project_isNull1438) {
/* 15782 */           project_value1438 = project_result511;
/* 15783 */         }
/* 15784 */         Object project_arg509 = project_isNull1438 ? null : project_converter513.apply(project_value1438);
/* 15785 */
/* 15786 */         InternalRow project_result510 = null;
/* 15787 */         try {
/* 15788 */           project_result510 = (InternalRow)project_catalystConverter510.apply(project_udf510.apply(project_arg509));
/* 15789 */         } catch (Exception e) {
/* 15790 */           throw new org.apache.spark.SparkException(project_scalaUDF510.udfErrorMessage(), e);
/* 15791 */         }
/* 15792 */
/* 15793 */         boolean project_isNull1437 = project_result510 == null;
/* 15794 */         InternalRow project_value1437 = null;
/* 15795 */         if (!project_isNull1437) {
/* 15796 */           project_value1437 = project_result510;
/* 15797 */         }
/* 15798 */         project_isNull1432 = project_isNull1437;
/* 15799 */         project_value1432 = project_value1437;
/* 15800 */       }
/* 15801 */       if (project_isNull1432) {
/* 15802 */         project_values8[24] = null;
/* 15803 */       } else {
/* 15804 */         project_values8[24] = project_value1432;
/* 15805 */       }
/* 15806 */
/* 15807 */       Object project_arg510 = sort_isNull25 ? null : project_converter515.apply(sort_value25);
/* 15808 */
/* 15809 */       Double project_result512 = null;
/* 15810 */       try {
/* 15811 */         project_result512 = (Double)project_catalystConverter512.apply(project_udf512.apply(project_arg510));
/* 15812 */       } catch (Exception e) {
/* 15813 */         throw new org.apache.spark.SparkException(project_scalaUDF512.udfErrorMessage(), e);
/* 15814 */       }
/* 15815 */
/* 15816 */       boolean project_isNull1442 = project_result512 == null;
/* 15817 */       double project_value1442 = -1.0;
/* 15818 */       if (!project_isNull1442) {
/* 15819 */         project_value1442 = project_result512;
/* 15820 */       }
/* 15821 */       boolean project_isNull1440 = false;
/* 15822 */       InternalRow project_value1440 = null;
/* 15823 */       if (!false && project_isNull1442) {
/* 15824 */         final InternalRow project_value1444 = null;
/* 15825 */         project_isNull1440 = true;
/* 15826 */         project_value1440 = project_value1444;
/* 15827 */       } else {
/* 15828 */         Object project_arg511 = sort_isNull25 ? null : project_converter517.apply(sort_value25);
/* 15829 */
/* 15830 */         Double project_result514 = null;
/* 15831 */         try {
/* 15832 */           project_result514 = (Double)project_catalystConverter514.apply(project_udf514.apply(project_arg511));
/* 15833 */         } catch (Exception e) {
/* 15834 */           throw new org.apache.spark.SparkException(project_scalaUDF514.udfErrorMessage(), e);
/* 15835 */         }
/* 15836 */
/* 15837 */         boolean project_isNull1446 = project_result514 == null;
/* 15838 */         double project_value1446 = -1.0;
/* 15839 */         if (!project_isNull1446) {
/* 15840 */           project_value1446 = project_result514;
/* 15841 */         }
/* 15842 */         Object project_arg512 = project_isNull1446 ? null : project_converter516.apply(project_value1446);
/* 15843 */
/* 15844 */         InternalRow project_result513 = null;
/* 15845 */         try {
/* 15846 */           project_result513 = (InternalRow)project_catalystConverter513.apply(project_udf513.apply(project_arg512));
/* 15847 */         } catch (Exception e) {
/* 15848 */           throw new org.apache.spark.SparkException(project_scalaUDF513.udfErrorMessage(), e);
/* 15849 */         }
/* 15850 */
/* 15851 */         boolean project_isNull1445 = project_result513 == null;
/* 15852 */         InternalRow project_value1445 = null;
/* 15853 */         if (!project_isNull1445) {
/* 15854 */           project_value1445 = project_result513;
/* 15855 */         }
/* 15856 */         project_isNull1440 = project_isNull1445;
/* 15857 */         project_value1440 = project_value1445;
/* 15858 */       }
/* 15859 */       if (project_isNull1440) {
/* 15860 */         project_values8[25] = null;
/* 15861 */       } else {
/* 15862 */         project_values8[25] = project_value1440;
/* 15863 */       }
/* 15864 */
/* 15865 */       if (sort_isNull27) {
/* 15866 */         project_values8[26] = null;
/* 15867 */       } else {
/* 15868 */         project_values8[26] = sort_value27;
/* 15869 */       }
/* 15870 */       final InternalRow project_value1295 = new org.apache.spark.sql.catalyst.expressions.GenericInternalRow(project_values8);
/* 15871 */       this.project_values8 = null;
/* 15872 */       Object project_arg513 = false ? null : project_converter463.apply(project_value1295);
/* 15873 */
/* 15874 */       InternalRow project_result460 = null;
/* 15875 */       try {
/* 15876 */         project_result460 = (InternalRow)project_catalystConverter460.apply(project_udf460.apply(project_arg513));
/* 15877 */       } catch (Exception e) {
/* 15878 */         throw new org.apache.spark.SparkException(project_scalaUDF460.udfErrorMessage(), e);
/* 15879 */       }
/* 15880 */
/* 15881 */       boolean project_isNull1294 = project_result460 == null;
/* 15882 */       InternalRow project_value1294 = null;
/* 15883 */       if (!project_isNull1294) {
/* 15884 */         project_value1294 = project_result460;
/* 15885 */       }
/* 15886 */       Object project_arg514 = project_isNull1294 ? null : project_converter462.apply(project_value1294);
/* 15887 */
/* 15888 */       InternalRow project_result459 = null;
/* 15889 */       try {
/* 15890 */         project_result459 = (InternalRow)project_catalystConverter459.apply(project_udf459.apply(project_arg514));
/* 15891 */       } catch (Exception e) {
/* 15892 */         throw new org.apache.spark.SparkException(project_scalaUDF459.udfErrorMessage(), e);
/* 15893 */       }
/* 15894 */
/* 15895 */       boolean project_isNull1293 = project_result459 == null;
/* 15896 */       InternalRow project_value1293 = null;
/* 15897 */       if (!project_isNull1293) {
/* 15898 */         project_value1293 = project_result459;
/* 15899 */       }
/* 15900 */       Object project_arg515 = project_isNull1293 ? null : project_converter461.apply(project_value1293);
/* 15901 */
/* 15902 */       InternalRow project_result458 = null;
/* 15903 */       try {
/* 15904 */         project_result458 = (InternalRow)project_catalystConverter458.apply(project_udf458.apply(project_arg515));
/* 15905 */       } catch (Exception e) {
/* 15906 */         throw new org.apache.spark.SparkException(project_scalaUDF458.udfErrorMessage(), e);
/* 15907 */       }
/* 15908 */
/* 15909 */       boolean project_isNull1292 = project_result458 == null;
/* 15910 */       InternalRow project_value1292 = null;
/* 15911 */       if (!project_isNull1292) {
/* 15912 */         project_value1292 = project_result458;
/* 15913 */       }
/* 15914 */       Object project_arg516 = project_isNull1292 ? null : project_converter459.apply(project_value1292);
/* 15915 */       Object project_arg517 = false ? null : project_converter460.apply(2);
/* 15916 */
/* 15917 */       Double project_result457 = null;
/* 15918 */       try {
/* 15919 */         project_result457 = (Double)project_catalystConverter457.apply(project_udf457.apply(project_arg516, project_arg517));
/* 15920 */       } catch (Exception e) {
/* 15921 */         throw new org.apache.spark.SparkException(project_scalaUDF457.udfErrorMessage(), e);
/* 15922 */       }
/* 15923 */
/* 15924 */       boolean project_isNull1291 = project_result457 == null;
/* 15925 */       double project_value1291 = -1.0;
/* 15926 */       if (!project_isNull1291) {
/* 15927 */         project_value1291 = project_result457;
/* 15928 */       }
/* 15929 */       project_holder.reset();
/* 15930 */
/* 15931 */       project_rowWriter.zeroOutNullBytes();
/* 15932 */
/* 15933 */       if (sort_isNull) {
/* 15934 */         project_rowWriter.setNullAt(0);
/* 15935 */       } else {
/* 15936 */         project_rowWriter.write(0, sort_value);
/* 15937 */       }
/* 15938 */
/* 15939 */       if (sort_isNull1) {
/* 15940 */         project_rowWriter.setNullAt(1);
/* 15941 */       } else {
/* 15942 */         project_rowWriter.write(1, sort_value1);
/* 15943 */       }
/* 15944 */
/* 15945 */       if (sort_isNull2) {
/* 15946 */         project_rowWriter.setNullAt(2);
/* 15947 */       } else {
/* 15948 */         project_rowWriter.write(2, sort_value2);
/* 15949 */       }
/* 15950 */
/* 15951 */       if (sort_isNull3) {
/* 15952 */         project_rowWriter.setNullAt(3);
/* 15953 */       } else {
/* 15954 */         project_rowWriter.write(3, sort_value3);
/* 15955 */       }
/* 15956 */
/* 15957 */       if (sort_isNull4) {
/* 15958 */         project_rowWriter.setNullAt(4);
/* 15959 */       } else {
/* 15960 */         project_rowWriter.write(4, sort_value4);
/* 15961 */       }
/* 15962 */
/* 15963 */       if (sort_isNull5) {
/* 15964 */         project_rowWriter.setNullAt(5);
/* 15965 */       } else {
/* 15966 */         project_rowWriter.write(5, sort_value5);
/* 15967 */       }
/* 15968 */
/* 15969 */       if (sort_isNull6) {
/* 15970 */         project_rowWriter.setNullAt(6);
/* 15971 */       } else {
/* 15972 */         project_rowWriter.write(6, sort_value6);
/* 15973 */       }
/* 15974 */
/* 15975 */       if (sort_isNull7) {
/* 15976 */         project_rowWriter.setNullAt(7);
/* 15977 */       } else {
/* 15978 */         project_rowWriter.write(7, sort_value7);
/* 15979 */       }
/* 15980 */
/* 15981 */       if (sort_isNull8) {
/* 15982 */         project_rowWriter.setNullAt(8);
/* 15983 */       } else {
/* 15984 */         project_rowWriter.write(8, sort_value8);
/* 15985 */       }
/* 15986 */
/* 15987 */       if (sort_isNull9) {
/* 15988 */         project_rowWriter.setNullAt(9);
/* 15989 */       } else {
/* 15990 */         project_rowWriter.write(9, sort_value9);
/* 15991 */       }
/* 15992 */
/* 15993 */       if (sort_isNull10) {
/* 15994 */         project_rowWriter.setNullAt(10);
/* 15995 */       } else {
/* 15996 */         project_rowWriter.write(10, sort_value10);
/* 15997 */       }
/* 15998 */
/* 15999 */       if (sort_isNull11) {
/* 16000 */         project_rowWriter.setNullAt(11);
/* 16001 */       } else {
/* 16002 */         project_rowWriter.write(11, sort_value11);
/* 16003 */       }
/* 16004 */
/* 16005 */       if (sort_isNull12) {
/* 16006 */         project_rowWriter.setNullAt(12);
/* 16007 */       } else {
/* 16008 */         project_rowWriter.write(12, sort_value12);
/* 16009 */       }
/* 16010 */
/* 16011 */       if (sort_isNull13) {
/* 16012 */         project_rowWriter.setNullAt(13);
/* 16013 */       } else {
/* 16014 */         project_rowWriter.write(13, sort_value13);
/* 16015 */       }
/* 16016 */
/* 16017 */       if (sort_isNull14) {
/* 16018 */         project_rowWriter.setNullAt(14);
/* 16019 */       } else {
/* 16020 */         project_rowWriter.write(14, sort_value14);
/* 16021 */       }
/* 16022 */
/* 16023 */       if (sort_isNull15) {
/* 16024 */         project_rowWriter.setNullAt(15);
/* 16025 */       } else {
/* 16026 */         project_rowWriter.write(15, sort_value15);
/* 16027 */       }
/* 16028 */
/* 16029 */       if (sort_isNull16) {
/* 16030 */         project_rowWriter.setNullAt(16);
/* 16031 */       } else {
/* 16032 */         project_rowWriter.write(16, sort_value16);
/* 16033 */       }
/* 16034 */
/* 16035 */       if (sort_isNull17) {
/* 16036 */         project_rowWriter.setNullAt(17);
/* 16037 */       } else {
/* 16038 */         project_rowWriter.write(17, sort_value17);
/* 16039 */       }
/* 16040 */
/* 16041 */       if (sort_isNull18) {
/* 16042 */         project_rowWriter.setNullAt(18);
/* 16043 */       } else {
/* 16044 */         project_rowWriter.write(18, sort_value18);
/* 16045 */       }
/* 16046 */
/* 16047 */       if (sort_isNull19) {
/* 16048 */         project_rowWriter.setNullAt(19);
/* 16049 */       } else {
/* 16050 */         project_rowWriter.write(19, sort_value19);
/* 16051 */       }
/* 16052 */
/* 16053 */       if (sort_isNull20) {
/* 16054 */         project_rowWriter.setNullAt(20);
/* 16055 */       } else {
/* 16056 */         project_rowWriter.write(20, sort_value20);
/* 16057 */       }
/* 16058 */
/* 16059 */       if (sort_isNull21) {
/* 16060 */         project_rowWriter.setNullAt(21);
/* 16061 */       } else {
/* 16062 */         project_rowWriter.write(21, sort_value21);
/* 16063 */       }
/* 16064 */
/* 16065 */       if (sort_isNull22) {
/* 16066 */         project_rowWriter.setNullAt(22);
/* 16067 */       } else {
/* 16068 */         project_rowWriter.write(22, sort_value22);
/* 16069 */       }
/* 16070 */
/* 16071 */       if (sort_isNull23) {
/* 16072 */         project_rowWriter.setNullAt(23);
/* 16073 */       } else {
/* 16074 */         project_rowWriter.write(23, sort_value23);
/* 16075 */       }
/* 16076 */
/* 16077 */       if (sort_isNull24) {
/* 16078 */         project_rowWriter.setNullAt(24);
/* 16079 */       } else {
/* 16080 */         project_rowWriter.write(24, sort_value24);
/* 16081 */       }
/* 16082 */
/* 16083 */       if (sort_isNull25) {
/* 16084 */         project_rowWriter.setNullAt(25);
/* 16085 */       } else {
/* 16086 */         project_rowWriter.write(25, sort_value25);
/* 16087 */       }
/* 16088 */
/* 16089 */       if (sort_isNull26) {
/* 16090 */         project_rowWriter.setNullAt(26);
/* 16091 */       } else {
/* 16092 */         project_rowWriter.write(26, sort_value26);
/* 16093 */       }
/* 16094 */
/* 16095 */       if (sort_isNull27) {
/* 16096 */         project_rowWriter.setNullAt(27);
/* 16097 */       } else {
/* 16098 */         project_rowWriter.write(27, sort_value27);
/* 16099 */       }
/* 16100 */
/* 16101 */       if (project_isNull28) {
/* 16102 */         project_rowWriter.setNullAt(28);
/* 16103 */       } else {
/* 16104 */         // Remember the current cursor so that we can calculate how many bytes are
/* 16105 */         // written later.
/* 16106 */         final int project_tmpCursor28 = project_holder.cursor;
/* 16107 */
/* 16108 */         if (project_value28 instanceof UnsafeRow) {
/* 16109 */           final int project_sizeInBytes = ((UnsafeRow) project_value28).getSizeInBytes();
/* 16110 */           // grow the global buffer before writing data.
/* 16111 */           project_holder.grow(project_sizeInBytes);
/* 16112 */           ((UnsafeRow) project_value28).writeToMemory(project_holder.buffer, project_holder.cursor);
/* 16113 */           project_holder.cursor += project_sizeInBytes;
/* 16114 */
/* 16115 */         } else {
/* 16116 */           project_rowWriter1.reset();
/* 16117 */
/* 16118 */           final byte project_fieldName = project_value28.getByte(0);
/* 16119 */           if (project_value28.isNullAt(0)) {
/* 16120 */             project_rowWriter1.setNullAt(0);
/* 16121 */           } else {
/* 16122 */             project_rowWriter1.write(0, project_fieldName);
/* 16123 */           }
/* 16124 */
/* 16125 */           final int project_fieldName1 = project_value28.getInt(1);
/* 16126 */           if (project_value28.isNullAt(1)) {
/* 16127 */             project_rowWriter1.setNullAt(1);
/* 16128 */           } else {
/* 16129 */             project_rowWriter1.write(1, project_fieldName1);
/* 16130 */           }
/* 16131 */
/* 16132 */           final ArrayData project_fieldName2 = project_value28.getArray(2);
/* 16133 */           if (project_value28.isNullAt(2)) {
/* 16134 */             project_rowWriter1.setNullAt(2);
/* 16135 */           } else {
/* 16136 */             // Remember the current cursor so that we can calculate how many bytes are
/* 16137 */             // written later.
/* 16138 */             final int project_tmpCursor31 = project_holder.cursor;
/* 16139 */
/* 16140 */             if (project_fieldName2 instanceof UnsafeArrayData) {
/* 16141 */               final int project_sizeInBytes1 = ((UnsafeArrayData) project_fieldName2).getSizeInBytes();
/* 16142 */               // grow the global buffer before writing data.
/* 16143 */               project_holder.grow(project_sizeInBytes1);
/* 16144 */               ((UnsafeArrayData) project_fieldName2).writeToMemory(project_holder.buffer, project_holder.cursor);
/* 16145 */               project_holder.cursor += project_sizeInBytes1;
/* 16146 */
/* 16147 */             } else {
/* 16148 */               final int project_numElements = project_fieldName2.numElements();
/* 16149 */               project_arrayWriter.initialize(project_holder, project_numElements, 4);
/* 16150 */
/* 16151 */               for (int project_index = 0; project_index < project_numElements; project_index++) {
/* 16152 */                 if (project_fieldName2.isNullAt(project_index)) {
/* 16153 */                   project_arrayWriter.setNullInt(project_index);
/* 16154 */                 } else {
/* 16155 */                   final int project_element = project_fieldName2.getInt(project_index);
/* 16156 */                   project_arrayWriter.write(project_index, project_element);
/* 16157 */                 }
/* 16158 */               }
/* 16159 */             }
/* 16160 */
/* 16161 */             project_rowWriter1.setOffsetAndSize(2, project_tmpCursor31, project_holder.cursor - project_tmpCursor31);
/* 16162 */           }
/* 16163 */
/* 16164 */           final ArrayData project_fieldName3 = project_value28.getArray(3);
/* 16165 */           if (project_value28.isNullAt(3)) {
/* 16166 */             project_rowWriter1.setNullAt(3);
/* 16167 */           } else {
/* 16168 */             // Remember the current cursor so that we can calculate how many bytes are
/* 16169 */             // written later.
/* 16170 */             final int project_tmpCursor33 = project_holder.cursor;
/* 16171 */
/* 16172 */             if (project_fieldName3 instanceof UnsafeArrayData) {
/* 16173 */               final int project_sizeInBytes2 = ((UnsafeArrayData) project_fieldName3).getSizeInBytes();
/* 16174 */               // grow the global buffer before writing data.
/* 16175 */               project_holder.grow(project_sizeInBytes2);
/* 16176 */               ((UnsafeArrayData) project_fieldName3).writeToMemory(project_holder.buffer, project_holder.cursor);
/* 16177 */               project_holder.cursor += project_sizeInBytes2;
/* 16178 */
/* 16179 */             } else {
/* 16180 */               final int project_numElements1 = project_fieldName3.numElements();
/* 16181 */               project_arrayWriter1.initialize(project_holder, project_numElements1, 8);
/* 16182 */
/* 16183 */               for (int project_index1 = 0; project_index1 < project_numElements1; project_index1++) {
/* 16184 */                 if (project_fieldName3.isNullAt(project_index1)) {
/* 16185 */                   project_arrayWriter1.setNullDouble(project_index1);
/* 16186 */                 } else {
/* 16187 */                   final double project_element1 = project_fieldName3.getDouble(project_index1);
/* 16188 */                   project_arrayWriter1.write(project_index1, project_element1);
/* 16189 */                 }
/* 16190 */               }
/* 16191 */             }
/* 16192 */
/* 16193 */             project_rowWriter1.setOffsetAndSize(3, project_tmpCursor33, project_holder.cursor - project_tmpCursor33);
/* 16194 */           }
/* 16195 */         }
/* 16196 */
/* 16197 */         project_rowWriter.setOffsetAndSize(28, project_tmpCursor28, project_holder.cursor - project_tmpCursor28);
/* 16198 */       }
/* 16199 */
/* 16200 */       if (project_isNull183) {
/* 16201 */         project_rowWriter.setNullAt(29);
/* 16202 */       } else {
/* 16203 */         project_rowWriter.write(29, project_value183);
/* 16204 */       }
/* 16205 */
/* 16206 */       if (project_isNull185) {
/* 16207 */         project_rowWriter.setNullAt(30);
/* 16208 */       } else {
/* 16209 */         // Remember the current cursor so that we can calculate how many bytes are
/* 16210 */         // written later.
/* 16211 */         final int project_tmpCursor36 = project_holder.cursor;
/* 16212 */
/* 16213 */         if (project_value185 instanceof UnsafeRow) {
/* 16214 */           final int project_sizeInBytes3 = ((UnsafeRow) project_value185).getSizeInBytes();
/* 16215 */           // grow the global buffer before writing data.
/* 16216 */           project_holder.grow(project_sizeInBytes3);
/* 16217 */           ((UnsafeRow) project_value185).writeToMemory(project_holder.buffer, project_holder.cursor);
/* 16218 */           project_holder.cursor += project_sizeInBytes3;
/* 16219 */
/* 16220 */         } else {
/* 16221 */           project_rowWriter2.reset();
/* 16222 */
/* 16223 */           final byte project_fieldName4 = project_value185.getByte(0);
/* 16224 */           if (project_value185.isNullAt(0)) {
/* 16225 */             project_rowWriter2.setNullAt(0);
/* 16226 */           } else {
/* 16227 */             project_rowWriter2.write(0, project_fieldName4);
/* 16228 */           }
/* 16229 */
/* 16230 */           final int project_fieldName5 = project_value185.getInt(1);
/* 16231 */           if (project_value185.isNullAt(1)) {
/* 16232 */             project_rowWriter2.setNullAt(1);
/* 16233 */           } else {
/* 16234 */             project_rowWriter2.write(1, project_fieldName5);
/* 16235 */           }
/* 16236 */
/* 16237 */           final ArrayData project_fieldName6 = project_value185.getArray(2);
/* 16238 */           if (project_value185.isNullAt(2)) {
/* 16239 */             project_rowWriter2.setNullAt(2);
/* 16240 */           } else {
/* 16241 */             // Remember the current cursor so that we can calculate how many bytes are
/* 16242 */             // written later.
/* 16243 */             final int project_tmpCursor39 = project_holder.cursor;
/* 16244 */
/* 16245 */             if (project_fieldName6 instanceof UnsafeArrayData) {
/* 16246 */               final int project_sizeInBytes4 = ((UnsafeArrayData) project_fieldName6).getSizeInBytes();
/* 16247 */               // grow the global buffer before writing data.
/* 16248 */               project_holder.grow(project_sizeInBytes4);
/* 16249 */               ((UnsafeArrayData) project_fieldName6).writeToMemory(project_holder.buffer, project_holder.cursor);
/* 16250 */               project_holder.cursor += project_sizeInBytes4;
/* 16251 */
/* 16252 */             } else {
/* 16253 */               final int project_numElements2 = project_fieldName6.numElements();
/* 16254 */               project_arrayWriter2.initialize(project_holder, project_numElements2, 4);
/* 16255 */
/* 16256 */               for (int project_index2 = 0; project_index2 < project_numElements2; project_index2++) {
/* 16257 */                 if (project_fieldName6.isNullAt(project_index2)) {
/* 16258 */                   project_arrayWriter2.setNullInt(project_index2);
/* 16259 */                 } else {
/* 16260 */                   final int project_element2 = project_fieldName6.getInt(project_index2);
/* 16261 */                   project_arrayWriter2.write(project_index2, project_element2);
/* 16262 */                 }
/* 16263 */               }
/* 16264 */             }
/* 16265 */
/* 16266 */             project_rowWriter2.setOffsetAndSize(2, project_tmpCursor39, project_holder.cursor - project_tmpCursor39);
/* 16267 */           }
/* 16268 */
/* 16269 */           final ArrayData project_fieldName7 = project_value185.getArray(3);
/* 16270 */           if (project_value185.isNullAt(3)) {
/* 16271 */             project_rowWriter2.setNullAt(3);
/* 16272 */           } else {
/* 16273 */             // Remember the current cursor so that we can calculate how many bytes are
/* 16274 */             // written later.
/* 16275 */             final int project_tmpCursor41 = project_holder.cursor;
/* 16276 */
/* 16277 */             if (project_fieldName7 instanceof UnsafeArrayData) {
/* 16278 */               final int project_sizeInBytes5 = ((UnsafeArrayData) project_fieldName7).getSizeInBytes();
/* 16279 */               // grow the global buffer before writing data.
/* 16280 */               project_holder.grow(project_sizeInBytes5);
/* 16281 */               ((UnsafeArrayData) project_fieldName7).writeToMemory(project_holder.buffer, project_holder.cursor);
/* 16282 */               project_holder.cursor += project_sizeInBytes5;
/* 16283 */
/* 16284 */             } else {
/* 16285 */               final int project_numElements3 = project_fieldName7.numElements();
/* 16286 */               project_arrayWriter3.initialize(project_holder, project_numElements3, 8);
/* 16287 */
/* 16288 */               for (int project_index3 = 0; project_index3 < project_numElements3; project_index3++) {
/* 16289 */                 if (project_fieldName7.isNullAt(project_index3)) {
/* 16290 */                   project_arrayWriter3.setNullDouble(project_index3);
/* 16291 */                 } else {
/* 16292 */                   final double project_element3 = project_fieldName7.getDouble(project_index3);
/* 16293 */                   project_arrayWriter3.write(project_index3, project_element3);
/* 16294 */                 }
/* 16295 */               }
/* 16296 */             }
/* 16297 */
/* 16298 */             project_rowWriter2.setOffsetAndSize(3, project_tmpCursor41, project_holder.cursor - project_tmpCursor41);
/* 16299 */           }
/* 16300 */         }
/* 16301 */
/* 16302 */         project_rowWriter.setOffsetAndSize(30, project_tmpCursor36, project_holder.cursor - project_tmpCursor36);
/* 16303 */       }
/* 16304 */
/* 16305 */       if (project_isNull341) {
/* 16306 */         project_rowWriter.setNullAt(31);
/* 16307 */       } else {
/* 16308 */         // Remember the current cursor so that we can calculate how many bytes are
/* 16309 */         // written later.
/* 16310 */         final int project_tmpCursor43 = project_holder.cursor;
/* 16311 */
/* 16312 */         if (project_value341 instanceof UnsafeRow) {
/* 16313 */           final int project_sizeInBytes6 = ((UnsafeRow) project_value341).getSizeInBytes();
/* 16314 */           // grow the global buffer before writing data.
/* 16315 */           project_holder.grow(project_sizeInBytes6);
/* 16316 */           ((UnsafeRow) project_value341).writeToMemory(project_holder.buffer, project_holder.cursor);
/* 16317 */           project_holder.cursor += project_sizeInBytes6;
/* 16318 */
/* 16319 */         } else {
/* 16320 */           project_rowWriter3.reset();
/* 16321 */
/* 16322 */           final byte project_fieldName8 = project_value341.getByte(0);
/* 16323 */           if (project_value341.isNullAt(0)) {
/* 16324 */             project_rowWriter3.setNullAt(0);
/* 16325 */           } else {
/* 16326 */             project_rowWriter3.write(0, project_fieldName8);
/* 16327 */           }
/* 16328 */
/* 16329 */           final int project_fieldName9 = project_value341.getInt(1);
/* 16330 */           if (project_value341.isNullAt(1)) {
/* 16331 */             project_rowWriter3.setNullAt(1);
/* 16332 */           } else {
/* 16333 */             project_rowWriter3.write(1, project_fieldName9);
/* 16334 */           }
/* 16335 */
/* 16336 */           final ArrayData project_fieldName10 = project_value341.getArray(2);
/* 16337 */           if (project_value341.isNullAt(2)) {
/* 16338 */             project_rowWriter3.setNullAt(2);
/* 16339 */           } else {
/* 16340 */             // Remember the current cursor so that we can calculate how many bytes are
/* 16341 */             // written later.
/* 16342 */             final int project_tmpCursor46 = project_holder.cursor;
/* 16343 */
/* 16344 */             if (project_fieldName10 instanceof UnsafeArrayData) {
/* 16345 */               final int project_sizeInBytes7 = ((UnsafeArrayData) project_fieldName10).getSizeInBytes();
/* 16346 */               // grow the global buffer before writing data.
/* 16347 */               project_holder.grow(project_sizeInBytes7);
/* 16348 */               ((UnsafeArrayData) project_fieldName10).writeToMemory(project_holder.buffer, project_holder.cursor);
/* 16349 */               project_holder.cursor += project_sizeInBytes7;
/* 16350 */
/* 16351 */             } else {
/* 16352 */               final int project_numElements4 = project_fieldName10.numElements();
/* 16353 */               project_arrayWriter4.initialize(project_holder, project_numElements4, 4);
/* 16354 */
/* 16355 */               for (int project_index4 = 0; project_index4 < project_numElements4; project_index4++) {
/* 16356 */                 if (project_fieldName10.isNullAt(project_index4)) {
/* 16357 */                   project_arrayWriter4.setNullInt(project_index4);
/* 16358 */                 } else {
/* 16359 */                   final int project_element4 = project_fieldName10.getInt(project_index4);
/* 16360 */                   project_arrayWriter4.write(project_index4, project_element4);
/* 16361 */                 }
/* 16362 */               }
/* 16363 */             }
/* 16364 */
/* 16365 */             project_rowWriter3.setOffsetAndSize(2, project_tmpCursor46, project_holder.cursor - project_tmpCursor46);
/* 16366 */           }
/* 16367 */
/* 16368 */           final ArrayData project_fieldName11 = project_value341.getArray(3);
/* 16369 */           if (project_value341.isNullAt(3)) {
/* 16370 */             project_rowWriter3.setNullAt(3);
/* 16371 */           } else {
/* 16372 */             // Remember the current cursor so that we can calculate how many bytes are
/* 16373 */             // written later.
/* 16374 */             final int project_tmpCursor48 = project_holder.cursor;
/* 16375 */
/* 16376 */             if (project_fieldName11 instanceof UnsafeArrayData) {
/* 16377 */               final int project_sizeInBytes8 = ((UnsafeArrayData) project_fieldName11).getSizeInBytes();
/* 16378 */               // grow the global buffer before writing data.
/* 16379 */               project_holder.grow(project_sizeInBytes8);
/* 16380 */               ((UnsafeArrayData) project_fieldName11).writeToMemory(project_holder.buffer, project_holder.cursor);
/* 16381 */               project_holder.cursor += project_sizeInBytes8;
/* 16382 */
/* 16383 */             } else {
/* 16384 */               final int project_numElements5 = project_fieldName11.numElements();
/* 16385 */               project_arrayWriter5.initialize(project_holder, project_numElements5, 8);
/* 16386 */
/* 16387 */               for (int project_index5 = 0; project_index5 < project_numElements5; project_index5++) {
/* 16388 */                 if (project_fieldName11.isNullAt(project_index5)) {
/* 16389 */                   project_arrayWriter5.setNullDouble(project_index5);
/* 16390 */                 } else {
/* 16391 */                   final double project_element5 = project_fieldName11.getDouble(project_index5);
/* 16392 */                   project_arrayWriter5.write(project_index5, project_element5);
/* 16393 */                 }
/* 16394 */               }
/* 16395 */             }
/* 16396 */
/* 16397 */             project_rowWriter3.setOffsetAndSize(3, project_tmpCursor48, project_holder.cursor - project_tmpCursor48);
/* 16398 */           }
/* 16399 */         }
/* 16400 */
/* 16401 */         project_rowWriter.setOffsetAndSize(31, project_tmpCursor43, project_holder.cursor - project_tmpCursor43);
/* 16402 */       }
/* 16403 */
/* 16404 */       if (project_isNull498) {
/* 16405 */         project_rowWriter.setNullAt(32);
/* 16406 */       } else {
/* 16407 */         project_rowWriter.write(32, project_value498);
/* 16408 */       }
/* 16409 */
/* 16410 */       if (project_isNull655) {
/* 16411 */         project_rowWriter.setNullAt(33);
/* 16412 */       } else {
/* 16413 */         project_rowWriter.write(33, project_value655);
/* 16414 */       }
/* 16415 */
/* 16416 */       if (project_isNull973) {
/* 16417 */         project_rowWriter.setNullAt(34);
/* 16418 */       } else {
/* 16419 */         project_rowWriter.write(34, project_value973);
/* 16420 */       }
/* 16421 */
/* 16422 */       if (project_isNull1132) {
/* 16423 */         project_rowWriter.setNullAt(35);
/* 16424 */       } else {
/* 16425 */         project_rowWriter.write(35, project_value1132);
/* 16426 */       }
/* 16427 */
/* 16428 */       if (project_isNull1291) {
/* 16429 */         project_rowWriter.setNullAt(36);
/* 16430 */       } else {
/* 16431 */         project_rowWriter.write(36, project_value1291);
/* 16432 */       }
/* 16433 */       project_result515.setTotalSize(project_holder.totalSize());
/* 16434 */       append(project_result515);
/* 16435 */
/* 16436 */       if (shouldStop()) return;
/* 16437 */     }
/* 16438 */   }
/* 16439 */ }

org.codehaus.janino.JaninoRuntimeException: Code of method "processNext()V" of class "org.apache.spark.sql.catalyst.expressions.GeneratedClass$GeneratedIterator" grows beyond 64 KB
	at org.codehaus.janino.CodeContext.makeSpace(CodeContext.java:949)
	at org.codehaus.janino.CodeContext.write(CodeContext.java:877)
	at org.codehaus.janino.CodeContext.writeBranch(CodeContext.java:969)
	at org.codehaus.janino.UnitCompiler.writeBranch(UnitCompiler.java:11091)
	at org.codehaus.janino.UnitCompiler.compileTryWithoutFinally(UnitCompiler.java:2598)
	at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:2492)
	at org.codehaus.janino.UnitCompiler.access$2200(UnitCompiler.java:206)
	at org.codehaus.janino.UnitCompiler$6.visitTryStatement(UnitCompiler.java:1382)
	at org.codehaus.janino.UnitCompiler$6.visitTryStatement(UnitCompiler.java:1370)
	at org.codehaus.janino.Java$TryStatement.accept(Java.java:2750)
	at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:1370)
	at org.codehaus.janino.UnitCompiler.compileStatements(UnitCompiler.java:1450)
	at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:1436)
	at org.codehaus.janino.UnitCompiler.access$1600(UnitCompiler.java:206)
	at org.codehaus.janino.UnitCompiler$6.visitBlock(UnitCompiler.java:1376)
	at org.codehaus.janino.UnitCompiler$6.visitBlock(UnitCompiler.java:1370)
	at org.codehaus.janino.Java$Block.accept(Java.java:2471)
	at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:1370)
	at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:2220)
	at org.codehaus.janino.UnitCompiler.access$1800(UnitCompiler.java:206)
	at org.codehaus.janino.UnitCompiler$6.visitIfStatement(UnitCompiler.java:1378)
	at org.codehaus.janino.UnitCompiler$6.visitIfStatement(UnitCompiler.java:1370)
	at org.codehaus.janino.Java$IfStatement.accept(Java.java:2621)
	at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:1370)
	at org.codehaus.janino.UnitCompiler.compileStatements(UnitCompiler.java:1450)
	at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:1436)
	at org.codehaus.janino.UnitCompiler.access$1600(UnitCompiler.java:206)
	at org.codehaus.janino.UnitCompiler$6.visitBlock(UnitCompiler.java:1376)
	at org.codehaus.janino.UnitCompiler$6.visitBlock(UnitCompiler.java:1370)
	at org.codehaus.janino.Java$Block.accept(Java.java:2471)
	at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:1370)
	at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:1725)
	at org.codehaus.janino.UnitCompiler.access$2100(UnitCompiler.java:206)
	at org.codehaus.janino.UnitCompiler$6.visitWhileStatement(UnitCompiler.java:1381)
	at org.codehaus.janino.UnitCompiler$6.visitWhileStatement(UnitCompiler.java:1370)
	at org.codehaus.janino.Java$WhileStatement.accept(Java.java:2708)
	at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:1370)
	at org.codehaus.janino.UnitCompiler.compileStatements(UnitCompiler.java:1450)
	at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:2811)
	at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:1262)
	at org.codehaus.janino.UnitCompiler.compileDeclaredMethods(UnitCompiler.java:1234)
	at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:538)
	at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:890)
	at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:894)
	at org.codehaus.janino.UnitCompiler.access$600(UnitCompiler.java:206)
	at org.codehaus.janino.UnitCompiler$2.visitMemberClassDeclaration(UnitCompiler.java:377)
	at org.codehaus.janino.UnitCompiler$2.visitMemberClassDeclaration(UnitCompiler.java:369)
	at org.codehaus.janino.Java$MemberClassDeclaration.accept(Java.java:1128)
	at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:369)
	at org.codehaus.janino.UnitCompiler.compileDeclaredMemberTypes(UnitCompiler.java:1209)
	at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:564)
	at org.codehaus.janino.UnitCompiler.compile2(UnitCompiler.java:420)
	at org.codehaus.janino.UnitCompiler.access$400(UnitCompiler.java:206)
	at org.codehaus.janino.UnitCompiler$2.visitPackageMemberClassDeclaration(UnitCompiler.java:374)
	at org.codehaus.janino.UnitCompiler$2.visitPackageMemberClassDeclaration(UnitCompiler.java:369)
	at org.codehaus.janino.Java$AbstractPackageMemberClassDeclaration.accept(Java.java:1309)
	at org.codehaus.janino.UnitCompiler.compile(UnitCompiler.java:369)
	at org.codehaus.janino.UnitCompiler.compileUnit(UnitCompiler.java:345)
	at org.codehaus.janino.SimpleCompiler.compileToClassLoader(SimpleCompiler.java:396)
	at org.codehaus.janino.ClassBodyEvaluator.compileToClass(ClassBodyEvaluator.java:311)
	at org.codehaus.janino.ClassBodyEvaluator.cook(ClassBodyEvaluator.java:229)
	at org.codehaus.janino.SimpleCompiler.cook(SimpleCompiler.java:196)
	at org.codehaus.commons.compiler.Cookable.cook(Cookable.java:91)
	at org.apache.spark.sql.catalyst.expressions.codegen.CodeGenerator$.org$apache$spark$sql$catalyst$expressions$codegen$CodeGenerator$$doCompile(CodeGenerator.scala:935)
	at org.apache.spark.sql.catalyst.expressions.codegen.CodeGenerator$$anon$1.load(CodeGenerator.scala:998)
	at org.apache.spark.sql.catalyst.expressions.codegen.CodeGenerator$$anon$1.load(CodeGenerator.scala:995)
	at org.spark_project.guava.cache.LocalCache$LoadingValueReference.loadFuture(LocalCache.java:3599)
	at org.spark_project.guava.cache.LocalCache$Segment.loadSync(LocalCache.java:2379)
	at org.spark_project.guava.cache.LocalCache$Segment.lockedGetOrLoad(LocalCache.java:2342)
	at org.spark_project.guava.cache.LocalCache$Segment.get(LocalCache.java:2257)
	at org.spark_project.guava.cache.LocalCache.get(LocalCache.java:4000)
	at org.spark_project.guava.cache.LocalCache.getOrLoad(LocalCache.java:4004)
	at org.spark_project.guava.cache.LocalCache$LocalLoadingCache.get(LocalCache.java:4874)
	at org.apache.spark.sql.catalyst.expressions.codegen.CodeGenerator$.compile(CodeGenerator.scala:890)
	at org.apache.spark.sql.execution.WholeStageCodegenExec.doExecute(WholeStageCodegenExec.scala:357)
	at org.apache.spark.sql.execution.SparkPlan$$anonfun$execute$1.apply(SparkPlan.scala:114)
	at org.apache.spark.sql.execution.SparkPlan$$anonfun$execute$1.apply(SparkPlan.scala:114)
	at org.apache.spark.sql.execution.SparkPlan$$anonfun$executeQuery$1.apply(SparkPlan.scala:135)
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)
	at org.apache.spark.sql.execution.SparkPlan.executeQuery(SparkPlan.scala:132)
	at org.apache.spark.sql.execution.SparkPlan.execute(SparkPlan.scala:113)
	at org.apache.spark.sql.execution.SparkPlan.getByteArrayRdd(SparkPlan.scala:225)
	at org.apache.spark.sql.execution.SparkPlan.executeTake(SparkPlan.scala:308)
	at org.apache.spark.sql.execution.CollectLimitExec.executeCollect(limit.scala:38)
	at org.apache.spark.sql.Dataset$$anonfun$org$apache$spark$sql$Dataset$$execute$1$1.apply(Dataset.scala:2371)
	at org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:57)
	at org.apache.spark.sql.Dataset.withNewExecutionId(Dataset.scala:2765)
	at org.apache.spark.sql.Dataset.org$apache$spark$sql$Dataset$$execute$1(Dataset.scala:2370)
	at org.apache.spark.sql.Dataset$$anonfun$org$apache$spark$sql$Dataset$$collect$1.apply(Dataset.scala:2375)
	at org.apache.spark.sql.Dataset$$anonfun$org$apache$spark$sql$Dataset$$collect$1.apply(Dataset.scala:2375)
	at org.apache.spark.sql.Dataset.withCallback(Dataset.scala:2778)
	at org.apache.spark.sql.Dataset.org$apache$spark$sql$Dataset$$collect(Dataset.scala:2375)
	at org.apache.spark.sql.Dataset.collect(Dataset.scala:2351)
	at sparklyr.Utils$.collect(utils.scala:116)
	at sparklyr.Utils.collect(utils.scala)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at sparklyr.Invoke.invoke(invoke.scala:147)
	at sparklyr.StreamHandler.handleMethodCall(stream.scala:136)
	at sparklyr.StreamHandler.read(stream.scala:61)
	at sparklyr.BackendHandler$$anonfun$channelRead0$1.apply$mcV$sp(handler.scala:58)
	at scala.util.control.Breaks.breakable(Breaks.scala:38)
	at sparklyr.BackendHandler.channelRead0(handler.scala:38)
	at sparklyr.BackendHandler.channelRead0(handler.scala:14)
	at io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:105)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:367)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:353)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:346)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:367)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:353)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:293)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:267)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:367)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:353)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:346)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1294)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:367)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:353)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:911)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:131)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:652)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:575)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:489)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:451)
	at io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:140)
	at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:144)
	at java.lang.Thread.run(Thread.java:748)
20/11/28 21:21:13 WARN WholeStageCodegenExec: Whole-stage codegen disabled for this plan:
 *Project [race#31, gender#32, age#33, admission_type_id#34, discharge_disposition_id#35, admission_source_id#36, time_in_hospital#37, num_lab_procedures#38, num_procedures#39, num_medications#40, number_outpatient#41, number_emergency#42, number_inpatient#43, diag_1#44, diag_2#45, diag_3#46, number_diagnoses#47, A1Cresult#48, metformin#49, glipizide#50, glyburide#51, pioglitazone#52, rosiglitazone#53, insulin#54, ... 13 more fields]
+- *Sample 0.7, 1.0, false, 1099
   +- *Sort [race#31 ASC NULLS FIRST, gender#32 ASC NULLS FIRST, age#33 ASC NULLS FIRST, admission_type_id#34 ASC NULLS FIRST, discharge_disposition_id#35 ASC NULLS FIRST, admission_source_id#36 ASC NULLS FIRST, time_in_hospital#37 ASC NULLS FIRST, num_lab_procedures#38 ASC NULLS FIRST, num_procedures#39 ASC NULLS FIRST, num_medications#40 ASC NULLS FIRST, number_outpatient#41 ASC NULLS FIRST, number_emergency#42 ASC NULLS FIRST, number_inpatient#43 ASC NULLS FIRST, diag_1#44 ASC NULLS FIRST, diag_2#45 ASC NULLS FIRST, diag_3#46 ASC NULLS FIRST, number_diagnoses#47 ASC NULLS FIRST, A1Cresult#48 ASC NULLS FIRST, metformin#49 ASC NULLS FIRST, glipizide#50 ASC NULLS FIRST, glyburide#51 ASC NULLS FIRST, pioglitazone#52 ASC NULLS FIRST, rosiglitazone#53 ASC NULLS FIRST, insulin#54 ASC NULLS FIRST, ... 4 more fields], false, 0
      +- InMemoryTableScan [race#31, gender#32, age#33, admission_type_id#34, discharge_disposition_id#35, admission_source_id#36, time_in_hospital#37, num_lab_procedures#38, num_procedures#39, num_medications#40, number_outpatient#41, number_emergency#42, number_inpatient#43, diag_1#44, diag_2#45, diag_3#46, number_diagnoses#47, A1Cresult#48, metformin#49, glipizide#50, glyburide#51, pioglitazone#52, rosiglitazone#53, insulin#54, ... 4 more fields]
            +- InMemoryRelation [race#31, gender#32, age#33, admission_type_id#34, discharge_disposition_id#35, admission_source_id#36, time_in_hospital#37, num_lab_procedures#38, num_procedures#39, num_medications#40, number_outpatient#41, number_emergency#42, number_inpatient#43, diag_1#44, diag_2#45, diag_3#46, number_diagnoses#47, A1Cresult#48, metformin#49, glipizide#50, glyburide#51, pioglitazone#52, rosiglitazone#53, insulin#54, ... 4 more fields], true, 10000, StorageLevel(disk, memory, deserialized, 1 replicas)
                  +- Scan ExistingRDD[race#31,gender#32,age#33,admission_type_id#34,discharge_disposition_id#35,admission_source_id#36,time_in_hospital#37,num_lab_procedures#38,num_procedures#39,num_medications#40,number_outpatient#41,number_emergency#42,number_inpatient#43,diag_1#44,diag_2#45,diag_3#46,number_diagnoses#47,A1Cresult#48,metformin#49,glipizide#50,glyburide#51,pioglitazone#52,rosiglitazone#53,insulin#54,... 4 more fields]

20/11/28 21:21:13 INFO SparkContext: Starting job: collect at utils.scala:116
20/11/28 21:21:13 INFO DAGScheduler: Got job 36 (collect at utils.scala:116) with 1 output partitions
20/11/28 21:21:13 INFO DAGScheduler: Final stage: ResultStage 66 (collect at utils.scala:116)
20/11/28 21:21:13 INFO DAGScheduler: Parents of final stage: List()
20/11/28 21:21:13 INFO DAGScheduler: Missing parents: List()
20/11/28 21:21:13 INFO DAGScheduler: Submitting ResultStage 66 (MapPartitionsRDD[241] at collect at utils.scala:116), which has no missing parents
20/11/28 21:21:13 INFO MemoryStore: Block broadcast_70 stored as values in memory (estimated size 383.4 KB, free 902.7 MB)
20/11/28 21:21:13 INFO MemoryStore: Block broadcast_70_piece0 stored as bytes in memory (estimated size 125.1 KB, free 902.5 MB)
20/11/28 21:21:13 INFO BlockManagerInfo: Added broadcast_70_piece0 in memory on 127.0.0.1:49604 (size: 125.1 KB, free: 903.2 MB)
20/11/28 21:21:13 INFO SparkContext: Created broadcast 70 from broadcast at DAGScheduler.scala:996
20/11/28 21:21:13 INFO DAGScheduler: Submitting 1 missing tasks from ResultStage 66 (MapPartitionsRDD[241] at collect at utils.scala:116)
20/11/28 21:21:13 INFO TaskSchedulerImpl: Adding task set 66.0 with 1 tasks
20/11/28 21:21:15 WARN TaskSetManager: Stage 66 contains a task of very large size (40834 KB). The maximum recommended task size is 100 KB.
20/11/28 21:21:15 INFO TaskSetManager: Starting task 0.0 in stage 66.0 (TID 65, localhost, executor driver, partition 0, PROCESS_LOCAL, 41814877 bytes)
20/11/28 21:21:15 INFO Executor: Running task 0.0 in stage 66.0 (TID 65)
20/11/28 21:21:15 INFO BlockManager: Found block rdd_16_0 locally
20/11/28 21:21:16 INFO CodeGenerator: Code generated in 153.163316 ms
20/11/28 21:21:16 INFO Executor: Finished task 0.0 in stage 66.0 (TID 65). 4554 bytes result sent to driver
20/11/28 21:21:16 INFO TaskSetManager: Finished task 0.0 in stage 66.0 (TID 65) in 3324 ms on localhost (executor driver) (1/1)
20/11/28 21:21:16 INFO TaskSchedulerImpl: Removed TaskSet 66.0, whose tasks have all completed, from pool 
20/11/28 21:21:16 INFO DAGScheduler: ResultStage 66 (collect at utils.scala:116) finished in 3.325 s
20/11/28 21:21:16 INFO DAGScheduler: Job 36 finished: collect at utils.scala:116, took 3.376883 s
20/11/28 21:21:16 INFO CodeGenerator: Code generated in 18.295654 ms
20/11/28 21:21:17 INFO SparkContext: Starting job: count at utils.scala:116
20/11/28 21:21:17 INFO DAGScheduler: Registering RDD 244 (count at utils.scala:116)
20/11/28 21:21:17 INFO DAGScheduler: Got job 37 (count at utils.scala:116) with 1 output partitions
20/11/28 21:21:17 INFO DAGScheduler: Final stage: ResultStage 68 (count at utils.scala:116)
20/11/28 21:21:17 INFO DAGScheduler: Parents of final stage: List(ShuffleMapStage 67)
20/11/28 21:21:17 INFO DAGScheduler: Missing parents: List(ShuffleMapStage 67)
20/11/28 21:21:17 INFO DAGScheduler: Submitting ShuffleMapStage 67 (MapPartitionsRDD[244] at count at utils.scala:116), which has no missing parents
20/11/28 21:21:17 INFO MemoryStore: Block broadcast_71 stored as values in memory (estimated size 29.0 KB, free 902.5 MB)
20/11/28 21:21:17 INFO MemoryStore: Block broadcast_71_piece0 stored as bytes in memory (estimated size 11.0 KB, free 902.5 MB)
20/11/28 21:21:17 INFO BlockManagerInfo: Added broadcast_71_piece0 in memory on 127.0.0.1:49604 (size: 11.0 KB, free: 903.2 MB)
20/11/28 21:21:17 INFO SparkContext: Created broadcast 71 from broadcast at DAGScheduler.scala:996
20/11/28 21:21:17 INFO DAGScheduler: Submitting 1 missing tasks from ShuffleMapStage 67 (MapPartitionsRDD[244] at count at utils.scala:116)
20/11/28 21:21:17 INFO TaskSchedulerImpl: Adding task set 67.0 with 1 tasks
20/11/28 21:21:17 INFO BlockManagerInfo: Removed broadcast_70_piece0 on 127.0.0.1:49604 in memory (size: 125.1 KB, free: 903.4 MB)
20/11/28 21:21:17 INFO ContextCleaner: Cleaned accumulator 3376
20/11/28 21:21:18 WARN TaskSetManager: Stage 67 contains a task of very large size (40834 KB). The maximum recommended task size is 100 KB.
20/11/28 21:21:18 INFO TaskSetManager: Starting task 0.0 in stage 67.0 (TID 66, localhost, executor driver, partition 0, PROCESS_LOCAL, 41814952 bytes)
20/11/28 21:21:18 INFO Executor: Running task 0.0 in stage 67.0 (TID 66)
20/11/28 21:21:19 INFO BlockManager: Found block rdd_16_0 locally
20/11/28 21:21:19 INFO Executor: Finished task 0.0 in stage 67.0 (TID 66). 2434 bytes result sent to driver
20/11/28 21:21:19 INFO TaskSetManager: Finished task 0.0 in stage 67.0 (TID 66) in 2971 ms on localhost (executor driver) (1/1)
20/11/28 21:21:19 INFO TaskSchedulerImpl: Removed TaskSet 67.0, whose tasks have all completed, from pool 
20/11/28 21:21:19 INFO DAGScheduler: ShuffleMapStage 67 (count at utils.scala:116) finished in 2.971 s
20/11/28 21:21:19 INFO DAGScheduler: looking for newly runnable stages
20/11/28 21:21:19 INFO DAGScheduler: running: Set()
20/11/28 21:21:19 INFO DAGScheduler: waiting: Set(ResultStage 68)
20/11/28 21:21:19 INFO DAGScheduler: failed: Set()
20/11/28 21:21:19 INFO DAGScheduler: Submitting ResultStage 68 (MapPartitionsRDD[247] at count at utils.scala:116), which has no missing parents
20/11/28 21:21:19 INFO MemoryStore: Block broadcast_72 stored as values in memory (estimated size 8.9 KB, free 903.0 MB)
20/11/28 21:21:19 INFO MemoryStore: Block broadcast_72_piece0 stored as bytes in memory (estimated size 4.2 KB, free 903.0 MB)
20/11/28 21:21:19 INFO BlockManagerInfo: Added broadcast_72_piece0 in memory on 127.0.0.1:49604 (size: 4.2 KB, free: 903.4 MB)
20/11/28 21:21:19 INFO SparkContext: Created broadcast 72 from broadcast at DAGScheduler.scala:996
20/11/28 21:21:19 INFO DAGScheduler: Submitting 1 missing tasks from ResultStage 68 (MapPartitionsRDD[247] at count at utils.scala:116)
20/11/28 21:21:19 INFO TaskSchedulerImpl: Adding task set 68.0 with 1 tasks
20/11/28 21:21:19 INFO TaskSetManager: Starting task 0.0 in stage 68.0 (TID 67, localhost, executor driver, partition 0, ANY, 5946 bytes)
20/11/28 21:21:19 INFO Executor: Running task 0.0 in stage 68.0 (TID 67)
20/11/28 21:21:19 INFO ShuffleBlockFetcherIterator: Getting 1 non-empty blocks out of 1 blocks
20/11/28 21:21:19 INFO ShuffleBlockFetcherIterator: Started 0 remote fetches in 0 ms
20/11/28 21:21:19 INFO Executor: Finished task 0.0 in stage 68.0 (TID 67). 2200 bytes result sent to driver
20/11/28 21:21:20 INFO TaskSetManager: Finished task 0.0 in stage 68.0 (TID 67) in 11 ms on localhost (executor driver) (1/1)
20/11/28 21:21:20 INFO TaskSchedulerImpl: Removed TaskSet 68.0, whose tasks have all completed, from pool 
20/11/28 21:21:20 INFO DAGScheduler: ResultStage 68 (count at utils.scala:116) finished in 0.013 s
20/11/28 21:21:20 INFO DAGScheduler: Job 37 finished: count at utils.scala:116, took 2.999363 s
20/11/28 21:21:20 INFO SparkSqlParser: Parsing command: SELECT *
FROM `sparklyr_tmp_7504b647_2fbe_48f6_b69d_9d75c8dbb07c`
20/11/28 21:21:36 INFO SparkSqlParser: Parsing command: SELECT *
FROM `sparklyr_tmp_7504b647_2fbe_48f6_b69d_9d75c8dbb07c`
20/11/28 21:29:30 INFO SparkContext: Invoking stop() from shutdown hook
20/11/28 21:29:30 INFO SparkUI: Stopped Spark web UI at http://127.0.0.1:4040
20/11/28 21:29:30 INFO MapOutputTrackerMasterEndpoint: MapOutputTrackerMasterEndpoint stopped!
20/11/28 21:29:30 INFO MemoryStore: MemoryStore cleared
20/11/28 21:29:30 INFO BlockManager: BlockManager stopped
20/11/28 21:29:30 INFO BlockManagerMaster: BlockManagerMaster stopped
20/11/28 21:29:30 INFO OutputCommitCoordinator$OutputCommitCoordinatorEndpoint: OutputCommitCoordinator stopped!
20/11/28 21:29:30 INFO SparkContext: Successfully stopped SparkContext
20/11/28 21:29:30 INFO ShutdownHookManager: Shutdown hook called
20/11/28 21:29:30 INFO ShutdownHookManager: Deleting directory /private/var/folders/kf/_5bjnbzx49n7xxn3jz9qp8f00000gn/T/spark-305bcce2-d420-46fa-b5f8-5330f4bb7098
